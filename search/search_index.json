{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u4e3b\u9875","text":"<p>\u4e3b\u9875\u5728\u8fd9\u91cc</p>"},{"location":"#_1","title":"\u4e3b\u9875","text":""},{"location":"DS_Algo/","title":"\u7b80\u4ecb","text":"<p>\u5206\u4eab\u5b66\u4e60\u5230\u7684\u5404\u79cd\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5\uff0c\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5\u76f8\u5173\u4ee3\u7801\u7531 C/C++ \u3001Python \u5b9e\u73b0\u3002</p>"},{"location":"OSindex/","title":"OSindex","text":"<p>\u4ecb\u7ecd Linux \u5e38\u7528\u5de5\u5177\u3001\u7cfb\u7edf\u8c03\u7528\u3001\u4ee5\u53ca\u64cd\u4f5c\u7cfb\u7edf\u7684\u6982\u5ff5\u3002</p> <p>\u6587\u7ae0\u4e2d\u7cfb\u7edf\u73af\u5883\u4e3a <code>6.5.0-28-generic #29~22.04.1-Ubuntu x86_64 GNU/Linux</code>\u3002</p> <p>\u6587\u4e2d\u51fa\u73b0\u7684\u5185\u6838\u6e90\u7801\u5747\u51fa\u81ea\u7248\u672c <code>linux-2.6.32.19</code> \u7248\u672c\u7684\u5185\u6838\u3002</p>"},{"location":"Algorithm/BinaryLifting/BinaryLifting/","title":"\u500d\u589e","text":""},{"location":"Algorithm/BinaryLifting/BinaryLifting/#_1","title":"\u5b9a\u4e49","text":"<p>\u500d\u589e\u6cd5\uff08\u82f1\u8bed\uff1abinary lifting\uff09\uff0c\u987e\u540d\u601d\u4e49\u5c31\u662f\u7ffb\u500d\u3002\u5b83\u80fd\u591f\u4f7f\u7ebf\u6027\u7684\u5904\u7406\u8f6c\u5316\u4e3a\u5bf9\u6570\u7ea7\u7684\u5904\u7406\uff0c\u5927\u5927\u5730\u4f18\u5316\u65f6\u95f4\u590d\u6742\u5ea6\u3002</p>"},{"location":"Algorithm/BinaryLifting/BinaryLifting/#_2","title":"\u5e94\u7528","text":"<p>\u500d\u589e\u6700\u5e38\u89c1\u7684\u5e94\u7528\u5c31\u662f\u6c42\u6700\u8fd1\u516c\u5171\u7956\u5148\\((LCA)\\)\u95ee\u9898\u548c\u533a\u95f4\u6700\u503c\u95ee\u9898\\((RMQ)\\)</p>"},{"location":"Algorithm/BinaryLifting/BinaryLifting/#lca","title":"\\(LCA\\)","text":""},{"location":"Algorithm/BinaryLifting/BinaryLifting/#_3","title":"\u6734\u7d20\u7b97\u6cd5","text":"<p>\u5148\u5c06\u4e24\u4e2a\u8282\u70b9\u79fb\u52a8\u5230\u540c\u4e00\u5c42\uff0c\u7136\u540e\u8ba9\u4e24\u4e2a\u8282\u70b9\u4e00\u6b65\u4e00\u6b65\u5411\u4e0a\u8df3\uff0c\u76f4\u5230\u4e24\u70b9\u76f8\u9047\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\u6811\u7684\u9ad8\u5ea6\\(O(h)\\) \u3002\u5f53\u6211\u4eec\u8fdb\u884c \\(m(m &lt; 1e6)\\) \u6b21\u67e5\u8be2\uff0c\u4e14\u8282\u70b9\u4e2a\u6570 \\(n &lt; 1e3\\) \u65f6\uff0c\u6734\u7d20\u7b97\u6cd5\u6548\u7387\u5c31\u5f88\u4f4e\u4e86\uff0c\u590d\u6742\u5ea6\u662f \\(O(mh)\\)\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u505a\u4e00\u4e0b\u7b80\u5355\u7684\u4f18\u5316\uff0c\u5c06\u6bcf\u4e2a\u8282\u70b9\u7684\u6bcf\u4e2a\u7956\u5148\u90fd\u8bb0\u5f55\u4e0b\u6765\uff0c\u7528\u6570\u7ec4 \\(f[i][j]\\) \u8bb0\u5f55\uff0c\\(f[i][j]\\) \u8868\u793a\u7b2c \\(i\\) \u4e2a\u8282\u70b9\u7684\u7b2c \\(j\\) \u4e2a\u7956\u5148\uff0c\u8fd9\u6837\u6bcf\u6b21\u67e5\u8be2\u90fd\u662f \\(O(1)\\) \uff0c\u6700\u540e\u590d\u6742\u5ea6\u662f \\(O(n^2+m)\\) \uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u662f \\(O(n^2)\\)\u3002\u4f46\u662f\u5f53 \\(n &lt; 1e5\\)\u65f6\uff0c\u8fd9\u6837\u7a7a\u95f4\u548c\u65f6\u95f4\u90fd\u8981\u8d85\u3002</p>"},{"location":"Algorithm/BinaryLifting/BinaryLifting/#_4","title":"\u500d\u589e","text":"<p>\u500d\u589e\u662f\u5bf9\u6734\u7d20\u7b97\u6cd5\u7684\u4f18\u5316\uff0c\u4ece\u539f\u6765\u7684\u4e00\u6b65\u4e00\u6b65\u8df3\u53d8\u4e3a\u6bcf\u6b21\u8df3 \\(2^j\\) \u6b65\u3002\u6bd4\u5982\u8bf4\u6211\u4eec\u8981\u5411\u4e0a\u8d70 \\(11\\) \u6b65\u53ef\u4ee5\u627e\u5230\u6700\u8fd1\u516c\u5171\u7956\u5148\uff0c\u6211\u4eec\u628a \\(11\\) \u5199\u6210\u4e8c\u8fdb\u7a0b\u7684\u5f62\u5f0f \\((1011)_2\\) \uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5206\u6210\u4e09\u6b21\u8d70\uff0c\u5206\u522b\u8d70 \\(2^3,2^1,2^0\\) \u6b65\u3002\u56e0\u4e3a\u6211\u4eec\u6bcf\u6b21\u53ea\u4f1a\u8d70 \\(2\\) \u5e42\u6b21\u6b65\uff0c\u90a3\u4e48\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\uff0c\u6211\u4eec\u5c31\u4e0d\u5fc5\u8bb0\u5f55\u5176\u6240\u6709\u7956\u5148\uff0c\u800c\u53ea\u8bb0\u5f55\u5176 \\(2\\) \u7684\u5e42\u6b21\u7684\u7956\u5148\uff0c\u8fd9\u6837\u5c31\u51cf\u5c11\u4e86\u5f88\u591a\u4e0d\u5fc5\u8981\u7684\u8ba1\u7b97\u3002\u540c\u65f6\u6211\u4eec \\(f[i][j]\\) \u7684\u542b\u4e49\u53d8\u4e3a\u7b2c \\(i\\) \u4e2a\u8282\u70b9\u7684\u7b2c \\(2^j\\) \u7684\u7956\u5148</p> <p>\u73b0\u5728\u5c31\u8981\u60f3\u529e\u6cd5\u6c42\u51fa \\(f[i][j]\\) \u6570\u7ec4\u3002</p> <p>\u500d\u589e\u6c42 \\(LCA\\) \u5b9e\u73b0\u6bcf\u6b21\u8df3 \\(2^j\\) \u6b65\u7684\u6838\u5fc3\u601d\u60f3\u5c31\u662f\u7b2c \\(i\\) \u4e2a\u8282\u70b9\u7684\u7b2c \\(2^j\\) \u7684\u7956\u5148\u662f \\(i\\) \u8282\u70b9\u7684\u7b2c \\(2^{j-1}\\) \u7684\u7956\u5148\u7684\u7b2c \\(2^{j-1}\\) \u7684\u7956\u5148\u3002\u4e5f\u5c31\u662f\u8bf4\u5c06 \\(2^j\\) \u6b65\u62c6\u6210\u4e24\u4e2a \\(2^{j - 1}\\) \u6b65\u6765\u8d70\u3002\u6839\u636e\u8fd9\u4e2a\u601d\u8def\uff0c\u6211\u4eec\u53ef\u4ee5\u5199\u51fa\u9012\u63a8\u5f0f\uff1a</p> \\[ f[i][j]=f[f[i][j-1]][j-1] \\] <p>\u6709\u4e86 \\(f\\) \u6570\u7ec4\u540e\uff0c\u5c31\u53ef\u4ee5\u6c42 \\(LCA\\) \u4e86\uff0c\u5bf9\u4e8e\u4e24\u4e2a\u8282\u70b9 \\(x,y\\)\uff0c\u6211\u4eec\u9996\u5148\u8981\u5c06\u4e24\u4e2a\u8282\u70b9\u79fb\u52a8\u5230\u540c\u4e00\u6df1\u5ea6\u7684\u4f4d\u7f6e\uff0c\u8fd9\u6837\u53ef\u4ee5\u8ba9\u4e24\u4e2a\u8282\u70b9\u4e00\u8d77\u5411\u4e0a\u8d70\u3002\u79fb\u52a8\u5230\u540c\u4e00\u6df1\u5ea6\u540e\uff0c\u6211\u4eec\u6bcf\u6b21\u5c31\u8981\u8d70\u5c3d\u53ef\u80fd\u5927\u7684\u6b65\uff0c\u4f46\u662f\u53c8\u8981\u4fdd\u8bc1\u4e24\u70b9\u8d70\u540e\u4e0d\u91cd\u5408\uff0c\u76f4\u5230\u4e24\u70b9\u4e0d\u80fd\u8d70\u4e3a\u6b62\uff0c\u6b64\u65f6\u5b83\u4eec\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148\u5c31\u662f\u5b83\u4eec\u7684\u7236\u8282\u70b9\uff0c\u5373 \\(f[x][0]\\space or \\space f[y][0]\\) \u3002</p>"},{"location":"Algorithm/BinaryLifting/BinaryLifting/#rmq","title":"\\(RMQ\\)","text":""},{"location":"Algorithm/BinaryLifting/BinaryLifting/#_5","title":"\u7b80\u4ecb","text":"<p>ST\u8868(Sparse Table\uff0c\u7a00\u758f\u8868)\u662f\u4e00\u79cd\u5229\u7528\u500d\u589e\u601d\u60f3\u6765\u5904\u7406\u53ef\u91cd\u590d\u8d21\u732e\u95ee\u9898\u7684\u6570\u636e\u7ed3\u6784\u3002</p> <p>\u53ef\u91cd\u590d\u8d21\u732e\u95ee\u9898\uff1a\\(x\\space opt\\space x=x\\)\uff0c\u5373\u5bf9\u4e8e\u95ee\u9898\u7684\u7b54\u6848\uff0c\u4e0d\u4f1a\u56e0\u591a\u8ba1\u7b97\u51e0\u6b21\\(x\\)\uff0c\u800c\u6539\u53d8\uff0c\u4f8b\u5982\\(MRQ\\)\u95ee\u9898\u3001\u533a\u95f4\\(gcd\\)\u95ee\u9898\uff0c\u4ed6\u4eec\u6ee1\u8db3\\(max(x,x)=x\\)\uff0c\\(gcd(x,x)=x\\)\u3002\u53e6\u5916\\(opt\\)\u64cd\u4f5c\u8981\u6ee1\u8db3\u7ed3\u5408\u5f8b\uff0c\u5373\u8fd0\u7b97\u7684\u987a\u5e8f\u4e0d\u4f1a\u5bf9\u6700\u7ec8\u7ed3\u679c\u4ea7\u751f\u5f71\u54cd\u3002</p>"},{"location":"Algorithm/BinaryLifting/BinaryLifting/#st","title":"\u3010\u6a21\u677f\u3011ST \u8868","text":"<p>\u8be5\u6a21\u677f\u662f\u4e00\u4e2a\u7ecf\u5178\u7684\\(MRQ\\)\u95ee\u9898\u3002</p> <p>\u66b4\u529b\u505a\u6cd5\u7684\u8bdd\u5c31\u662f\u6bcf\u6b21\u67e5\u8be2\u90fd\u904d\u5386\u533a\u95f4\\([l,r]\\)\uff0c\u6765\u6c42\u6700\u5927\u503c\uff0c\u8fd9\u6837\u5f88\u663e\u7136\u4f1a\u8d85\u65f6\u3002</p>"},{"location":"Algorithm/BinaryLifting/BinaryLifting/#_6","title":"\u500d\u589e","text":"<p>\u6211\u4eec\u53ea\u8bb0\u5f55\u533a\u95f4\\([i,2^j]\\)\u7684\u6700\u5927\u503c\uff0c\u8fd9\u6837\u53ef\u4ee5\u7528\\(O(n\\lg n)\\)\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u6765\u9884\u5904\u7406\uff0c\u6bcf\u6b21\u67e5\u8be2\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f\\(O(\\lg n)\\)\u3002\u6211\u4eec\u7528\u8868\\(st[i][j]\\)\u6765\u8868\u793a\\([i,i + 2^j - 1]\\)\u7684\u533a\u95f4\u6700\u5927\u503c\uff0c\u521d\u59cb\u72b6\u6001\u662f\uff1a</p> \\[ st[i][0]=a_i \\] <p>\u6839\u636e\u5b9a\u4e49\u6211\u4eec\u5f88\u5bb9\u6613\u5199\u51fa\u500d\u589e\u7684\u9012\u63a8\u516c\u5f0f</p> \\[ st[i][j]=max\\{ st[i][j-1],st[i+2^{j-1}][j-1]\\}  \\] <p>\u67e5\u8be2\u7684\u8fc7\u7a0b\u5c31\u548c\\(LCA\\)\u95ee\u9898\u7c7b\u4f3c\uff0c\u6211\u4eec\u5229\u7528 \\(ST\\) \u8868\u4ece \\(l\\) \u79fb\u52a8\u5230 \\(r\\) \u5373\u53ef\u3002</p>"},{"location":"Algorithm/BinaryLifting/Problems/","title":"Exercise","text":"\u9898\u76ee \u96be\u5ea6 \u77e5\u8bc6 \u6700\u8fd1\u516c\u5171\u7956\u5148\uff08LCA\uff09 \u666e\u53ca/\u63d0\u9ad8\u2212 \u6a21\u677f How far away-HDU Calculate"},{"location":"Algorithm/BinarySearch/BinarySearch/","title":"\u4e8c\u5206","text":""},{"location":"Algorithm/BinarySearch/BinarySearch/#_1","title":"\u6574\u6570\u4e8c\u5206","text":""},{"location":"Algorithm/BinarySearch/BinarySearch/#_2","title":"\u672c\u8d28","text":"<p>\u6574\u6570\u4e8c\u5206\uff0c\u5bf9\u4e00\u4e2a\u6709\u5e8f\u533a\u95f4\u8fdb\u884c\u4e8c\u5206\u67e5\u627e\uff0c\u53ef\u4ee5\u627e\u51fa\u7528\u67d0\u4e2a\u6027\u8d28\uff08check\u51fd\u6570\uff09\u5212\u5206\u51fa\u7684\u533a\u95f4\u7684\u4e24\u4e2a\u8fb9\u754c\u70b9\u3002</p> <p>\u6ce8\u610f\uff1a\u8fd9\u91cc\u7684\u6709\u5e8f\u5e76\u4e0d\u5355\u6307\u5177\u6709\u5355\u8c03\u6027\uff0c\u53ea\u8981\u80fd\u5229\u7528\u67d0\u79cd\u6027\u8d28\u628a\u533a\u95f4\u5212\u5206\u4e3a\u4e24\u4e2a\u5b50\u533a\u95f4\u5c31\u7b97\u6709\u5e8f</p> <p>\u6bd4\u5982\uff1a\u5728\\([1\uff0c2\uff0c3\uff0c3\uff0c4]\\)\u8fd9\u4e2a\u6570\u7ec4\u4e2d\uff08\u89c1\u4e0b\u56fe\uff09\uff0c\u7528\u300c\u5927\u4e8e\u7b49\u4e8e3\u300d\u8fd9\u6761\u6027\u8d28\u5212\u5206\u51fa\u7684\u533a\u95f4\u4e3a\uff08\u540e\u4e3a\u4e0b\u6807\uff0c\u4ece1\u5f00\u59cb\uff09\uff1a\\([1 \\sim 2]\\)\u548c\\([3 \\sim 5]\\)\u3002\u53ef\u4ee5\u5229\u7528\u4e8c\u5206\u6765\u786e\u5b9a\u4e0b\u6807\u4e3a\u300c2\u300d\u7684\u8fb9\u754c\u70b9\uff08\u5bf9\u5e94\u539f\u6570\u7ec4\u4e2d\u76842\uff09\u548c\u4e0b\u6807\u4e3a\u300c3\u300d\u7684\u8fb9\u754c\u70b9\uff08\u5bf9\u5e94\u539f\u6570\u7ec4\u4e2d\u5de6\u6570\u7b2c\u4e00\u4e2a3\uff09\u3002</p> <p></p>"},{"location":"Algorithm/BinarySearch/BinarySearch/#_3","title":"\u67e5\u627e\u5de6\u4fa7\u533a\u95f4\u7684\u8fb9\u754c\u70b9","text":"<p>\u60f3\u8981\u67e5\u627e\u5230\u5de6\u4fa7\u7684\u8fb9\u754c\u70b9\u300c2\u300d\uff08\u5c0f\u4e8e3\u7684\u6700\u5927\u503c\uff09\uff0c\u53ef\u4ee5\u7528\u4e0b\u9762\u8fd9\u4e2a\u4e8c\u5206\u6a21\u677f\u3002</p> <pre><code>ll l = 1, r = n;\nwhile(l &lt; r) {\n    ll mid = (l + r + 1) &gt;&gt; 1; // \u8fd9\u91cc\u5199ll\u662f\u9632\u6b62\u6574\u6570\u6ea2\u51fa\n    if(a[mid] &gt;= 3) r = mid - 1; // \u56e0\u4e3a\u5de6\u4fa7\u533a\u57df\u5fc5\u5b9a\u662f\u5c0f\u4e8e3\u7684\uff0c\u5f53\u524d\u7684mid\u4e0d\u53ef\u80fd\u662f\u53f3\u4fa7\u533a\u57df\u7684\u8fb9\u754c\n    else l = mid; // \u5c0f\u4e8e3\u7684mid\u53ef\u80fd\u662f\u7b54\u6848\n}\n\nreturn l; // return r\u4e5f\u53ef\u4ee5\uff0cwhile\u5faa\u73af\u7ed3\u675fl = r\n</code></pre>"},{"location":"Algorithm/BinarySearch/BinarySearch/#_4","title":"\u67e5\u627e\u53f3\u4fa7\u533a\u95f4\u7684\u8fb9\u754c\u70b9","text":"<p>\u60f3\u8981\u67e5\u627e\u5230\u53f3\u4fa7\u7684\u8fb9\u754c\u70b9\u300c3\u300d\uff08\u5927\u4e8e\u7b49\u4e8e3\u7684\u6700\u5c0f\u503c\uff09\uff0c\u53ef\u4ee5\u7528\u4e0b\u9762\u8fd9\u4e2a\u4e8c\u5206\u6a21\u677f\u3002</p> <pre><code>ll l = 1, r = n;\nwhile(l &lt; r) {\n    ll mid = (l + r) &gt;&gt; 1;\n    if(a[mid] &gt;= 3) r = mid; // \u53f3\u4fa7\u533a\u57df\u5fc5\u5b9a\u5927\u4e8e\u7b49\u4e8e3\uff0c\u5f53\u524d\u7684mid\u53ef\u80fd\u662f\u53f3\u4fa7\u533a\u57df\u7684\u8fb9\u754c\n    else l = mid + 1;  // \u5c0f\u4e8e3\u7684mid\u4e0d\u53ef\u80fd\u662f\u7b54\u6848\n}\n\nreturn l; // return r\u4e5f\u53ef\u4ee5\uff0c\u7406\u7531\u540c\u4e0a\n</code></pre> <p>\u4ee3\u7801\u4e2d\u503c\u5f97\u6ce8\u610f\u7684\u70b9\u6709\u4e24\u4e2a\uff1a</p> <p>\u7b2c\u4e00\u4e2a\u662f\\(l\u3001r\\)\u7684\u53bb\u5411\uff0c\u7a76\u7adf\u662f\u53d6\\(mid\\)\u8fd8\u662f\\(mid + 1\\)\uff1f</p> <p>\u5176\u5b9e\uff0c\\(l\\)\u548c\\(r\\)\u51b3\u5b9a\u7684\u533a\u95f4\\([l\u3001r]\\)\u53eb\u505a\u67e5\u627e\u533a\u95f4\uff0c\u5728\u8fd9\u4e2a\u533a\u95f4\u5185\u90e8\u7684\u4efb\u4f55\u4e00\u4e2a\u90fd\u6ee1\u8db3\u88ab\u67e5\u627e\u8fb9\u754c\u7684\u6761\u4ef6\u3002\u56e0\u6b64\uff0c\u53ea\u9700\u8981\u770b\u5f53\u524d\u8fd9\u4e2amid\u662f\u5426\u6ee1\u8db3\u5de6\u4fa7\u8fb9\u754c\u7684\u6761\u4ef6\uff08\u8fd9\u91cc\u662f\\(&lt; 3\\)\uff09\uff0c\u6216\u8005\u662f\u5426\u6ee1\u8db3\u53f3\u4fa7\u8fb9\u754c\u7684\u6761\u4ef6\uff08\u8fd9\u91cc\u662f\\(\\geq 3\\)\uff09\u5c31\u80fd\u786e\u5b9a\u3002\u5982\u679c\u5f53\u524d\u7684mid\u6ee1\u8db3\u88ab\u67e5\u627e\u8fb9\u754c\u7684\u6761\u4ef6\uff0c\u90a3\u4e48\u5c31\u53d6\uff0c\u4e0d\u80fd\u6ee1\u8db3\uff0c\u90a3\u5c31\u53d6\\(mid + 1\\)</p> <p>\u7b2c\u4e8c\u4e2a\u662f\\(mid\\)\u7684\u53d6\u503c\uff0c\u7a76\u7adf\u5185\u90e8\u7684\\(l + r\\)\u8981\u4e0d\u8981\u518d\u52a01\uff1f</p> <p>\u6709\u4e2a\u7b80\u5355\u7c97\u66b4\u7684\u8bb0\u6cd5\uff0c\u53ea\u770b\\(l\\)\uff0c\u5982\u679c\\(l = mid + 1\\)\u8fd9\u91cc\u52a0\u4e861\uff0c\u90a3\u4e48\\(mid\\)\u53d6\u503c\u5c31\u4e0d\u9700\u8981\u52a0\uff0c\u5982\u679c\\(l\\)\u6ca1\u6709\u52a0\uff0c\u90a3\u4e48\\(mid\\)\u7684\u53d6\u503c\u5c31\u52a01\u3002</p> <p>\u5b9e\u9645\u4e0a\u4e5f\u53ef\u4ee5\u7b80\u5355\u6a21\u62df\u4e00\u4e0b\uff0c\u5728\\(l = mid\\)\u65f6\uff0c\u5982\u679c\u51fa\u73b0\u4e86\\(l = r - 1\\)\u7684\u60c5\u51b5\uff0c\u90a3\u4e48\u5982\u679c\\(mid\\)\u7684\u53d6\u503c\u4e0d\u52a01\uff0c\u4f1a\u53d1\u73b0\\(l\\)\u6052\u7b49\u4e8e\\(r - 1\\)\uff08&gt;&gt; 1\u7684\u5411\u4e0b\u53d6\u6574\uff09\uff0c\u5bfc\u81f4\u6b7b\u5faa\u73af\u3002\u53e6\u5916\u4e00\u79cd\u60c5\u51b5\u540c\u7406\u3002</p> <p>\u4e00\u4e9b\u5341\u5206\u7b80\u6613\u7684\u4e8c\u5206\u60c5\u51b5\u4e5f\u53ef\u4ee5\u4f7f\u7528C++STL\u4e2d\u7684lower_bound\u4e0eupper_bound\u51fd\u6570\u6765\u5b9e\u73b0\u3002</p>"},{"location":"Algorithm/BinarySearch/BinarySearch/#_5","title":"\u6574\u6570\u4e8c\u5206\u7684\u5e94\u7528\u573a\u666f","text":""},{"location":"Algorithm/BinarySearch/BinarySearch/#_6","title":"\u6570\u636e\u67e5\u627e","text":"<p>\u5982\u4e0a\u6587\u7684\u4f8b\u5b50\uff0c\u67e5\u627e\u7b2c\u4e00\u4e2a3\u51fa\u73b0\u7684\u4f4d\u7f6e\u6216\u6700\u540e\u4e00\u4e2a3\u51fa\u73b0\u7684\u4f4d\u7f6e\u7b49\u3002\u5728\u6570\u636e\u91cf\u5927\u4e14\u8be2\u95ee\u6b21\u6570\u591a\u65f6\uff0c\u53ef\u4ee5\u5229\u7528\u4e8c\u5206\u5c06\\(O(n*m)\\)\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4f18\u5316\u4e3a\\(O(m*\\ log n)\\)</p> <p>\u63a8\u8350\u5b8c\u6210\u6d1b\u8c37 P2249 \u3010\u6df1\u57fa13.\u4f8b1\u3011\u67e5\u627e</p>"},{"location":"Algorithm/BinarySearch/BinarySearch/#_7","title":"\u4e8c\u5206\u7b54\u6848","text":"<p>\u5bf9\u4e8e\u90e8\u5206\u95ee\u9898\uff0c\u6709\u65f6\u96be\u4ee5\u901a\u8fc7\u9898\u76ee\u7684\u63cf\u8ff0\u6b63\u5411\u5f97\u51fa\u7b54\u6848\uff0c\u4f46\u662f\u53ef\u4ee5\u786e\u5b9a\u7b54\u6848\u6240\u5728\u7684\u533a\u95f4\uff0c\u4e14\u53ef\u4ee5\u5f88\u8f7b\u6613\u5730\u5224\u65ad\u67d0\u4e2a\u7b54\u6848\u662f\u5426\u7b26\u5408\u8981\u6c42\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\u300c\u679a\u4e3e\u7b54\u6848\u300d\u7684\u65b9\u6cd5\u6765\u89e3\u9898\u3002</p> <p>\u5982\u679c\u6070\u597d\u7b54\u6848\u6240\u5728\u7684\u533a\u95f4\u6ee1\u8db3\u67d0\u79cd\u6709\u5e8f\u6027\uff0c\u5373\u53ef\u4ee5\u6839\u636e\u300c\u662f\u5426\u6ee1\u8db3\u9898\u76ee\u8981\u6c42\u300d\u8fd9\u4e2a\u6027\u8d28\u5212\u5206\u4e3a\u4e24\u4e2a\u8fde\u7eed\u7684\u5b50\u533a\u95f4\uff0c\u5c31\u53ef\u4ee5\u901a\u8fc7\u4e8c\u5206\u7684\u65b9\u6cd5\u6765\u4f18\u5316\u679a\u4e3e\u7b54\u6848\u5e26\u6765\u7684\u65f6\u95f4\u5f00\u9500\u3002</p> <p>\u8fd9\u4e00\u7c7b\u578b\u7684\u9898\u76ee\u5f80\u5f80\u6709\u4e00\u4e9b\u7c7b\u4f3c\u4e8e\u5bfb\u627e\u300c\u6700\u5927\u503c\u4e2d\u7684\u6700\u5c0f\u503c\u300d\u3001\u300c\u6700\u5c0f\u503c\u4e2d\u7684\u6700\u5927\u503c\u300d\u7b49\u7684\u63cf\u8ff0</p> <p>\u63a8\u8350\u5b8c\u6210\u6d1b\u8c37 P2240 \u6728\u6750\u52a0\u5de5</p>"},{"location":"Algorithm/BinarySearch/BinarySearch/#_8","title":"\u6d6e\u70b9\u6570\u4e8c\u5206","text":""},{"location":"Algorithm/BinarySearch/BinarySearch/#_9","title":"\u7279\u70b9","text":"<p>\u6d6e\u70b9\u6570\u4e8c\u5206\u6bd4\u6574\u6570\u4e8c\u5206\u7a0d\u5fae\u7b80\u5355\u4e00\u4e9b\u3002\u5229\u7528\u6d6e\u70b9\u6570\u4e8c\u5206\u53ef\u4ee5\u627e\u5230\u4e00\u4e2a\u6ee1\u8db3\u300c\u7cbe\u5ea6\u8981\u6c42\u300d\u7684\u8fb9\u754c\u70b9\u3002</p> <p>\u5229\u7528\u6d6e\u70b9\u6570\u4e8c\u5206\u89e3\u51b3\u95ee\u9898\u7684\u601d\u60f3\u662f\u8ddf\u4e8c\u5206\u7b54\u6848\u4e00\u6837\u7684\uff0c\u6839\u636e\u6570\u636e\u7684\u8303\u56f4\u786e\u5b9a\u7b54\u6848\u7684\u533a\u95f4\\([l, r]\\)\uff0c\u518d\u901a\u8fc7\u4e0d\u65ad\u7f29\u5c0f\u67e5\u627e\u533a\u95f4\uff08\u7cbe\u5ea6\uff09\u6765\u5bfb\u627e\u6ee1\u8db3\u7cbe\u5ea6\u8981\u6c42\u7684\u7b54\u6848\u3002</p> <p>c++\u4ee3\u7801\u5b9e\u73b0\u5982\u4e0b</p> <pre><code>double binarySearch(double l, double r) {\n    const double eps = 1e-5;\n    while(r - l &gt; eps) {\n        double mid = (l + r) / 2;\n        if(check(mid)) l = mid;\n        else r = mid;\n    }\n\n    return l;\n}\n</code></pre> <p>\u63a8\u8350\u5b8c\u6210\u6d1b\u8c37 P1024 [NOIP2001 \u63d0\u9ad8\u7ec4] \u4e00\u5143\u4e09\u6b21\u65b9\u7a0b\u6c42\u89e3</p>"},{"location":"Algorithm/DP/Knapsack/Knapsack/","title":"\u80cc\u5305\u95ee\u9898","text":"<p>\u672c\u6587\u7684\u521b\u4f5c\u53c2\u8003\u4e86\u300a\u80cc\u5305\u4e5d\u8bb2\u300b(\u539f\u6587pdf)\uff0c\u4f7f\u7528 C/C++ \u5b9e\u73b0\u4e86\u6587\u4e2d\u7684\u4f2a\u4ee3\u7801\uff0c\u5e76\u5bf9\u6587\u7ae0\u4e2d\u7684\u601d\u8def\u7ed9\u51fa\u81ea\u5df1\u7684\u7406\u89e3\u3002</p>"},{"location":"Algorithm/DP/Knapsack/Knapsack/#101","title":"1.01\u80cc\u5305","text":""},{"location":"Algorithm/DP/Knapsack/Knapsack/#_1","title":"\u95ee\u9898","text":"<p>01\u80cc\u5305\u6a21\u677f \u6709 \\(N\\) \u4e2a\u7269\u54c1\uff0c\u7b2c \\(i\\) \u4e2a\u7269\u54c1\u7684\u8d39\u7528\u4e3a \\(c_i\\) \uff0c\u4ef7\u503c\u4e3a \\(w_i\\)\uff0c\u6709\u4e00\u4e2a\u5bb9\u91cf\u4e3a \\(V\\) \u7684\u80cc\u5305\uff0c\u6c42\u600e\u6837\u9009\u62e9\u80fd\u83b7\u5f97\u4ef7\u503c\u6700\u5927\u7684\u7269\u54c1\u3002</p>"},{"location":"Algorithm/DP/Knapsack/Knapsack/#_2","title":"\u601d\u8def","text":"<p>\u6211\u4eec\u8bbe \\(dp[i][j]\\) \u4ee3\u8868\u7740\u4ece\u524d \\(i\\) \u4e2a\u7269\u54c1\u4e2d\u9009\u53d6\u7269\u54c1\u88c5\u5230\u5bb9\u91cf\u4e3a \\(j\\) \u7684\u80cc\u5305\u4e2d\u6240\u80fd\u83b7\u5f97\u7684\u6700\u5927\u4ef7\u503c\uff0c\u6839\u636e\u8fd9\u6837\u7684\u5b9a\u4e49\uff0c\u6211\u4eec\u5f88\u5bb9\u6613\u80fd\u5199\u51fa\u4e0b\u9762\u7684\u9012\u63a8\u516c\u5f0f\uff1a</p> \\[ dp[i][j]=max\\{dp[i-1][j],dp[i-1][j-c_i]+w_i \\} \\] <p>\" \u5c06\u524d \\(i\\) \u4ef6\u7269\u54c1\u653e\u5165\u5bb9\u91cf\u4e3a \\(v\\) \u7684\u80cc\u5305\u4e2d \" \u8fd9\u4e2a\u5b50\u95ee\u9898\uff0c\u82e5\u53ea\u8003\u8651\u7b2c \\(i\\) \u4ef6\u7269\u54c1\u7684\u7b56\u7565\uff08\u653e\u6216\u4e0d\u653e\uff09\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u8f6c\u5316\u4e3a\u4e00\u4e2a\u53ea\u7275\u626f\u524d \\(i-1\\) \u4ef6\u7269\u54c1\u7684\u95ee\u9898\u3002\u5982\u679c\u4e0d\u653e\u7b2c \\(i\\) \u4ef6\u7269\u54c1\uff0c\u90a3\u4e48\u95ee\u9898\u5c31\u8f6c\u5316\u4e3a \u201c\u524d \\(i-1\\) \u4ef6\u7269\u54c1\u653e\u5165\u5bb9\u91cf\u4e3a \\(v\\) \u7684\u80cc\u5305\u4e2d\u201d \uff1b\u5982\u679c\u653e\u7b2c \\(i\\) \u4ef6\u7269\u54c1\uff0c\u90a3\u4e48\u95ee\u9898\u5c31\u8f6c\u5316\u4e3a \u201c\u524d \\(i-1\\) \u4ef6\u7269\u54c1\u653e\u5165\u5269\u4e0b\u7684\u5bb9\u91cf\u4e3a \\(v-c_i\\) \u7684\u80cc\u5305\u4e2d\u201d \uff0c \\(dp[i-1][j-c_i]\\)  \u518d\u52a0\u4e0a\u901a\u8fc7\u653e\u5165\u7b2c \\(i\\) \u4ef6\u7269\u54c1\u83b7\u5f97\u7684\u4ef7\u503c \\(w_i\\) \u3002</p>"},{"location":"Algorithm/DP/Knapsack/Knapsack/#_3","title":"\u4e00\u7ef4\u6570\u7ec4\u4f18\u5316\u7a7a\u95f4","text":"<p>\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u518d\u9012\u63a8\u65f6\uff0c\u6211\u4eec\u53ea\u7528\u5230\u4e86 \\(i-1\\) \u7684\u72b6\u6001\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u7ef4\u6570\u7ec4\u53ea\u8bb0\u5f55 \\(i-1\\) \u65f6\u7684\u72b6\u6001\uff0c\u5373\u53ef\u3002\u4f46\u662f\u904d\u5386\u80cc\u5305\u7684\u987a\u5e8f\u8981\u6539\u53d8\u3002\u56e0\u4e3a\u6211\u4eec\u8981\u4fdd\u8bc1 \\(dp[i][j]\\) \u662f\u4ece \\(dp[i-1][j-c_i]\\) \u63a8\u6765\uff0c\u7528\u4e00\u7ef4\u6570\u7ec4\u8868\u793a \\(dp[i-1][j-c_i]\\) \u5c31\u662f \\(dp[j-c_i]\\) \uff0c\u6211\u4eec\u8981\u4fdd\u8bc1\u5728\u63a8 \\(dp[j]\\) \u65f6\uff0c \\(dp[j-c_i]\\) \u662f\u8fd8\u672a\u66f4\u65b0\u7684\u503c\uff0c\u6240\u4ee5\u8981\u4ece\u540e\u5f80\u524d\u904d\u5386\u3002</p> <pre><code>for (int i = 0; i &lt; N; ++i) {\n    for (int j = V ; j &gt;= c[i]; --j) {\n        dp[j] = max(dp[j], dp[j - c[i]] + w[i]);\n    }\n}\n</code></pre>"},{"location":"Algorithm/DP/Knapsack/Knapsack/#2","title":"2.\u5b8c\u5168\u80cc\u5305","text":""},{"location":"Algorithm/DP/Knapsack/Knapsack/#_4","title":"\u95ee\u9898","text":"<p>\u9898\u610f\u57fa\u672c\u4e0e \\(01\\) \u80cc\u5305\u76f8\u540c\uff0c\u53ea\u662f\u6bcf\u4e2a\u7269\u54c1\u53ef\u4ee5\u53d6\u65e0\u9650\u6b21\u3002</p>"},{"location":"Algorithm/DP/Knapsack/Knapsack/#_5","title":"\u601d\u8def","text":"<p>\u56e0\u4e3a\u6bcf\u4e2a\u7269\u54c1\u53ef\u4ee5\u62ff\u65e0\u9650\u6b21\uff0c\u90a3\u4e48\u5c31\u4e0d\u80fd\u5355\u7eaf\u7684\u8003\u8651\u62ff\u6216\u4e0d\u62ff\u3002\u5982\u679c\u6211\u4eec\u8fd8\u662f\u7528 \\(dp[i][j]\\) \u8868\u793a\u524d \\(i\\) \u4ef6\u7269\u54c1\u653e\u5165\u80cc\u5305\u5bb9\u91cf\u4e3a \\(j\\) \u6240\u80fd\u83b7\u5f97\u7684\u6700\u5927\u503c\u7684\u8bdd\uff0c\u5f88\u5bb9\u6613\u5199\u51fa\u4e0b\u9762\u7684\u9012\u63a8\u5f0f\uff1a</p> \\[ dp[i][j]=max\\{dp[i-1][j-kc_i]+kw_i,0\\le kc_i\\le j \\} \\] <p>\u90a3\u4e48\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u4f1a\u5f88\u9ad8\uff0c\u8fd9\u6837\u663e\u7136\u4e0d\u884c\u3002</p> <p>\u5728\u6eda\u52a8\u6570\u7ec4\u4f18\u5316 \\(01\\) \u80cc\u5305\u65f6\uff0c\u6211\u4eec\u8981\u5012\u7740\u904d\u5386\u80cc\u5305\u5927\u5c0f\uff0c\u8fd9\u6837\u505a\u7684\u76ee\u7684\u662f\u5728\u63a8 \\(dp[j]\\) \u65f6 \\(dp[j-c_i]\\) \u7684\u503c\u8fd8\u672a\u66f4\u65b0\uff0c\u800c\u6211\u4eec\u601d\u8003\u4e00\u4e0b\uff0c\u66f4\u65b0\u5176\u5b9e\u4ee3\u8868\u7740\u9009\u53d6\u8be5\u7269\u54c1\uff0c\u90a3\u5982\u679c\u6211\u4eec\u6b63\u7740\u904d\u5386\u80cc\u5305\u5bb9\u91cf\uff0c\u8fd9\u4ee3\u8868\u7740\u6bcf\u5f53\u80fd\u88c5\u4e0b\u4e00\u4e2a\u8be5\u7269\u54c1\u6211\u4eec\u5c31\u9009\u53d6\uff0c\u5c31\u8fbe\u5230\u4e86\u6211\u4eec\u8981\u591a\u6b21\u9009\u53d6\u7684\u76ee\u7684\u3002\u90a3\u4e48\u9012\u63a8\u516c\u5f0f\u5c31\u548c \\(01\\) \u80cc\u5305\u76f8\u540c\uff0c\u53ea\u9700\u8981\u6539\u4e00\u4e0b\u904d\u5386\u987a\u5e8f\u5373\u53ef\u3002</p> <pre><code>for (int i = 0; i &lt; N; ++i) {\n    for (int j = c[i]; j &lt;= V; ++j) {\n        dp[j] = max(dp[j], dp[j - c[i]] + w[i]);\n    }\n}\n</code></pre>"},{"location":"Algorithm/DP/Knapsack/Knapsack/#3","title":"3.\u591a\u91cd\u80cc\u5305","text":""},{"location":"Algorithm/DP/Knapsack/Knapsack/#_6","title":"\u95ee\u9898","text":"<p>\u591a\u91cd\u80cc\u5305\u6a21\u677f \u9898\u610f\u8fd8\u662f\u548c \\(01\\) \u80cc\u5305\u76f8\u540c\uff0c\u53ea\u662f\u6bcf\u4e2a\u7269\u54c1\u53ea\u6709 \\(n_i\\) \u4ef6\u53ef\u7528\u3002</p>"},{"location":"Algorithm/DP/Knapsack/Knapsack/#_7","title":"\u601d\u8def","text":"<p>\u66b4\u529b\u7684\u601d\u8def\u662f\uff0c\u6211\u4eec\u5c06 \\(n_i\\) \u4e2a\u7269\u54c1\u62c6\u6210 \\(01\\) \u80cc\u5305\u4e2d\u7684 \\(n_i\\) \u4e2a\u4e0d\u540c\u7684\u7269\u54c1\u3002</p> <pre><code>for (int i = 0; i &lt; N; ++i) {\n    for (int j = V; j &gt;= 0; --j) {\n        for (int k = 0; k &lt;= n[i]; ++k) {\n            if (j &gt;= k * c[i])\n                dp[i][j] = max(dp[i - 1][j], dp[i - 1][j - k * c[i]] + k * w[i]);\n            else dp[i][j] = dp[i - 1][j];\n        }\n    }\n}\n</code></pre> <p>\u8fd9\u91cc\u4e5f\u53ef\u7528\u4e00\u7ef4\u6570\u7ec4\u5bf9\u5176\u7a7a\u95f4\u590d\u6742\u5ea6\u8fdb\u884c\u4f18\u5316</p> <pre><code>for (int i = 0; i &lt; N; ++i) {\n    for (int j = V ; j &gt; 0; --j) {\n        for (int k = 0; k &lt;= n[i]; ++k) {\n            if (k * c[i] &lt;= j)\n                dp[j] = max(dp[j], dp[j - k * c[i]] + k * w[i]);\n        }\n    }\n}\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u662f \\(O(V\\cdot \\sum n_i)\\) \uff0c\u8fd9\u6837\u7684\u590d\u6742\u5ea6\u4e0d\u662f\u5f88\u8ba9\u4eba\u6ee1\u610f\u3002</p>"},{"location":"Algorithm/DP/Knapsack/Knapsack/#_8","title":"\u4e8c\u8fdb\u5236\u62c6\u5206\u4f18\u5316","text":"<p>\u8fd9\u91cc\u53ef\u4ee5\u7528\u4e8c\u8fdb\u5236\u62c6\u89e3\u7684\u65b9\u6cd5\u8fdb\u884c\u4f18\u5316\u3002\u6211\u4eec\u8981\u5c06 \\(n_i\\) \u62c6\u6210\u82e5\u5e72\u4e2a\u6570\uff0c\u5e76\u4e14\u8fd9\u4e9b\u6570\u53ef\u4e5f\u7ec4\u6210 \\([0,n_i]\\) \u4e4b\u95f4\u7684\u6240\u6709\u6570\u3002\u53ef\u4ee5\u5c06 \\(n_i\\) \u62c6\u4e3a \\(1,2,4,\\dots,2^{k-1},n_i-2^k+1\\) \uff0c\u4e14 \\(k\\) \u662f\u6ee1\u8db3 \\(n_i-2^k+1&gt;0\\) \u7684\u6700\u5927\u6574\u6570\u3002\u62c6\u6210\u8fd9\u6837\u7684\u5e8f\u5217\uff0c\u6211\u4eec\u4e00\u5b9a\u53ef\u4ee5\u8868\u793a \\([1,2^k]\\) \u7684\u6240\u6709\u6570\u7ec4\uff0c\u5269\u4e0b \\((2^k,n_i]\\) \u7684\u6570\u5b57\uff0c\u53ef\u4ee5\u901a\u8fc7\u52a0\u4e0a \\(n_i-2^k+1\\) \u6765\u8868\u793a\u3002</p> <pre><code>for (int i = 0; i &lt; N; ++i) {\n    int nn = n[i], no;\n    for (int k = 0; nn; ++k) {\n        no = min(nn, (1 &lt;&lt; k));\n        nn = max(0, nn - (1 &lt;&lt; k));\n        for (int j = V; j &gt;= no*c[i]; --j)\n                dp[j] = max(dp[j], dp[j - no * c[i]] + no * w[i]);\n    }\n}\n</code></pre> <p>\u8fd9\u6837\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u4f18\u5316\u5230 \\(O(V\\cdot \\sum (\\log n_i))\\) \u3002</p>"},{"location":"Algorithm/DP/Knapsack/Knapsack/#_9","title":"\u5355\u8c03\u961f\u5217\u4f18\u5316","text":"<p>\u8fd9\u91cc\u8fd8\u53ef\u4ee5\u7528\u5355\u8c03\u961f\u5217\u8fdb\u884c\u4f18\u5316\u3002</p> <p>\u6211\u4eec\u5f88\u5bb9\u6613\u53ef\u4ee5\u53d1\u73b0 \\(dp[j]\\) \u662f\u4ece \\(max\\{dp[j-c_i],dp[j-2c_i],dp[j-3c_i],\\cdots,j-n_ic_i\\}\\) \u63a8\u5bfc\u5f97\u6765\u7684\uff0c\u800c\u8fd9\u4e9b\u80cc\u5305\u5bb9\u91cf\u6ee1\u8db3 \\(j\\equiv j-c_i\\equiv j-2c_i\\equiv \\cdots \\equiv j-n_ic_i(mod\\ c_i)\\) \uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5c06\u80cc\u5305\u7684\u5bb9\u91cf \\(j\\) \u5212\u5206\u4e3a \\(c_i\\) \u7c7b\uff0c\u5373 \\(\\{0,1,2,\\cdots,c_i-1\\}\\) \uff0c\u5176\u4e2d\u6bcf\u7c7b\u4e2d\u7684\u72b6\u6001\u53ea\u80fd\u7531\u540c\u7c7b\u4e2d\u7684\u72b6\u6001\u63a8\u5bfc\u7684\u6765\u3002</p> <p>\u6211\u4eec\u5c06\u6bcf\u4e00\u7c7b\u72b6\u6001\u5355\u72ec\u62ff\u51fa\u6765\u8fdb\u884c\u63a8\u5bfc\u3002\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u9012\u63a8\u5f0f\uff1a</p> \\[ dp[j]=max\\{dp[k]+\\frac{w_i(j-k)}{c_i}\\mid k = j - xc_i,0 \\leq x &lt; \\frac{j}{c_i}\\} \\] <p>\u6709\u9012\u63a8\u5f0f\u53ef\u77e5\uff0c\u6211\u4eec\u8981\u6c42\u5f97\u5c31\u662f \\((j-n_ic_i,j]\\) \uff0c\u4e4b\u95f4\u4e0a\u5f0f\u7684\u6700\u5927\u503c\uff0c\u8fd9\u4e0d\u5c31\u662f\u7ef4\u62a4\u4e00\u4e2a\u6ed1\u52a8\u7a97\u53e3\u6c42\u533a\u95f4\u6700\u5927\u503c\u561b\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u5355\u8c03\u961f\u5217\u6765\u7ef4\u62a4\u3002\u90a3\u4e48\u95ee\u9898\u53c8\u6765\u4e86\uff0c\u8fd9\u9012\u63a8\u5f0f\u4e2d\u6709 \\(j\\) \u5440\uff0c\u533a\u95f4\u5143\u7d20\u662f\u4e2a\u53d8\u91cf\uff0c\u8fd9\u600e\u4e48\u7528\u5355\u8c03\u961f\u5217\u6765\u7ef4\u62a4\uff1f \u5f88\u7b80\u5355\uff0c\u6211\u4eec\u5c06\u4e0a\u5f0f\u4e2d \\(j\\) \u4ece \\(max\\) \u4e2d\u63d0\u51fa\u6765\u5373\u53ef:</p> \\[ dp[j]=max\\{dp[k]-\\frac{w_ik}{c_i}\\mid k = j - xc_i,0 \\leq x &lt; \\frac{j}{c_i}\\}+\\frac{w_ij}{c_i} \\] <p>\u8fd9\u6837\u5355\u8c03\u961f\u5217\u7ef4\u62a4\u4e0a\u5f0f\u4e2d \\(max\\) \u8868\u8fbe\u5f0f\u4e2d\u7684\u503c\uff0c \\(dp[j]\\) \u7684\u503c \\(O(1)\\) \u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u53ef\u4ee5\u8ba1\u7b97\u51fa\u6765\u3002</p> <p>\u5b9e\u73b0\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679c\u8981\u7528\u4e00\u7ef4\u6570\u7ec4\u4f18\u5316\u7a7a\u95f4\uff0c\u6211\u4eec\u5c31\u8981\u4f7f\u7528\u6eda\u52a8\u6570\u7ec4\uff0c\u800c\u4e0d\u80fd\u50cf \\(01\\) \u80cc\u5305\u90a3\u6837\u5012\u7740\u904d\u5386\uff0c\u56e0\u4e3a\u6211\u4eec\u8981\u4f7f\u7528\u5355\u8c03\u961f\u5217\uff0c\u5012\u7740\u904d\u5386\u7684\u8bdd\u5355\u8c03\u961f\u5217\u4e0d\u597d\u5b9e\u73b0\u3002</p> <pre><code>for (int i = 0; i &lt; N; ++i) {\n    cin &gt;&gt; w &gt;&gt; c &gt;&gt; n;\n    //\u6eda\u52a8\u6570\u7ec4\u62f7\u8d1d\n    memcpy(dp2, dp1, sizeof dp2);\n    for (int k = 0; k &lt; c; ++k) {\n        //\u7ef4\u62a4\u4e00\u4e2a\u5355\u8c03\u961f\u5217\n        int hh = 0, tt = -1;\n        for (int j = k; j &lt;= V; j += c) {\n            if (hh &lt;= tt &amp;&amp; j - q[hh] &gt; n * c)++hh;\n            if (hh &lt;= tt)dp1[j] = max(dp2[j], dp2[q[hh]] + (j - q[hh]) * w / c);\n            while (hh &lt;= tt &amp;&amp; dp2[j] - j  * w / c &gt; dp2[q[tt]] - q[tt] * w / c)--tt;\n            q[++tt] = j;\n        }\n    }\n}\n</code></pre> <p>\u8fd9\u6837\u4f18\u5316\u540e\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(NV)\\) \u3002</p>"},{"location":"Algorithm/DP/Knapsack/Knapsack/#4","title":"4.\u6df7\u5408\u80cc\u5305","text":""},{"location":"Algorithm/DP/Knapsack/Knapsack/#_10","title":"\u95ee\u9898","text":"<p>\u6df7\u5408\u80cc\u5305\uff0c\u987e\u540d\u601d\u4e49\uff0c\u7ed9\u5b9a\u7684\u7269\u54c1\u4e2d\u6709\u7684\u53ea\u80fd\u53d6\u4e00\u6b21\uff08 \\(01\\) \u80cc\u5305\uff09\uff0c\u6709\u7684\u53ef\u4ee5\u53d6\u65e0\u9650\u6b21\uff08\u5b8c\u5168\u80cc\u5305\uff09\uff0c\u6709\u7684\u80fd\u53d6 \\(n_i\\) \u6b21\uff08\u591a\u91cd\u80cc\u5305\uff09\u3002</p>"},{"location":"Algorithm/DP/Knapsack/Knapsack/#_11","title":"\u601d\u8def","text":"<p>\u8fd9\u6837\u7684\u95ee\u9898\u4e5f\u5f88\u7b80\u5355\uff0c\u5bf9\u4e8e \\(01\\) \u80cc\u5305\u7684\u7269\u54c1\u5c31\u7528 \\(01\\) \u80cc\u5305\u7684\u4ee3\u7801\uff0c\u5bf9\u4e8e\u5b8c\u5168\u80cc\u5305\u7684\u7269\u54c1\u5c31\u7528\u5b8c\u5168\u80cc\u5305\u7684\u4ee3\u7801\uff0c\u5bf9\u4e8e\u591a\u91cd\u80cc\u5305\u7684\u7269\u54c1\u5c31\u7528\u591a\u91cd\u80cc\u5305\u7684\u4ee3\u7801\u3002\u8fd9\u91cc\u5c31\u4e0d\u7ed9\u51fa\u793a\u4f8b\u4ee3\u7801\u4e86\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f \\(O(NV)\\) </p>"},{"location":"Algorithm/DP/Knapsack/Knapsack/#5","title":"5.\u4e8c\u7ef4\u8d39\u7528\u80cc\u5305","text":""},{"location":"Algorithm/DP/Knapsack/Knapsack/#_12","title":"\u95ee\u9898","text":"<p>\u8be5\u95ee\u9898\u4e2d\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4ef6\u7269\u54c1\uff0c\u5177\u6709\u4e24\u79cd\u4e0d\u540c\u7684\u8d39\u7528\uff0c\u9009\u62e9\u8fd9\u4ef6\u7269\u54c1\u5fc5\u987b\u540c\u65f6\u4ed8\u51fa\u8fd9\u4e24\u79cd\u4ee3\u4ef7\uff1b\u5bf9\u4e8e\u6bcf\u79cd\u4ee3\u4ef7\u90fd\u6709\u4e00\u4e2a\u53ef\u4ed8\u51fa\u7684\u6700\u5927\u503c\uff08\u80cc\u5305\u5bb9\u91cf\uff09\u3002\u95ee\u600e\u6837\u9009\u62e9\u7269\u54c1\u53ef\u4ee5\u5f97\u5230\u6700\u5927\u7684\u4ef7\u503c\u3002\u4e24\u79cd\u53ef\u4ed8\u51fa\u7684\u4ee3\u4ef7\u6700\u5927\u503c\u4e3a \\(V_1,V_2\\) </p>"},{"location":"Algorithm/DP/Knapsack/Knapsack/#_13","title":"\u601d\u8def","text":""},{"location":"Algorithm/DP/Knapsack/Knapsack/#01","title":"01\u80cc\u5305","text":"<p>\u6a21\u677f\u9898 \u8d39\u7528\u52a0\u4e86\u4e00\u4e2a\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u76f4\u63a5\u5c06\u9012\u63a8\u7684\u5f0f\u5b50\u4e5f\u52a0\u4e00\u7ef4 \\(dp[i][j][k]\\) \uff0c \\(i\\) \u662f\u7269\u54c1\u4e0b\u6807\uff0c \\(j\u3001k\\) \u662f\u4e24\u4e2a\u8d39\u7528\uff0c\u5f88\u5bb9\u6613\u5199\u51fa\u7c7b\u4f3c \\(01\\) \u80cc\u5305\u7684\u9012\u63a8\u5f0f\uff1a</p> \\[ dp[i][j][k]=max\\{dp[i-1][j][k],dp[i-1][j-c_{1i}][k-c_{2i}]+w_i\\} \\] <pre><code>for (int i = 0; i &lt; N; ++i) \n    for (int j = c1[i]; j &lt;= V1; ++j) \n        for (int k = c2[i]; k &lt;= V2; ++k) \n            dp[i][j][k] = max(dp[i - 1][j][k], dp[i - 1][j - c1[i]][k - c2[i]] + w[i]);\n</code></pre> <p>\u53ef\u4ee5\u53ea\u7ef4\u62a4\u6700\u8fd1\u7684\u72b6\u6001\uff0c\u8fdb\u800c\u5c06\u6570\u7ec4\u964d\u4e00\u7ef4</p> <pre><code>for (int i = 0; i &lt; N; ++i)\n    for (int j = V1; j &gt;= c1[i]; --j) \n        for (int k = V2; k &gt;= c2[i]; --k) \n            dp[j][k] = max(dp[j][k], dp[j - c1[i]][k - c2[i]] + w[i]);\n</code></pre>"},{"location":"Algorithm/DP/Knapsack/Knapsack/#_14","title":"\u5b8c\u5168\u80cc\u5305","text":"<p>\u5bf9\u4e8e\u4e8c\u7ef4\u8d39\u7528\u7684\u591a\u91cd\u80cc\u5305\uff0c\u548c\u4e00\u7ef4\u7684\u4e00\u6837\uff0c\u53ea\u9700\u8981\u6539\u53d8 \\(01\\) \u80cc\u5305\u7684\u7684\u904d\u5386\u987a\u5e8f\u5373\u53ef</p> <pre><code>for (int i = 0; i &lt; N; ++i) \n    for (int j = c1[i]; j &lt;= V1; ++j) \n        for (int k = c2[i]; k &lt;= V2; ++k) \n            dp[j][k] = max(dp[j][k], dp[j - c1[i]][k - c2[i]] + w[i]);\n</code></pre>"},{"location":"Algorithm/DP/Knapsack/Knapsack/#_15","title":"\u591a\u91cd\u80cc\u5305","text":"<p>\u548c\u4e00\u7ef4\u7684\u7c7b\u4f3c\uff0c\u66b4\u529b\u7684\u505a\u6cd5\u5c31\u662f\u8f6c\u5316\u4e3a \\(01\\) \u80cc\u5305</p> <pre><code>for (int i = 0; i &lt; N; ++i) \n    for (int f = 1; f &lt;= n[i]; ++f) \n        for (int j = V1; j &gt;= c1[i]; --j) \n            for (int k = V2; k &gt;= c2[i]; --k) \n                dp[j][k] = max(dp[j][k], dp[j - c1[i]][k - c2[i]] + w[i]);\n</code></pre> <p>\u4e5f\u53ef\u4ee5\u5c06\u5176\u8fdb\u884c\u4e8c\u8fdb\u5236\u62c6\u89e3</p> <pre><code>for (int i = 0; i &lt; N; ++i) {\n    int nn = n[i], no;\n    for (int f = 0; nn; ++f) {\n        no = min((1 &lt;&lt; f), nn);\n        nn = max(0, nn - (1 &lt;&lt; f));\n\n        for (int j = V1; j &gt;= no * c1[i]; --j)\n            for (int k = V2; k &gt;= no * c2[i]; --k) \n                dp[j][k] = max(dp[j][k], \n                        dp[j - no * c1[i]][k - no * c2[i]] + no * w[i]);\n    }\n}\n</code></pre>"},{"location":"Algorithm/DP/Knapsack/Knapsack/#6","title":"6.\u5206\u7ec4\u7684\u80cc\u5305\u95ee\u9898","text":"<p>\u5206\u7ec4\u80cc\u5305\u6a21\u677f</p>"},{"location":"Algorithm/DP/Knapsack/Knapsack/#_16","title":"\u95ee\u9898","text":"<p>\u6709 \\(N\\) \u4ef6\u7269\u54c1\u548c\u4e00\u4e2a\u5bb9\u91cf\u4e3a \\(V\\) \u7684\u80cc\u5305\u3002\u7b2c \\(i\\) \u4ef6\u7269\u54c1\u7684\u8d39\u7528\u662f \\(c_i\\) \uff0c\u4ef7\u503c \\(w_i\\) \u662f\u3002\u8fd9\u4e9b\u7269\u54c1\u88ab\u5212\u5206\u4e3a\u82e5\u5e72\u7ec4\uff0c\u6bcf\u7ec4\u4e2d\u7684\u7269\u54c1\u4e92\u76f8\u51b2\u7a81\uff0c\u6700\u591a\u9009\u4e00\u4ef6\u3002\u6c42\u89e3\u5c06\u54ea\u4e9b\u7269\u54c1\u88c5\u5165\u80cc\u5305\u53ef\u4f7f\u8fd9\u4e9b\u7269\u54c1\u7684\u7528\u603b\u548c\u4e0d\u8d85\u8fc7\u80cc\u5305\u5bb9\u91cf\uff0c\u4e14\u4ef7\u503c\u603b\u548c\u6700\u5927\u3002</p>"},{"location":"Algorithm/DP/Knapsack/Knapsack/#_17","title":"\u601d\u8def","text":"<p>\u8fd9\u4e2a\u95ee\u9898\u53d8\u6210\u4e86\u6bcf\u7ec4\u7269\u54c1\u6709\u82e5\u5e72\u79cd\u7b56\u7565\uff1a\u662f\u9009\u62e9\u672c\u7ec4\u7684\u67d0\u4e00\u4ef6\uff0c\u8fd8\u662f\u4e00\u4ef6\u90fd\u4e0d\u9009\u3002\u7531\u6b64\u6211\u4eec\u53ef\u4ee5\u5199\u51fa\u9012\u63a8\u5f0f\uff1a</p> \\[ dp[k][j]=max\\{dp[k-1][j],dp[k-1][j-c[i]]+w[i]\\},\u7269\u54c1i\u5c5e\u4e8e\u7b2ck\u7ec4 \\] <p>\u7531\u9012\u63a8\u5f0f\u53ef\u77e5\uff0c\u6211\u4eec\u8981\u4fdd\u8bc1\u9012\u63a8\u65f6\u7b2c \\(k\\) \u7ec4\u7684\u503c\u662f\u7531 \\(k-1\\) \u7ec4\u63a8\u6765\u7684\u3002\u6240\u4ee5\u8981\u5148\u679a\u4e3e\u80cc\u5305\uff0c\u518d\u679a\u4e3e\u7b2c \\(k\\) \u7ec4\u7684\u7269\u54c1</p> <pre><code>typedef vector&lt;int&gt; vi;\nint dp[MAX], N, V, w[MAX], p, c[MAX];\nvi kk[101]; // \u5b58\u50a8\u6bcf\u4e00\u7ec4\u7684\u7269\u54c1\nfor (int k = 0; k &lt;= 100; ++k) {\n    for (int j = V; j &gt; 0; --j) {\n        for (int i = 0; i &lt; int(kk[k].size()); ++i) {\n            if (j &gt;= c[kk[k][i]])\n                dp[j] = max(dp[j], dp[j - c[kk[k][i]]] + w[kk[k][i]]);\n        }\n    }\n}\n</code></pre>"},{"location":"Algorithm/DP/Knapsack/Knapsack/#7","title":"7.\u6709\u4f9d\u8d56\u7684\u80cc\u5305","text":"<p>\u91d1\u660e\u7684\u9884\u7b97\u65b9\u6848</p>"},{"location":"Algorithm/DP/Knapsack/Knapsack/#_18","title":"\u95ee\u9898","text":"<p>\u8fd9\u79cd\u80cc\u5305\u95ee\u9898\u7684\u7269\u54c1\u95f4\u5b58\u5728\u67d0\u79cd\u201c\u4f9d\u8d56\u201d\u7684\u5173\u7cfb\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c \\(i\\) \u4f9d\u8d56\u4e8e \\(j\\)  \uff0c\u8868\u793a\u82e5\u9009\u7269\u54c1 \\(i\\)  \uff0c\u5219\u5fc5\u987b\u9009\u7269\u54c1  \\(j\\) \u3002\u4e3a\u4e86\u7b80\u5316\u8d77\u89c1\uff0c\u6211\u4eec\u5148\u8bbe\u6ca1\u6709\u67d0\u4e2a\u7269\u54c1\u65e2\u4f9d\u8d56\u4e8e\u522b\u7684\u7269\u54c1\uff0c\u53c8\u88ab\u522b\u7684\u7269\u54c1\u6240\u4f9d\u8d56\uff1b\u53e6\u5916\uff0c\u6ca1\u6709\u67d0\u4ef6\u7269\u54c1\u540c\u65f6\u8d56\u591a\u4ef6\u7269\u54c1\u3002</p>"},{"location":"Algorithm/DP/Knapsack/Knapsack/#_19","title":"\u601d\u8def","text":"<p>\u5bf9\u4e8e\u4e0a\u9762\u7684\u4f8b\u9898\u7684\uff0c\u6bcf\u4e2a\u4e3b\u4ef6\u7684\u9644\u4ef6\u6700\u591a\u6709\u4e24\u4e2a\uff0c\u6211\u4eec\u5b8c\u5168\u53ef\u4e5f\u5c06\u6240\u6709\u7684\u9644\u4ef6\u7684\u7ec4\u5408\u90fd\u770b\u6210\u4e00\u4e2a\u5355\u72ec\u7684\u7269\u54c1\uff0c\u4e00\u4e2a\u4e3b\u4ef6\u548c\u5176\u9644\u4ef6\u96c6\u5408\u5c31\u5bf9\u5e94\u5206\u7ec4\u80cc\u5305\u95ee\u9898\u4e2d\u7684\u4e00\u4e2a\u7269\u54c1\u7ec4\u3002\u6211\u4eec\u5229\u7528\u5206\u7ec4\u80cc\u5305\u7b97\u6cd5\u8fdb\u884c\u8ba1\u7b97\u5373\u53ef\u3002</p>"},{"location":"Algorithm/DP/Knapsack/Knapsack/#_20","title":"\u4e00\u822c\u7684\u95ee\u9898","text":"<p>\u8003\u8651\u4e00\u79cd\u66f4\u666e\u904d\u7684\u60c5\u51b5\uff0c\u6bcf\u4e2a\u4e3b\u4ef6\u6709 \\(n\\) \u4e2a\u9644\u4ef6\uff0c\u90a3\u4e48\u9644\u4ef6\u7684\u7ec4\u5408\u79cd\u7c7b\u5c31\u6709 \\(2^n+1\\) \u79cd\uff0c\u5982\u679c\u628a\u6240\u6709\u7684\u9644\u4ef6\u7ec4\u5408\u90fd\u770b\u6210\u4e00\u4e2a\u7269\u54c1\u7684\u8bdd\u65f6\u95f4\u590d\u6742\u5ea6\u548c\u7a7a\u95f4\u590d\u6742\u5ea6\u90fd\u4f1a\u8d85\u3002</p> <p>\u9996\u5148\u4e00\u4e2a\u5f88\u660e\u663e\u7684\u7ed3\u8bba\uff1a\u5bf9\u4e8e\u4e24\u4e2a\u8d39\u7528\u76f8\u540c\u7684\u7269\u54c1\uff0c\u6211\u4eec\u7684\u9009\u62e9\u4e00\u5b9a\u662f\u4ef7\u503c\u66f4\u9ad8\u7684\u90a3\u4e00\u4e2a\u3002\u6240\u4ee5\u6211\u4eec\u5bf9\u4e8e\u76f8\u540c\u8d39\u7528\u7684\u7269\u54c1\u7ec4\u5408\uff0c\u6211\u4eec\u53ea\u4fdd\u7559\u90a3\u4e2a\u4ef7\u503c\u6700\u9ad8\u7684\u4e00\u4e2a\uff0c\u8fd9\u6837\u4e5f\u4e0d\u4f1a\u5f71\u54cd\u6700\u540e\u7684\u7ed3\u679c\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e3b\u4ef6 \\(i\\) \u7684\u9644\u4ef6\u96c6\u5408\u8fdb\u884c\u4e00\u6b21 \\(01\\) \u80cc\u5305\uff0c\u5f97\u5230\u8d39\u7528\u4f9d\u6b21\u4e3a \\([0,V-c_i]\\) \u8fd9\u4e9b\u503c\u76f8\u5bf9\u5e94\u7684\u6700\u5927\u4ef7\u503c \\(f'[v],v\\in[0,V-c_i]\\) \u3002\u6211\u4eec\u5c06\u4e3b\u4ef6 \\(i\\) \u548c \\(V-c_i+1\\) \u4e2a\u9644\u4ef6\u7ec4\u5408\u770b\u4f5c\u4e00\u4e2a\u7269\u54c1\u7ec4\uff0c\u5e94\u7528\u5206\u7ec4\u80cc\u5305\u7b97\u6cd5\u5373\u53ef\u3002\u6838\u5fc3\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>// kk \u662f\u7269\u54c1\u5206\u7ec4\n// tmp \u662f\u7528\u6765\u8fdb\u884c 01 \u80cc\u5305\u7684\u4e34\u65f6\u6570\u7ec4\nfor (int i = 1; i &lt;= tot; ++i) {\n    // \u56fa\u5b9a\u6bcf\u4e2a\u7269\u54c1\u7ec4\u5408\u90fd\u8981\u9009\u4e3b\u4ef6\n    for (int jj = 0; jj &lt;= n - kk[i][0].first; ++jj)\n        tmp[jj] = dp[jj] + kk[i][0].second;\n\n    // \u5e94\u752801\u80cc\u5305\n    for (int ii = 1; ii &lt; (int)kk[i].size(); ++ii)\n        for (int jj = n - kk[i][0].first; jj &gt;= kk[i][ii].first; --jj)\n            tmp[jj] = max(tmp[jj], tmp[jj - kk[i][ii].first] + kk[i][ii].second);\n\n    // \u8003\u8651\u662f\u5426\u9009\u62e9\u8be5\u7269\u54c1\u7ec4\u4e2d\u7684\u7269\u54c1\n    for (int j = kk[i][0].first; j &lt;= n; ++j)\n        dp[j] = max(dp[j], tmp[j - kk[i][0].first]);\n}\n</code></pre>"},{"location":"Algorithm/DP/Knapsack/Knapsack/#_21","title":"\u66f4\u4e00\u822c\u7684\u95ee\u9898","text":"<p>\u4e3b\u4ef6\u7684\u9644\u4ef6\u4ecd\u7136\u53ef\u80fd\u6709\u81ea\u5df1\u7684\u9644\u4ef6\uff0c\u4f46\u9650\u5236\u6bcf\u4e2a\u9644\u4ef6\u53ea\u80fd\u6709\u4e00\u4e2a\u4e3b\u4ef6\uff0c\u4e14\u65e0\u5faa\u73af\u4f9d\u8d56\u7684\u5173\u7cfb\u3002\u8fd9\u91cc\u7684\u4f9d\u8d56\u5173\u7cfb\u7c7b\u4f3c\u56fe\u8bba\u91cc\u7684\u68ee\u6797\u3002</p> <p>\u5982\u679c\u5728\u9009\u62e9\u67d0\u4e2a\u9644\u4ef6\u65f6\uff0c\u8be5\u9644\u4ef6\u4e5f\u6709\u9644\u4ef6\u96c6\u5408\uff0c\u90a3\u4e48\u5c31\u5148\u8981\u5c06\u5b83\u7684\u9644\u4ef6\u96c6\u5408\u8f6c\u5316\u4e3a\u7269\u54c1\u7ec4\uff0c\u7136\u540e\u5e94\u7528\u5206\u7ec4\u80cc\u5305\u7b97\u6cd5\u3002\u8be5\u8fc7\u7a0b\u5b9e\u9645\u4e0a\u5c31\u662f\u6811\u5f62 \\(dp\\) \uff0c\u5728\u6c42\u89e3\u7236\u8282\u70b9\u7684\u6700\u4f18\u89e3\u65f6\uff0c\u5148\u8981\u5bf9\u5176\u5b50\u8282\u70b9\u5e94\u7528\u52a8\u6001\u89c4\u5212\u6c42\u503c\u3002</p>"},{"location":"Algorithm/DP/Knapsack/Knapsack/#8","title":"8.\u6cdb\u5316\u7269\u54c1","text":"<p>\u6cdb\u5316\u7269\u54c1\u7684\u601d\u60f3\u662f\u8981\u6211\u4eec\u628a\u6bcf\u4e2a\u7269\u54c1\u4e0d\u770b\u505a\u4e00\u4e2a\u7269\u54c1\u800c\u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u5373\u6211\u4eec\u8f93\u5165\u6d88\u8017 \\(c\\) \u4ece\u800c\u5f97\u5230\u4ef7\u503c \\(h(c)\\) \u3002\u5bf9\u4e8e \\(01\\) \u80cc\u5305\uff0c\u8fd9\u4e2a\u51fd\u6570\u5c31\u662f\u4e0b\u9762\u8fd9\u6837\u7684\uff1a</p> \\[ h(c)=\\begin{cases}  w_i&amp;c=c_i\\\\ 0&amp; c\\ne c_i \\end{cases} \\] <p>\u53ea\u6709\u5f53\u82b1\u8d39\u7b49\u4e8e\u5bf9\u5e94\u7269\u54c1\u7684\u82b1\u8d39\u65f6\uff0c\u51fd\u6570\u503c\u4e3a\u5bf9\u5e94\u4ef7\u503c\u3002 \u5bf9\u5e94\u5b8c\u5168\u80cc\u5305\uff0c\u8fd9\u4e2a\u51fd\u6570\u662f\u5f53\u4e14\u4ec5\u5f53 \\(c\\) \u88ab \\(c_i\\) \u6574\u9664\u65f6\u6709 \\(h(c)=\\frac{c}{c_i}\\times w_i\\) \uff0c\u5176\u5b83\u51fd\u6570\u503c\u5747\u4e3a \\(0\\) \u3002\u5176\u4ed6\u7c7b\u578b\u7684\u80cc\u5305\u95ee\u9898\u4e5f\u662f\u7c7b\u4f3c\u7684\uff0c\u8fd9\u91cc\u5c31\u4e0d\u4e3e\u4f8b\u4e86\u3002</p>"},{"location":"Algorithm/DP/Knapsack/Knapsack/#9","title":"9.\u80cc\u5305\u95ee\u9898\u95ee\u6cd5\u7684\u53d8\u6362","text":""},{"location":"Algorithm/Sort/Sort/","title":"\u6392\u5e8f","text":"<p>\u6240\u8c13\u6392\u5e8f\u5c31\u662f\u5c06\u4e00\u4e2a\u5e8f\u5217\u7684\u5143\u7d20\uff0c\u6309\u7167\u67d0\u79cd\u504f\u5e8f\u5173\u7cfb\uff0c\u9012\u589e\u6216\u9012\u51cf\u7684\u6392\u5217\u8d77\u6765\u3002</p>"},{"location":"Algorithm/Sort/Sort/#_2","title":"\u6392\u5e8f\u7b97\u6cd5\u7684\u5206\u7c7b","text":"<p>\u6839\u636e\u6392\u5e8f\u65b9\u5f0f\u5206\u7c7b\uff1a</p> <p>\u6839\u636e\u6570\u636e\u5b58\u653e\u7684\u4f4d\u7f6e\u6765\u5206\uff0c\u53ef\u4ee5\u5206\u4e3a</p> <ul> <li>\u5185\u6392\u5e8f\uff1a\u6570\u636e\u5143\u7d20\u653e\u5728\u5185\u5b58\u4e2d\u7684\u6392\u5e8f\u3002</li> <li>\u5916\u6392\u5e8f\uff1a\u6570\u636e\u5143\u7d20\u592a\u591a\u4e0d\u80fd\u540c\u65f6\u653e\u5728\u5185\u5b58\u4e2d\uff0c\u6839\u636e\u6392\u5e8f\u8fc7\u7a0b\u7684\u8981\u6c42\u4e0d\u80fd\u518d\u5185\u5916\u5b58\u4e4b\u95f4\u79fb\u52a8\u6570\u636e\u7684\u6392\u5e8f\u3002</li> </ul> <p>\u6211\u4eec\u4f1a\u5c06\u4e0a\u8ff0\u6392\u5e8f\u7b97\u6cd5\u8fdb\u884c\u4e00\u4e00\u7684\u4ecb\u7ecd\u3002</p>"},{"location":"Algorithm/Sort/BubbleSort/Bubble/","title":"\u5192\u6ce1\u6392\u5e8f","text":"<p>\u5192\u6ce1\u6392\u5e8f\u662f\u5927\u591a\u6570\u4eba\u7b2c\u4e00\u4e2a\u5b66\u4e60\u7684\u7b97\u6cd5\u3002\u56e0\u4e3a\u6700\u5927\u503c\u4f1a\u50cf\u6ce1\u6ce1\u4e00\u6837\u5192\u5230\u6570\u7ec4\u7684\u672b\u5c3e\u800c\u5f97\u540d\u3002</p>"},{"location":"Algorithm/Sort/BubbleSort/Bubble/#_2","title":"\u601d\u8def","text":"<p>\u7b97\u6cd5\u601d\u8def\u4e5f\u5f88\u7b80\u5355\uff0c\u6bcf\u6b21\u6bd4\u8f83\u524d\u540e\u4e24\u503c\u7684\u5927\u5c0f\uff0c\u5982\u679c\u987a\u5e8f\u4e0d\u6ee1\u8db3\u7ed9\u70b9\u6761\u4ef6\u5c31\u524d\u540e\u4e92\u6362\uff0c\u8fd9\u6837\u5728\u4e00\u8f6e\u904d\u5386\u540e\uff0c\u6700\u5927\u503c\u5c31\u4f1a\u88ab\u79fb\u52a8\u5230\u6570\u7ec4\u672b\u5c3e\u3002\u8fd9\u6837\u6211\u4eec\u5faa\u73af \\(n\\) \u904d\uff0c\u6570\u7ec4\u5c31\u4f1a\u53d8\u5f97\u6709\u5e8f\u3002</p>"},{"location":"Algorithm/Sort/BubbleSort/Bubble/#_3","title":"\u4f18\u5316","text":"<p>\u6211\u4eec\u53d1\u73b0\u5176\u5b9e\u6bcf\u6b21\u5faa\u73af\u53ef\u5c06\u4e00\u4e2a\u503c\u653e\u5230\u6570\u7ec4\u7684\u672b\u5c3e\uff0c\u6240\u4ee5\u6bcf\u6b21\u5faa\u73af\u4e0d\u5fc5\u904d\u5386\u6574\u4e2a\u6570\u7ec4\uff0c\u800c\u662f \\(n - i\\) \uff0c\\(i\\) \u662f\u5df2\u7ecf\u5faa\u73af\u7684\u6b21\u6570\u3002\u800c\u4e14\u5982\u679c\u5728\u4e00\u6b21\u5faa\u73af\u4e2d\uff0c\u6ca1\u6709\u5143\u7d20\u9700\u8981\u4ea4\u6362\uff0c\u90a3\u4e48\u5c31\u8bf4\u660e\u6574\u4e2a\u6570\u7ec4\u5df2\u7ecf\u6709\u5e8f\u4e86\uff0c\u7ed3\u675f\u7b97\u6cd5\u5373\u53ef\u3002</p> <pre><code>void Bubble_Sort()\n</code></pre>"},{"location":"Algorithm/Sort/InsertSort/InsertSort/","title":"InsertSort","text":""},{"location":"Algorithm/Sort/InsertSort/InsertSort/#_1","title":"\u7b80\u4ecb","text":""},{"location":"C%2B%2B/c%2B%2B%E5%88%9D%E9%98%B6%E6%9D%82%E9%A1%B9/","title":"C++\u521d\u9636\u6742\u9879","text":""},{"location":"C%2B%2B/c%2B%2B%E5%88%9D%E9%98%B6%E6%9D%82%E9%A1%B9/#c","title":"C++ \u7a0b\u5e8f\u7f16\u8bd1","text":"<p>C++\u7a0b\u5e8f\u7f16\u8bd1\u8fc7\u7a0b\u5206\u4e3a\u56db\u4e2a\u9636\u6bb5\uff1a\u9884\u5904\u7406\uff0c\u7f16\u8bd1\uff0c\u6c47\u7f16\uff0c\u94fe\u63a5\u3002</p> <ul> <li>\u9884\u5904\u7406</li> </ul> <p>\u9884\u5904\u7406\u90e8\u5206\uff0c\u5bf9\u4ee3\u7801\u8fdb\u884c\u6587\u672c\u64cd\u4f5c\uff0c\u5373\u5934\u6587\u4ef6\u5c55\u5f00\u3001\u5b8f\u66ff\u6362\u3001\u53bb\u6ce8\u91ca\u3001\u6761\u4ef6\u7f16\u8bd1\u3002\u8fd9\u4e2a\u9636\u6bb5\u8fdb\u884c\u5b8c\u6210\u540e\u4f1a\u751f\u6210\u540e\u7f00\u4e3a <code>.i</code> \u7684\u6587\u4ef6\u3002</p> <ul> <li>\u7f16\u8bd1</li> </ul> <p>\u8fd9\u4e2a\u90e8\u5206\u8fdb\u884c\u8bed\u6cd5\u68c0\u67e5\uff0c\u5e76\u4e14\u751f\u6210\u6c47\u7f16\u4ee3\u7801\uff08\u6307\u4ee4\u7ea7\u4ee3\u7801\uff09 \u3002\u8fd9\u4e2a\u9636\u6bb5\u8fdb\u884c\u5b8c\u6210\u540e\u4f1a\u751f\u6210\u540e\u7f00\u4e3a <code>.s</code>\u7684\u6587\u4ef6\u3002</p> <ul> <li>\u6c47\u7f16</li> </ul> <p>\u8fd9\u4e2a\u8fc7\u7a0b\u5c06\u6c47\u7f16\u4ee3\u7801\u751f\u6210\u4e8c\u8fdb\u5236\u673a\u5668\u7801\uff0c\u5e76\u4e14\u5f62\u6210\u7b26\u53f7\u8868\uff0c\u7b26\u53f7\u8868\u4e2d\u5b58\u50a8\u7684\u662f\u51fd\u6570\u540d\uff08\u8fd9\u4e2a\u91cc\u7684\u51fd\u6570\u540d\u662f\u7ecf\u8fc7\u7f16\u8bd1\u5668\u4fee\u9970\u540e\u7684\u51fd\u6570\u540d\uff09\u548c\u5176\u5730\u5740\u7684\u6620\u5c04\u3002\u8fd9\u4e2a\u9636\u6bb5\u5b8c\u6210\u4f1a\u751f\u6210\u540e\u7f00\u4e3a <code>.o</code> \u7684\u76ee\u6807\u6587\u4ef6\uff0c\u4e5f\u53eb\u53ef\u91cd\u5b9a\u4f4d\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002</p> <ul> <li>\u94fe\u63a5</li> </ul> <p>\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u8fde\u63a5\u5668\u5c06\u4f1a\u628a\u6240\u6709\u4e8c\u8fdb\u5236\u5f62\u5f0f\u7684\u76ee\u6807\u6587\u4ef6\u548c\u7cfb\u7edf\u5e93\uff08\u52a8\u6001\u5e93\u6216\u9759\u6001\u5e93\uff09\u5408\u6210\u4e00\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u5e76\u4e14\u8fdb\u884c\u7b26\u53f7\u8868\u7684\u5408\u5e76\u548c\u91cd\u5b9a\u4f4d\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u7ed3\u675f\u540e\u5c31\u751f\u6210\u53ef\u4ee5\u8fd0\u884c\u7684\u53ef\u6267\u884c\u6587\u4ef6\u4e86\u3002</p>"},{"location":"C%2B%2B/c%2B%2B%E5%88%9D%E9%98%B6%E6%9D%82%E9%A1%B9/#_1","title":"\u7f3a\u7701\u53c2\u6570\u51fd\u6570","text":"<ol> <li> <p>\u534a\u7f3a\u7701\u53c2\u6570\u5fc5\u987b\u4ece\u53f3\u5f80\u5de6\u4f9d\u6b21\u6765\u7ed9\u51fa\uff0c\u4e0d\u80fd\u95f4\u9694\u7740\u7ed9</p> </li> <li> <p>\u7f3a\u7701\u53c2\u6570\u4e0d\u80fd\u5728\u51fd\u6570\u58f0\u660e\u548c\u5b9a\u4e49\u4e2d\u540c\u65f6\u51fa\u73b0\uff0c\u53ea\u80fd\u5728\u58f0\u660e\u4e2d\u7ed9\u5b9a\u7f3a\u7701\u53c2\u6570\uff0c\u5b9a\u4e49\u4e2d\u4e0d\u7ed9\u3002</p> </li> <li> <p>\u7f3a\u7701\u503c\u5fc5\u987b\u662f\u5e38\u91cf\u6216\u8005\u5168\u5c40\u53d8\u91cf</p> </li> <li> <p>C\u8bed\u8a00\u4e0d\u652f\u6301\uff08\u7f16\u8bd1\u5668\u4e0d\u652f\u6301\uff09</p> </li> </ol>"},{"location":"C%2B%2B/c%2B%2B%E5%88%9D%E9%98%B6%E6%9D%82%E9%A1%B9/#_2","title":"\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u8c03\u7528\u65f6\u673a","text":"<ul> <li>\u4f7f\u7528\u5df2\u5b58\u5728\u5bf9\u8c61\u521b\u5efa\u5bf9\u8c61\u65f6</li> <li>\u51fd\u6570\u53c2\u6570\u7c7b\u578b\u4e3a\u7c7b\u7c7b\u578b\u5bf9\u8c61</li> <li>\u51fd\u6570\u8fd4\u56de\u503c\u7c7b\u578b\u4e3a\u7c7b\u7c7b\u578b\u5bf9\u8c61</li> </ul>"},{"location":"C%2B%2B/c%2B%2B%E5%88%9D%E9%98%B6%E6%9D%82%E9%A1%B9/#_3","title":"\u8fd0\u7b97\u7b26\u91cd\u8f7d","text":"<p>\u6ce8\u610f\uff1a</p> <ul> <li>\u4e0d\u80fd\u901a\u8fc7\u94fe\u63a5\u5176\u4ed6\u7b26\u53f7\u6765\u521b\u5efa\u65b0\u7684\u8fd0\u7b97\u7b26\uff0c\u6bd4\u5982operator@</li> <li>\u91cd\u8f7d\u64cd\u4f5c\u7b26\u5fc5\u987b\u6709\u4e00\u4e2a\u7c7b\u7c7b\u578b\u53c2\u6570</li> <li>\u7528\u4e8e\u5185\u7f6e\u7c7b\u578b\u7684\u8fd0\u7b97\u7b26\uff0c\u5176\u542b\u4e49\u4e0d\u80fd\u6539\u53d8\uff0c\u4f8b\u5982\uff1a\u5185\u7f6e\u7684\u6574\u5f62+\uff0c\u4e0d\u80fd\u6539\u53d8\u5176\u542b\u4e49</li> <li>\u4f5c\u4e3a\u7c7b\u6210\u5458\u51fd\u6570\u91cd\u8f7d\u65f6\u3002\u5176\u5f62\u53c2\u770b\u8d77\u6765\u6bd4\u64cd\u4f5c\u6570\u76ee\u5c111\uff0c\u56e0\u4e3a\u6210\u5458\u51fd\u6570\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u4f4d\u9690\u85cf\u7684this</li> <li>\u7c7b\u6210\u5458\u6307\u9488\u8bbf\u95ee\u8fd0\u7b97\u7b26\uff08.* \uff09 \u3001\u57df\u4f5c\u7528\u9650\u5b9a\u7b26\uff08::\uff09 \u3001\uff08sizeof\uff09 \u3001  \u4e09\u76ee\u8fd0\u7b97\u7b26\uff08?:\uff09  \u6210\u5458\u8bbf\u95ee\u8fd0\u7b97\u7b26 \uff08.\uff09 \u8fd9\u4e94\u4e2a \u8fd0\u7b97\u7b26\u4e0d\u80fd\u8fdb\u884c\u91cd\u8f7d\u3002</li> </ul>"},{"location":"C%2B%2B/c%2B%2B%E5%88%9D%E9%98%B6%E6%9D%82%E9%A1%B9/#_4","title":"\u521d\u59cb\u5316\u5217\u8868","text":"<p>\u975e\u9759\u6001\u6210\u5458\u53d8\u91cf\u662f\u5728\u521d\u59cb\u5316\u5217\u8868\u8fdb\u884c\u5b9a\u4e49\uff0c\u5373\u4f7f\u4e0d\u5728\u521d\u59cb\u5316\u5217\u8868\u663e\u5f0f\u7684\u5b9a\u4e49\uff0cc++\u4e5f\u4f1a\u6309\u7167\u7c7b\u4e2d\u58f0\u660e\u6b21\u5e8f\u4f9d\u6b21\u521d\u59cb\u5316\u6210\u5458\u53d8\u91cf\u3002\u6240\u4ee5\u4e00\u4e9b\u5728\u5b9a\u4e49\u65f6\u5fc5\u987b\u8d4b\u503c\u7684\u7c7b\u578b\u5c31\u53ea\u80fd\u5728\u521d\u59cb\u5316\u5217\u8868\u4e2d\u7ed9\u503c\u3002\u5982\uff1a\u5f15\u7528\uff0c\\(const\\)\uff0c\u6ca1\u6709\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u7684\u81ea\u5b9a\u4e49\u7c7b\u578b\u3002</p> <p>\u6211\u4eec\u5728\u7c7b\u4e2d\u58f0\u660e\u6210\u5458\u53d8\u91cf\u65f6\u53ef\u4ee5\u7ed9\u7f3a\u7701\u503c\u53c2\u6570\uff0c\u8fd9\u4e9b\u53c2\u6570\u4f1a\u7ed9\u5230\u521d\u59cb\u5316\u5217\u8868\u8fdb\u884c\u521d\u59cb\u5316\u3002</p> <p>\u521d\u59cb\u5316\u5217\u8868\u7684\u5b58\u5728\u5bfc\u81f4\u6211\u4eec\u4e0d\u80fd\u5728\u7c7b\u4e2d\u7ed9\u9759\u6001\u6210\u5458\u53d8\u91cf\u8fdb\u884c\u8d4b\u503c\uff0c\u56e0\u4e3ac++\u4f1a\u8ba4\u4e3a\u8fd9\u662f\u7ed9\u521d\u59cb\u5316\u5217\u8868\u7528\u4e8e\u521d\u59cb\u5316\u7684\u503c\uff0c\u4f46\u662f\u9759\u6001\u6210\u5458\u53d8\u91cf\u7684\u521d\u59cb\u5316\u662f\u5728\u7a0b\u5e8f\u7684\u7f16\u8bd1\u9636\u6bb5\uff0c\u6211\u4eec\u5c31\u4e0d\u80fd\u5728\u7c7b\u4e2d\u5bf9\u9f50\u8d4b\u503c\uff0c\u800c\u662f\u8981\u5728\u7c7b\u5916\u8fdb\u884c\u58f0\u660e\uff0c\u5e76\u4e14\u8981\u52a0\u7c7b\u9650\u5b9a\u7b26\u3002</p>"},{"location":"C%2B%2B/c%2B%2B%E5%88%9D%E9%98%B6%E6%9D%82%E9%A1%B9/#newdelete-mallocfree","title":"<code>new/delete</code> \u548c <code>malloc/free</code> \u7684\u533a\u522b","text":"<p><code>malloc/free</code> \u548c <code>new/delete</code> \u7684\u5171\u540c\u70b9\u662f\uff1a</p> <ul> <li>\u90fd\u662f\u4ece\u5806\u4e0a\u7533\u8bf7\u7a7a\u95f4\uff0c\u5e76\u4e14\u9700\u8981\u7528\u6237\u624b\u52a8\u91ca\u653e\u3002</li> </ul> <p>\u4e0d\u540c\u70b9\uff1a</p> <ul> <li>malloc\u548cfree\u662f\u51fd\u6570\uff0cnew\u548cdelete\u662f\u64cd\u4f5c\u7b26</li> <li>malloc\u51fd\u6570\u7533\u8bf7\u7684\u7a7a\u95f4\u4e0d\u4f1a\u8fdb\u884c\u521d\u59cb\u5316\uff0cnew\u53ef\u4ee5\u8fdb\u884c\u521d\u59cb\u5316</li> <li>malloc\u7533\u8bf7\u7a7a\u95f4\u65f6\uff0c\u9700\u8981\u624b\u52a8\u8ba1\u7b97\u7a7a\u95f4\u5927\u5c0f\u5e76\u4f20\u9012\uff0cnew\u53ea\u9700\u5728\u5176\u540e\u8ddf\u4e0a\u7a7a\u95f4\u7684\u7c7b\u578b\u5373\u53ef\uff0c\u5982\u679c\u662f\u591a\u4e2a\u5bf9\u8c61\uff0c[]\u4e2d\u6307\u5b9a\u5bf9\u8c61\u4e2a\u6570\u5373\u53ef</li> <li>malloc\u7684\u8fd4\u56de\u503c\u4e3avoid*, \u5728\u4f7f\u7528\u65f6\u5fc5\u987b\u5f3a\u8f6c\uff0cnew\u4e0d\u9700\u8981\uff0c\u56e0\u4e3anew\u540e\u8ddf\u7684\u662f\u7a7a\u95f4\u7684\u7c7b\u578b</li> <li>malloc\u7533\u8bf7\u7a7a\u95f4\u5931\u8d25\u65f6\uff0c\u8fd4\u56de\u7684\u662fNULL\uff0c\u56e0\u6b64\u4f7f\u7528\u65f6\u5fc5\u987b\u5224\u7a7a\uff0cnew\u4e0d\u9700\u8981\uff0c\u4f46\u662fnew\u9700\u8981\u6355\u83b7\u5f02\u5e38</li> <li>\u7533\u8bf7\u81ea\u5b9a\u4e49\u7c7b\u578b\u5bf9\u8c61\u65f6\uff0cmalloc/free\u53ea\u4f1a\u5f00\u8f9f\u7a7a\u95f4\uff0c\u4e0d\u4f1a\u8c03\u7528\u6784\u9020\u51fd\u6570\u4e0e\u6790\u6784\u51fd\u6570\uff0c\u800cnew\u5728\u7533\u8bf7\u7a7a\u95f4\u540e\u4f1a\u8c03\u7528\u6784\u9020\u51fd\u6570\u5b8c\u6210\u5bf9\u8c61\u7684\u521d\u59cb\u5316\uff0cdelete\u5728\u91ca\u653e\u7a7a\u95f4\u524d\u4f1a\u8c03\u7528\u6790\u6784\u51fd\u6570\u5b8c\u6210\u7a7a\u95f4\u4e2d\u8d44\u6e90\u7684\u6e05\u7406\u3002</li> </ul>"},{"location":"C%2B%2B/intro/","title":"\u7b80\u4ecb","text":"<p>\u9488\u5bf9 C++ \u4e2d\u4e00\u4e9b\u4ee4\u4eba\u56f0\u60d1\u7684\u8bed\u6cd5\u505a\u51fa\u4e00\u4e9b\u89e3\u91ca\u6216\u52a0\u5f3a\u8bb0\u5fc6\u3002</p> <p>\u4e0d\u9002\u5408\u7528\u4f5c C++ \u5165\u95e8\u9605\u8bfb\u3002</p>"},{"location":"C%2B%2B/%E6%A8%A1%E6%9D%BF/","title":"\u6a21\u677f","text":""},{"location":"C%2B%2B/%E6%A8%A1%E6%9D%BF/#_1","title":"\u6a21\u677f\u7279\u5316","text":"<p>\u7279\u5316\u5206\u4e3a\u5168\u7279\u5316\u548c\u504f\u7279\u5316\uff0c\u5168\u7279\u5316\u662f\u5c06\u6240\u6709\u7684\u6a21\u677f\u53c2\u6570\u90fd\u6307\u660e\uff0c\u504f\u7279\u5316\u662f\u53ea\u6307\u660e\u90e8\u5206\u6a21\u677f\u53c2\u6570\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\u51fd\u6570\u6a21\u677f\u4e0d\u80fd\u8fdb\u884c\u504f\u7279\u5316\uff0c\u53ea\u80fd\u8fdb\u884c\u91cd\u8f7d\uff0c\u53ea\u6709\u7c7b\u6a21\u677f\u53ef\u4ee5\u8fdb\u884c\u504f\u7279\u5316\u3002</p>"},{"location":"C%2B%2B/%E6%A8%A1%E6%9D%BF/#_2","title":"\u51fd\u6570\u6a21\u677f","text":"<pre><code>// \u51fd\u6570\u6a21\u677f\ntemplate&lt;class Tp1,class Tp2&gt;\nvoid f(Tp1,Tp2) { }\n\n// \u5168\u7279\u5316\ntemplate&lt;&gt; \nvoid f(int,int) {}\n\n// \u51fd\u6570\u91cd\u8f7d\uff0c \u8fd9\u4f1a\u6210\u4e3a\u4e00\u4e2a\u72ec\u7acb\u7684\u51fd\u6570\u6a21\u677f\ntemplate&lt;class Tp1,class Tp2&gt;\nvoid f(Tp1*,Tp2*) { }\n\n// \u51fd\u6570\u91cd\u8f7d\uff0c \u8fd9\u4e0d\u662f\u504f\u7279\u5316\uff0c\u800c\u662f\u4e00\u4e2a\u72ec\u7acb\u7684\u51fd\u6570\u6a21\u677f\ntemplate&lt;class Tp2&gt;\nvoid f(int,Tp2) { }\n</code></pre> <p>\u5728\u4e0a\u9762\u8c03\u7528\u4e0a\u9762\u7684\u51fd\u6570\u65f6\uff0c\u91cd\u8f7d\u51b3\u8bae\u4f1a\u4f18\u5148\u9009\u62e9\u666e\u901a\u51fd\u6570\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u7b26\u5408\u7684\u666e\u901a\u51fd\u6570\uff0c\u5c31\u4f1a\u8fdb\u884c\u6a21\u677f\u51fd\u6570\u7684\u91cd\u8f7d\u9009\u62e9\uff0c\u9009\u62e9\u91cd\u8f7d\u7684\u51fd\u6570\u6a21\u677f\u65f6\uff0c\u4e0d\u4f1a\u8003\u8651\u5404\u4e2a\u6a21\u677f\u7684\u5168\u7279\u5316\u7248\u672c\uff0c\u91cd\u8f7d\u51b3\u8bae\u53d1\u751f\u5728\u4e3b\u6a21\u677f\u4e4b\u95f4\uff0c\u51b3\u8bae\u51fa\u7b26\u5408\u7684\u4e3b\u6a21\u677f\u540e\uff0c\u624d\u4f1a\u5177\u4f53\u9009\u62e9\u6a21\u677f\u7684\u5168\u7279\u5316\u7248\u672c\u3002</p> <p>\u6211\u4eec\u770b\u4e0b\u9762\u8fd9\u4e2a\u4f8b\u5b50\uff1a</p> <pre><code>// \u51fd\u6570\u6a21\u677f\ntemplate&lt;class Tp1,class Tp2&gt;\nvoid f(Tp1,Tp2) { std::cout &lt;&lt; \"f(Tp1,Tp2)\" &lt;&lt; std::endl;}\n\n// \u5168\u7279\u5316 \uff0c\u9009\u62e9 f(Tp1,Tp2) \u4e3a\u4e3b\u6a21\u677f\ntemplate&lt;&gt; \nvoid f(int,int) { std::cout &lt;&lt; \"f(int,int)\" &lt;&lt; std::endl;}\n\n// \u51fd\u6570\u91cd\u8f7d\uff0c \u8fd9\u4e0d\u662f\u504f\u7279\u5316\uff0c\u800c\u662f\u4e00\u4e2a\u72ec\u7acb\u7684\u51fd\u6570\u6a21\u677f\ntemplate&lt;class Tp2&gt;\nvoid f(int,Tp2) { std::cout &lt;&lt; \"f(int,Tp2)\" &lt;&lt; std::endl; }\n\nint main()\n{\n    f('a','c'); // \u8c03\u7528 f(Tp1,Tp2)\n    f(1, 2);    // \u8c03\u7528 f(int,Tp2)\n    f(1, 'c');  // \u8c03\u7528 f(int,Tp2)\n    return 0;\n}\n/*\n\u8f93\u51fa\u7ed3\u679c\uff1a\nf(Tp1,Tp2)\nf(int,Tp2)\nf(int,Tp2)\n*/\n</code></pre> <p>\u6211\u4eec\u53d1\u73b0 <code>f(1,2)</code> \u8c03\u7528\u7684\u662f <code>f(int,Tp2)</code> ,\u8fd9\u5c31\u662f\u56e0\u4e3a\u5728\u9009\u62e9\u4e3b\u6a21\u677f\u65f6\u5c31\u5df2\u7ecf\u9009\u62e9\u4e86 <code>f(int,Tp2)</code> \uff0c\u800c\u975e <code>f(Tp1,Tp2)</code> \uff0c\u6240\u4ee5\u5b83\u7684\u5168\u7279\u5316\u7248\u672c <code>f(int,int)</code> \u5c31\u4e0d\u4f1a\u88ab\u8c03\u7528\u3002</p> <p>\u8fd9\u91cc\u8981\u6ce8\u610f\u7684\u662f\u5168\u7279\u5316\u7248\u672c\u7684\u51fd\u6570\uff0c\u5728\u9009\u62e9\u4e3b\u6a21\u677f\u65f6\uff0c\u4f1a\u5411\u4e0a\u67e5\u627e\u6700\u7b26\u5408\u7684\u4e3b\u6a21\u677f\u51fd\u6570\uff0c\u6240\u4ee5\u5982\u679c\u6211\u4eec\u6539\u4e00\u4e0b <code>f(int,int)</code> \u7684\u4f4d\u7f6e\u5c31\u53ef\u4ee5\u8c03\u7528\u5230\u5b83\u4e86\uff1a</p> <pre><code>// \u51fd\u6570\u6a21\u677f\ntemplate&lt;class Tp1,class Tp2&gt;\nvoid f(Tp1,Tp2) { std::cout &lt;&lt; \"f(Tp1,Tp2)\" &lt;&lt; std::endl;}\n\n// \u51fd\u6570\u91cd\u8f7d\uff0c \u8fd9\u4e0d\u662f\u504f\u7279\u5316\uff0c\u800c\u662f\u4e00\u4e2a\u72ec\u7acb\u7684\u51fd\u6570\u6a21\u677f\ntemplate&lt;class Tp2&gt;\nvoid f(int,Tp2) { std::cout &lt;&lt; \"f(int,Tp2)\" &lt;&lt; std::endl; }\n\n// \u5168\u7279\u5316 \uff0c\u9009\u62e9 f(int,Tp2) \u4e3a\u4e3b\u6a21\u677f\ntemplate&lt;&gt; \nvoid f(int,int) { std::cout &lt;&lt; \"f(int,int)\" &lt;&lt; std::endl;}\n\nint main()\n{\n    f('a','c'); // \u8c03\u7528 f(Tp1,Tp2)\n    f(1, 2);    // \u8c03\u7528 f(int,int)\n    f(1, 'c');  // \u8c03\u7528 f(int,Tp2)\n\n    return 0;\n}\n/*\n\u8f93\u51fa\u7ed3\u679c\uff1a\nf(Tp1,Tp2)\nf(int,int)\nf(int,Tp2)\n*/\n</code></pre> <p>\u51fd\u6570\u6a21\u677f\u53ef\u4ee5\u5728\u4efb\u610f\u4f4d\u7f6e\u7ed9\u9ed8\u8ba4\u53c2\u6570\uff0c\u8fd9\u4e0e\u51fd\u6570\u53c2\u6570\u5217\u8868\u7684\u9ed8\u8ba4\u503c\u4e0d\u540c\uff0c\u4e5f\u4e0e\u7c7b\u6a21\u677f\u7684\u9ed8\u8ba4\u53c2\u6570\u4e0d\u540c\uff0c\u4e0b\u6587\u4f1a\u4ecb\u7ecd\u7c7b\u6a21\u677f\u7684\u9ed8\u8ba4\u53c2\u6570\u3002</p> <pre><code>template&lt;class T1 = int,class T2&gt;\nvoid f(){}\n</code></pre>"},{"location":"C%2B%2B/%E6%A8%A1%E6%9D%BF/#_3","title":"\u7c7b\u6a21\u677f","text":"<p>\u7c7b\u662f\u652f\u6301\u5168\u7279\u5316\u548c\u504f\u7279\u5316\u7684\u3002</p> <pre><code>// \u4e3b\u6a21\u677f\u7c7b\ntemplate&lt;class Tp,int sz&gt;\nclass A{ };\n\n// \u504f\u7279\u5316\ntemplate&lt;int sz&gt;\nclass A&lt;char,sz&gt; { };\n\n// \u504f\u7279\u5316\ntemplate&lt;class Tp,int sz&gt;\nclass A&lt;Tp*,sz&gt; { };\n\n// \u5168\u7279\u5316\ntemplate&lt;&gt;\nclass A&lt;double,20&gt; { };\n</code></pre> <p>\u7c7b\u6a21\u677f\u7684\u6a21\u677f\u53c2\u6570\uff0c\u4e00\u65e6\u6709\u4e00\u4e2a\u662f\u9ed8\u8ba4\u53c2\u6570\uff0c\u5219\u5176\u540e\u7684\u53c2\u6570\u90fd\u9700\u8981\u6709\u9ed8\u8ba4\u503c\uff0c\u5e76\u4e14\u8981\u6ce8\u610f\u7684\u7684\u662f\uff0c\u504f\u7279\u5316\u7684\u6a21\u677f\u7c7b\u4e2d\u662f\u4e0d\u80fd\u63d0\u4f9b\u9ed8\u8ba4\u6a21\u677f\u53c2\u6570\u7684\uff1a</p> <pre><code>// \u504f\u7279\u5316\ntemplate&lt;class Tp,int sz = 10&gt;  // \u62a5\u9519\uff1a\u90e8\u5206\u4e13\u7528\u5316\u4e0d\u80fd\u5e26\u6709\u9ed8\u8ba4\u6a21\u677f\u53c2\u6570\nclass A&lt;Tp*,sz&gt; { };\n</code></pre> <p>\u5e76\u4e14\u504f\u7279\u5316\u7684\u7c7b\u4f1a\u7ee7\u627f\u4e3b\u6a21\u677f\u7684\u9ed8\u8ba4\u6a21\u677f\u53c2\u6570\uff1a</p> <pre><code>// \u4e3b\u6a21\u677f\u7c7b\ntemplate&lt;class Tp,int sz = 10&gt;\nclass A{ };\n// \u504f\u7279\u5316\ntemplate&lt;int sz&gt;\nclass A&lt;char,sz&gt;    // sz \u7684\u9ed8\u8ba4\u503c\u4f9d\u7136\u662f 10\n{ \npublic:\n    A()\n    { std::cout &lt;&lt; sz &lt;&lt; std::endl; }\n};\n\nint main()\n{\n    A&lt;char&gt; a;  \n    return 0;\n}\n/*\n\u8f93\u51fa\u7ed3\u679c\uff1a\n10\n*/\n</code></pre>"},{"location":"C%2B%2B/%E6%A8%A1%E6%9D%BF/#_4","title":"\u975e\u7c7b\u578b\u6a21\u677f\u53c2\u6570","text":"<p>\u4ece\u4e0a\u6587\u7684\u4f8b\u5b50\u4e2d\u4e5f\u53ef\u4ee5\u770b\u5230\uff0c\u6a21\u677f\u53c2\u6570\u4e0d\u4e00\u5b9a\u662f\u7c7b\u578b\uff0c\u4e5f\u53ef\u4ee5\u662f\u7c7b\u4f3c\u51fd\u6570\u53c2\u6570\u7684\u53c2\u6570\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u6709\u9ed8\u8ba4\u503c\uff1a</p> <pre><code>template&lt;int a,long long b = 1000&gt;\nvoid f(){}\n</code></pre> <p>\u4f46\u5e76\u4e0d\u662f\u6240\u6709\u7684\u7c7b\u578b\u90fd\u53ef\u4ee5\u4f5c\u4e3a\u6a21\u677f\u53c2\u6570\uff0c\u6839\u636e C++ \u6807\u51c6\uff0c\u975e\u7c7b\u578b\u6a21\u677f\u53c2\u6570\u53ef\u4ee5\u662f\u4ee5\u4e0b\u51e0\u79cd\u7c7b\u578b\uff1a</p> <ul> <li> <p>\u6574\u578b\u5e38\u91cf\uff08\u4f8b\u5982 int, char, bool \u7b49\uff09</p> </li> <li> <p>\u679a\u4e3e\u7c7b\u578b</p> </li> <li> <p>\u6307\u5411\u5bf9\u8c61\u6216\u51fd\u6570\u7684\u6307\u9488</p> </li> <li> <p>\u5f15\u7528\u7c7b\u578b</p> </li> <li> <p>\u6307\u5411\u6210\u5458\u7684\u6307\u9488</p> </li> <li> <p>std::nullptr_t \u7c7b\u578b\u7684\u503c</p> </li> </ul> <p>\u4ece C++17 \u5f00\u59cb\uff0c\u652f\u6301\u5c06\u975e\u7c7b\u578b\u6a21\u677f\u53c2\u6570\u8bbe\u7f6e\u4e3a <code>auto</code> \u8fd9\u6837\u7684\u81ea\u52a8\u7c7b\u578b\uff1a</p> <pre><code>template&lt;int a,auto b&gt;\nvoid f() { return b; }\n\ntemplate&lt;int a,decltype(auto) b&gt;\nvoid f(){ }\n</code></pre> <p>\u8981\u6ce8\u610f\u7684\u662f\u6307\u5b9a\u975e\u7c7b\u578b\u6a21\u677f\u53c2\u6570\u7684\u503c\u65f6\uff0c\u53ea\u80fd\u6307\u5b9a\u7f16\u8bd1\u671f\u5c31\u80fd\u6c42\u503c\u7684\u8868\u8fbe\u5f0f\uff0c\u5426\u5219\u4f1a\u62a5\u9519\uff0c\u8fd9\u65f6\u56e0\u4e3a\u6a21\u677f\u7684\u53c2\u6570\u8981\u5728\u7f16\u8bd1\u65f6\u5c31\u786e\u5b9a\uff0c\u624d\u80fd\u8ba9\u7f16\u8bd1\u5668\u53bb\u751f\u6210\u5bf9\u5e94\u7684\u51fd\u6570\u5b9e\u4f8b\u3002</p>"},{"location":"C%2B%2B/%E6%A8%A1%E6%9D%BF/#_5","title":"\u6a21\u677f\u7684\u5206\u6587\u4ef6\u7f16\u5199","text":"<p>\u5bf9\u4e8e\u4e00\u822c\u7684\u51fd\u6570\u6211\u53ef\u80fd\u4f1a\u5c06\u5176\u8fdb\u884c\u5b9a\u4e49\u548c\u58f0\u660e\u7684\u5206\u79bb\u7f16\u5199\uff0c\u5373\u58f0\u660e\u5199\u9053 .h \u6587\u4ef6\u4e2d\uff0c\u5b9a\u4e49\u5199\u5230 .cpp \u6587\u4ef6\u4e2d\uff0c\u4f46\u662f\u5bf9\u6a21\u677f\u6765\u8bf4\u76f4\u63a5\u8fd9\u6837\u5199\u4f1a\u6709\u4e00\u4e9b\u95ee\u9898\u3002</p> <pre><code>// Example.h\n// \u51fd\u6570\u58f0\u660e\ntemplate&lt;class T&gt;\nvoid func(T);\n</code></pre> <pre><code>// Example.cpp\n// \u51fd\u6570\u5b9a\u4e49\ntemplate&lt;class T&gt;\nvoid func(T)\n{\n    // \u5b9e\u73b0\n}\n</code></pre> <pre><code>// main.cpp\n# include&lt;Example.h&gt;\nint main()\n{\n    func(1);\n    return 0;\n}\n</code></pre> <p>\u6309\u7167\u4e00\u822c\u7684\u5206\u79bb\u7f16\u8bd1\u5199\u6cd5\u5982\u4e0a\u3002</p> <p>\u5728\u7f16\u8bd1\u65f6\uff0c\u5728\u8c03\u7528\u6a21\u677f\u7684\u5730\u65b9\u4f1a\u5728 main.cpp \u6587\u4ef6\u4e2d\u627e\u5bf9\u5e94\u7684\u51fd\u6570\u5730\u5740\uff0c\u4f46\u662f\u53ea\u80fd\u627e\u5230\u58f0\u660e\uff0c\u6ca1\u6709\u5b9a\u4e49\uff0c\u6ca1\u529e\u6cd5\u8fdb\u884c\u51fd\u6570\u5b9e\u4f8b\u5316\uff0c\u5c31\u5f97\u4e0d\u5230\u5bf9\u5e94\u7684\u5730\u5740\uff0c\u6240\u4ee5\u53ea\u80fd\u7b49\u5230\u94fe\u63a5\u7684\u65f6\u5019\u5230\u5176\u4ed6\u6587\u4ef6\u6216\u5e93\u4e2d\u627e\u8be5\u51fd\u6570\u7684\u5730\u5740\u3002</p> <p>\u4f46\u662f\u5230\u94fe\u63a5\u7684\u8fc7\u7a0b\u65f6\uff0c\u5374\u6839\u672c\u627e\u4e0d\u5230\u5bf9\u5e94\u7684\u51fd\u6570\u5b9e\u73b0\uff0c\u5e94\u4e3a\u5bf9\u5e94\u6a21\u677f\u6839\u672c\u6ca1\u6709\u5b9e\u4f8b\u5316\uff0c\u6240\u4ee5\u5c31\u4f1a\u62a5\u94fe\u63a5\u9519\u8bef\u3002</p> <p>\u89e3\u51b3\u65b9\u6cd5\u6709\u4e24\u79cd\uff1a</p> <ul> <li>\u7b2c\u4e00\u79cd\u5c31\u662f\u5728 .cpp \u6587\u4ef6\u4e2d\u8fdb\u884c\u663e\u793a\u5b9e\u4f8b\u5316</li> </ul> <pre><code>// Example.cpp\ntemplate&lt;class T&gt;\nvoid func(T)\n{\n    // \u5b9e\u73b0\n}\n// \u663e\u793a\u5b9e\u4f8b\u5316\ntemplate void func(int);\n</code></pre> <p>\u4f46\u662f\u8fd9\u79cd\u65b9\u6cd5\u7f3a\u9677\u4e5f\u5f88\u660e\u663e\uff0c\u4f1a\u8ba9\u4ee3\u7801\u7f16\u5199\u53d8\u5f97\u975e\u5e38\u9ebb\u70e6\uff0c\u6bcf\u6b21\u9700\u8981\u65b0\u7684\u7c7b\u578b\u90fd\u8981\u52a0\u4e0a\u65b0\u7684\u663e\u793a\u5b9e\u4f8b\u5316\u3002</p> <ul> <li>\u7b2c\u4e8c\u79cd\u5c31\u662f\u5c06\u6a21\u677f\u7684\u5b9a\u4e49\u548c\u58f0\u660e\u5199\u9053\u540c\u4e00\u4e2a\u6587\u4ef6\u4e2d(.h \u6216 .hpp \u6587\u4ef6\u4e2d)\uff0c\u5c31\u4ece\u6839\u6e90\u4e0a\u89e3\u51b3\u4e86\u8be5\u95ee\u9898\uff0c\u8fd9\u901a\u5e38\u66f4\u7b80\u5355\u5b9e\u7528\u3002</li> </ul>"},{"location":"C%2B%2B/%E6%A8%A1%E6%9D%BF/#typename-class","title":"<code>typename</code> \u548c <code>class</code> \u7279\u6b8a\u7528\u6cd5","text":"<p>\u901a\u5e38\u60c5\u51b5\u4e0b <code>typename</code> \u548c <code>class</code> \u7528\u4f5c <code>template&lt;&gt;</code> \u4e2d\u58f0\u660e\u6a21\u677f\u53c2\u6570\u7684\u3002\u4f46\u662f\u5728\u8bbf\u95ee\u4e00\u4e9b\u8fd8\u672a\u5b9e\u4f8b\u5316\u7684\u7c7b\u4e2d\u5b9a\u4e49\u7684\u7c7b\u578b\u65f6\uff0c\u4e5f\u8981\u7528\u5230 <code>typename</code> \u548c <code>class</code>\u3002</p> <p>\u4e0b\u9762\u7684\u4f8b\u5b50\u4e2d <code>list</code> \u662f\u81ea\u5df1\u5b9e\u73b0\u7684\u94fe\u8868\uff0c\u5728\u5176\u4e2d\u5b9a\u4e49\u4e86\u4e00\u4e2a <code>const_iterator</code> \u7684\u8fed\u4ee3\u5668\u7c7b\u578b\uff1a</p> <pre><code>template&lt;class T&gt;\nvoid print(const myLib::list&lt;T&gt;&amp; a)\n{\n    typename myLib::list&lt;T&gt;::const_iterator it = a.begin();\n    while(it != a.end())\n    {\n        cout &lt;&lt; *it &lt;&lt; ' ';\n        it++;\n    }\n    cout &lt;&lt; endl;\n}\n</code></pre> <p>\u5f53\u6a21\u677f\u8fd8\u672a\u8fdb\u884c\u5b9e\u4f8b\u5316\u4e4b\u524d\uff0c\u7f16\u8bd1\u5668\u662f\u4e0d\u6e05\u695a <code>myLib::list&lt;T&gt;::const_iterator</code> \u8fd9\u662f\u4e00\u4e2a\u7c7b\u578b\u8fd8\u662f <code>myLib::list&lt;T&gt;</code> \u4e0b\u7684\u4e00\u4e2a\u9759\u6001\u6210\u5458\u53d8\u91cf\uff0c\u6240\u4ee5\u4f1a\u53d1\u751f\u62a5\u9519\uff0c\u53ea\u6709\u52a0\u4e0a <code>typename</code> \u6216 <code>class</code> \u544a\u8bc9\u7f16\u8bd1\u5668\u540e\u9762\u8fd9\u4e9b\u662f\u4e00\u4e2a\u53d8\u91cf\u624d\u80fd\u6b63\u786e\u7f16\u8bd1\u901a\u8fc7\u3002</p>"},{"location":"C%2B%2B/%E6%A8%A1%E6%9D%BF/#_6","title":"\u6a21\u677f\u63a8\u5bfc\u7c7b\u578b\u7684","text":""},{"location":"C%2B%2B/IO%E6%B5%81/IO/","title":"IO","text":""},{"location":"C%2B%2B/IO%E6%B5%81/IO/#_1","title":"\u6d41","text":"<p>\u6d41\u201d\u5373\u662f\u6d41\u52a8\u7684\u610f\u601d\uff0c\u662f\u7269\u8d28\u4ece\u4e00\u5904\u5411\u53e6\u4e00\u5904\u6d41\u52a8\u7684\u8fc7\u7a0b\uff0c\u662f\u5bf9\u4e00\u79cd\u6709\u5e8f\u8fde\u7eed\u4e14\u5177\u6709\u65b9\u5411\u6027\u7684\u6570\u636e\uff08\u5176\u5355\u4f4d\u53ef\u4ee5\u662fbit,byte,packet\uff09\u7684\u62bd\u8c61\u63cf\u8ff0\u3002</p> <p>\u5b83\u7684\u7279\u6027\u662f\uff1a\u6709\u5e8f\u8fde\u7eed\u3001\u5177\u6709\u65b9\u5411\u6027\u3002</p> <p>\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u79cd\u6d41\u52a8\uff0cC++\u5b9a\u4e49\u4e86I/O\u6807\u51c6\u7c7b\u5e93\uff0c\u8fd9\u4e9b\u6bcf\u4e2a\u7c7b\u90fd\u79f0\u4e3a\u6d41/\u6d41\u7c7b\uff0c\u7528\u4ee5\u5b8c\u6210\u67d0\u65b9\u9762\u7684\u529f\u80fd\u3002</p>"},{"location":"C%2B%2B/IO%E6%B5%81/IO/#c-io","title":"C++ IO\u6d41","text":"<p>C++\u7cfb\u7edf\u5b9e\u73b0\u4e86\u4e00\u4e2a\u5e9e\u5927\u7684\u7c7b\u5e93\uff0c\u5176\u4e2dios\u4e3a\u57fa\u7c7b\uff0c\u5176\u4ed6\u7c7b\u90fd\u662f\u76f4\u63a5\u6216\u95f4\u63a5\u6d3e\u751f\u81ea ios \u7c7b\uff1a</p>"},{"location":"C%2B%2B/c%2B%2B11/STL/","title":"STL","text":""},{"location":"C%2B%2B/c%2B%2B11/STL/#any","title":"<code>any</code>","text":""},{"location":"C%2B%2B/c%2B%2B11/STL/#emplace","title":"\u65b0\u589e <code>emplace</code> \u7c7b\u51fd\u6570","text":"<p><code>emplace</code> \u7c7b\u51fd\u6570\u548c\u4e00\u822c\u7684\u63d2\u5165\u51fd\u6570\u529f\u80fd\u76f8\u540c\uff0c\u4f46 <code>emplace</code> \u51fd\u6570\u7684\u53c2\u6570\u662f\u53c2\u6570\u5305\uff0c\u53ea\u6709\u5f53\u4f20\u5165\u53c2\u6570\u4e3a\u5bf9\u8c61\u521d\u59cb\u5316\u5217\u8868\u65f6\u4e8c\u8005\u4f1a\u6709\u4e0d\u540c\uff0c <code>emplace</code> \u7c7b\u7684\u51fd\u6570\u4f1a\u62ff\u53c2\u6570\u8fdb\u884c\u539f\u5730\u6784\u9020\uff0c\u800c\u666e\u901a\u7684\u63d2\u5165\uff0c\u8981\u5148\u5728\u5bb9\u5668\u5916\u521b\u5efa\u597d\u5143\u7d20\uff0c\u518d\u5c06\u5176\u901a\u8fc7\u62f7\u8d1d\u6216\u79fb\u52a8\u7684\u65b9\u5f0f\u52a0\u5165\u5230\u5bb9\u5668\u4e2d\u53bb\u3002</p> <p>\u8fd9\u91cc\u4ee5 <code>emplace_back()</code> \u548c <code>push_back()</code> \u4e3a\u4f8b\uff1a</p> <pre><code>// \u6e90\u7801\u6765\u81ea\uff1alibstdc++ \u5e93\u4e2d\u7684 stl_vector.h \n// \u7f16\u8bd1\u5668\u4e3a\uff1ag++.exe (x86_64-win32-seh-rev0, Built by MinGW-W64 project) 8.1.0\n// ============================= push_back ====================================\n// push_back \u7684\u5de6\u503c\u7248\u672c\u5b9e\u73b0\n      void\n      push_back(const value_type&amp; __x)\n      {\n        // \u5224\u65ad\u662f\u5426\u6ee1\n    if (this-&gt;_M_impl._M_finish != this-&gt;_M_impl._M_end_of_storage)\n      {\n\n        // \u5728 \u5bb9\u5668\u672b\u5c3e\uff08this-&gt;_M_impl._M_finish\uff09 \u8c03\u7528\u62f7\u8d1d\u6784\u9020\uff0c\u7528 __x \u8fdb\u884c\u62f7\u8d1d\n        _Alloc_traits::construct(this-&gt;_M_impl, this-&gt;_M_impl._M_finish,\n                     __x);\n\n        ++this-&gt;_M_impl._M_finish;\n      }\n    else    // \u7a7a\u95f4\u4e0d\u591f\uff0c\u91cd\u65b0\u5f00\u7a7a\u95f4\uff0c\u518d\u63d2\u5165\n      _M_realloc_insert(end(), __x);\n      }\n\n/* C++11 \u4ee5\u540e\u53f3\u503c\u7248\u672c\u7684 push_back \u76f4\u63a5\u590d\u7528 emplace_back */\n#if __cplusplus &gt;= 201103L\n      void\n      push_back(value_type&amp;&amp; __x)\n      { emplace_back(std::move(__x)); }\n\n// ============================= emplace_back ==================================\n/* \nC++11 \u4ee5\u540e\u63d0\u4f9b emplace_back \u63a5\u53e3\n\u5927\u4e8e C++14 \u7684\u7248\u672c\u8fd4\u56de\u4e00\u4e2a\u63d2\u5165\u503c\u7684\u5f15\u7528\uff0c\u5176\u4f59\u7248\u672c\u8fd4\u56de void\n*/\n#if __cplusplus &gt;= 201103L\n  template&lt;typename _Tp, typename _Alloc&gt;\n    template&lt;typename... _Args&gt;\n#if __cplusplus &gt; 201402L\n      typename vector&lt;_Tp, _Alloc&gt;::reference\n#else\n      void\n#endif\n      vector&lt;_Tp, _Alloc&gt;::\n      emplace_back(_Args&amp;&amp;... __args)\n      {\n        // \u5224\u65ad\u662f\u5426\u6ee1\n    if (this-&gt;_M_impl._M_finish != this-&gt;_M_impl._M_end_of_storage)\n      {\n\n        // \u4f7f\u7528\u53c2\u6570\u5305\uff0c\u5728 \u6570\u7ec4\u672b\u5c3e\uff08this-&gt;_M_impl._M_finish\uff09 \u8fdb\u884c\u6784\u9020\u3002\n        _Alloc_traits::construct(this-&gt;_M_impl, this-&gt;_M_impl._M_finish,\n                     std::forward&lt;_Args&gt;(__args)...);\n\n        ++this-&gt;_M_impl._M_finish;\n      }\n    else    // \u7a7a\u95f4\u4e0d\u591f\uff0c\u91cd\u65b0\u5f00\u7a7a\u95f4\uff0c\u518d\u63d2\u5165\n      _M_realloc_insert(end(), std::forward&lt;_Args&gt;(__args)...);\n#if __cplusplus &gt; 201402L\n    return back();\n#endif\n      }\n#endif\n</code></pre> <p><code>emplace_back</code> \u662f\u7528\u4f20\u5165\u7684\u53c2\u6570\u8fdb\u884c\u6784\u9020\uff0c\u6784\u9020\u65b9\u5f0f\u53d6\u51b3\u4e8e\u4f20\u5165\u7684\u53c2\u6570\u5305\uff0c<code>push_back</code> \u662f\u7528\u4f20\u5165\u5bf9\u8c61\u8fdb\u884c\u6784\u9020\u3002\u6240\u4ee5\u5728\u4e00\u822c\u60c5\u51b5\u4e0b\u4e8c\u8005\u5b8c\u5168\u76f8\u540c\uff0c\u53ea\u6709\u5728\u4f20\u5165\u6784\u9020\u53c2\u6570\u5217\u8868\u65f6\u4f1a\u6709\u4e0d\u540c\uff0c<code>push_back</code> \u4f1a\u8c03\u7528\u4e24\u6b21\u6784\u9020\uff08\u6784\u9020 + \u79fb\u52a8\u6784\u9020\uff09\uff0c\u800c <code>emplace_back</code> \u53ea\u4f1a\u8c03\u7528\u4e00\u6b21\u6784\u9020\u3002</p> <p>\u9996\u5148\u6211\u4eec\u77e5\u9053\u4e24\u4e2a\u51fd\u6570\u5728\u4f20\u5165\u53c2\u6570\u5217\u8868\u65f6\uff0c\u90fd\u662f\u5728\u4e0b\u9762\u8fd9\u4e2a\u8bed\u53e5\u8fdb\u884c\u6784\u9020\u7684\uff1a</p> <pre><code>// \u4f7f\u7528\u53c2\u6570\u5305\uff0c\u5728 \u6570\u7ec4\u672b\u5c3e\uff08this-&gt;_M_impl._M_finish\uff09 \u8fdb\u884c\u6784\u9020\u3002\n_Alloc_traits::construct(this-&gt;_M_impl, this-&gt;_M_impl._M_finish,\n                std::forward&lt;_Args&gt;(__args)...);\n</code></pre> <p>\u53ea\u4e0d\u8fc7 <code>push_back</code> \u5728\u7b2c\u4e00\u6b21\u4f20\u53c2\u65f6\u5148\u8981\u5c06\u53c2\u6570\u5217\u8868\u6784\u9020\u4e3a\u5bf9\u8c61\uff0c\u4e4b\u540e\u5728\u8c03\u7528\u8fd9\u4e2a\u8bed\u53e5\u65f6\uff0c\u53c2\u6570\u5305 <code>__args</code> \u4e2d\u662f\u4e00\u4e2a\u53f3\u503c\u5bf9\u8c61\uff0c\u6240\u4ee5\u4f1a\u518d\u8fdb\u884c\u4e00\u6b21\u79fb\u52a8\u6784\u9020\u3002\u800c <code>emplace_back</code> \u4f1a\u4e00\u76f4\u5c06\u53c2\u6570\u4f20\u5230\u8fd9\u91cc\uff0c\u6240\u4ee5\u53ea\u8fdb\u884c\u4e00\u6b21\u6784\u9020\u3002</p>"},{"location":"C%2B%2B/c%2B%2B11/%E5%88%97%E8%A1%A8%E5%88%9D%E5%A7%8B%E5%8C%96/","title":"\u5217\u8868\u521d\u59cb\u5316","text":""},{"location":"C%2B%2B/c%2B%2B11/%E5%88%97%E8%A1%A8%E5%88%9D%E5%A7%8B%E5%8C%96/#_2","title":"\u57fa\u672c\u8bed\u6cd5","text":"<p>\u5728 C \u4e2d\u6211\u4eec\u7ecf\u5e38\u89c1\u5230\u5982\u4e0b\u65b9\u5f0f\u7684\u6570\u7ec4\u521d\u59cb\u5316\u65b9\u5f0f\u548c\u7ed3\u6784\u4f53\u521d\u59cb\u5316\u65b9\u5f0f\uff1a</p> <pre><code>int a[4] = { 1, 2, 3, 4 };\nstruct Point\n{\n    int x,y;\n};\nstruct Point b = { 1, 2 };\n</code></pre> <p>\u8fd9\u4e2a\u5927\u62ec\u53f7\u62ec\u8d77\u6765\u7684\u5217\u8868\u5c31\u88ab\u7528\u4f5c\u521d\u59cb\u5316\u6570\u7ec4 <code>a</code> \u548c\u7ed3\u6784\u4f53 <code>b</code>\uff0c\u800c C++11 \u4e2d\u6269\u5927\u4e86\u8be5\u5217\u8868\u7684\u9002\u7528\u8303\u56f4\uff0c\u4f7f\u5176\u53ef\u4ee5\u521d\u59cb\u5316\u6240\u6709\u5185\u7f6e\u7c7b\u578b\u548c\u7528\u6237\u81ea\u5b9a\u4e49\u7c7b\u578b\uff0c\u5e76\u4e14\u5728 C++11 \u4e2d\uff0c <code>=</code> \u4e5f\u53ef\u88ab\u7701\u7565\uff0c\u5982\u4e0b\uff1a</p> <pre><code>// \u5185\u7f6e\u7c7b\u578b\nint a[4] { 1, 2, 3, 4 };\ndouble b = { 4.91 };\nint c { 4 };\n\n// \u7528\u6237\u81ea\u5b9a\u4e49\u7c7b\u578b\nclass Date\n{\n    int Y,M,D;\npublic:\n    Date(int y,int m,int d):Y(y),M(m),D(d){}\n};\nDate a { 2024, 4, 6 };\n</code></pre> <p>\u5bf9\u4e8e\u7528\u6237\u81ea\u5b9a\u4e49\u7c7b\u578b\uff0c\u5217\u8868\u521d\u59cb\u5316\u4f1a\u81ea\u52a8\u8c03\u7528\u53c2\u6570\u5339\u914d\u7684\u6784\u9020\u51fd\u6570\u3002</p>"},{"location":"C%2B%2B/c%2B%2B11/%E5%88%97%E8%A1%A8%E5%88%9D%E5%A7%8B%E5%8C%96/#_3","title":"\u7f29\u7a84\u68c0\u67e5","text":"<p>\u6211\u4eec\u4f7f\u7528\u4e00\u822c\u7684\u65b9\u5f0f\u5bf9\u6570\u636e\u8fdb\u884c\u521d\u59cb\u5316\u65f6\uff0c\u7f16\u8bd1\u5668\u5141\u8bb8\u7a0b\u5e8f\u5458\u6267\u884c\u4e0b\u9762\u7684\u64cd\u4f5c\uff1a</p> <pre><code>char a = 67.75;\nchar b = 1000000;\n</code></pre> <p>\u5728\u4f7f\u7528 <code>{}</code> \u5bf9\u53d8\u91cf\u8fdb\u884c\u521d\u59cb\u5316\u65f6\uff0c\u53ef\u4ee5\u9632\u6b62\u7c7b\u578b\u7f29\u7a84\uff0c\u5373\u7981\u6b62\u5c06\u6570\u503c\u8d4b\u503c\u7ed9\u65e0\u6cd5\u5b58\u50a8\u5b83\u7684\u53d8\u91cf\uff0c\u5e76\u4e14\u4f7f\u7528\u7c7b\u578b\u4e0d\u5339\u914d\u7684\u53d8\u91cf\u521d\u59cb\u5316\u65f6\u4e5f\u4f1a\u62a5 Warning\uff0c\u5982\u4e0b\uff1a</p> <pre><code>char a1 = { 1000000 }; // compile error\uff1afrom 'int' to 'char' inside { }\nchar a2 = { 67.775 }; // compile error\uff1afrom 'double' to 'char' inside { }\n\ndouble b = 67.775;\nchar c = { b }; // Warning\uff1afrom 'double' to 'char' inside { }\n</code></pre> <p><code>{}</code> \u521d\u59cb\u5316\u5141\u8bb8\u7c7b\u578b\u8f6c\u6362\u4e3a\u66f4\u5bbd\u7684\u7c7b\u578b\u3002\u53e6\u5916\u53ea\u8981\u5728\u8f83\u7a84\u7c7b\u578b\u7684\u8303\u56f4\u5185\uff0c\u7c7b\u578b\u8f6c\u6362\u4e5f\u662f\u5141\u8bb8\u7684\u3002</p> <pre><code>double a = { 1 }; // int to double\nchar b = { 66 }; // int to char , in range\n</code></pre>"},{"location":"C%2B%2B/c%2B%2B11/%E5%88%97%E8%A1%A8%E5%88%9D%E5%A7%8B%E5%8C%96/#stdinitializer_list","title":"<code>std::initializer_list</code>","text":"<p>C++11 \u63d0\u4f9b\u4e86\u6a21\u677f\u7c7b <code>std::initializer_list</code> \uff0c\u5b83\u662f\u4e00\u4e2a\u7c7b\u4f3c\u6570\u7ec4\u7684\u5bb9\u5668\uff0c\u5217\u8868\u4e2d\u7684\u5143\u7d20\u5fc5\u987b\u662f\u540c\u4e00\u7c7b\u578b\uff0c\u901a\u8fc7\u4e0b\u9762\u4e0d\u5b9a\u4e2a\u6570\u53c2\u6570\u6c42\u548c\u7684\u4f8b\u5b50\u7406\u89e3 <code>std::initializer_list</code>\uff1a</p> <pre><code># include &lt;iostream&gt;\nint sum(std::initializer_list&lt;int&gt; li)\n{\n    int s = 0;\n    for(auto it = li.begin();it != li.end();it++)\n        s += *it;\n    return s;\n}\n\nint main()\n{\n    std::cout &lt;&lt; sum({ 1, 2, 3, 4 }) &lt;&lt; '\\n';\n    return 0;\n}\n// \u8f93\u51fa\uff1a 10\n</code></pre> <p>\u5f53\u4e00\u4e2a\u7c7b\u542b\u6709\u63a5\u53d7 <code>std::initializer_list</code> \u4e3a\u53c2\u6570\u7684\u6784\u9020\u51fd\u6570\u65f6\uff0c\u5219\u5217\u8868\u521d\u59cb\u5316\u8bed\u6cd5\u5c31\u53ea\u80fd\u7528\u4e8e\u8c03\u7528\u8be5\u6784\u9020\u51fd\u6570\u3002C++11 \u4e2d STL \u5bb9\u5668\u90fd\u63d0\u4f9b\u4e86 <code>std::initializer_list</code> \u4e3a\u53c2\u6570\u7684\u6784\u9020\u51fd\u6570\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u50cf\u6784\u9020\u6570\u7ec4\u4e00\u6837\u6784\u9020\u5bb9\u5668:</p> <pre><code>std::vector&lt;int&gt; vec { 1, 2, 3, 4, 5 };\nstd::list&lt;int&gt; li { 1, 2, 3, 4, 5 };\nstd::map&lt;int,int&gt; mp { { 1, 2 }, { 3, 4 } };\n</code></pre>"},{"location":"C%2B%2B/c%2B%2B11/%E5%8E%9F%E5%A7%8B%E5%AD%97%E7%AC%A6%E4%B8%B2/","title":"\u539f\u59cb\u5b57\u7b26\u4e32","text":""},{"location":"C%2B%2B/c%2B%2B11/%E5%8E%9F%E5%A7%8B%E5%AD%97%E7%AC%A6%E4%B8%B2/#_2","title":"\u57fa\u672c\u8bed\u6cd5","text":"<p>\u4e3a\u4e86\u5728 C++ \u4e2d\u66f4\u597d\u9605\u8bfb\u4e00\u4e9b\u5e26 <code>\\</code> \u7b26\u53f7\u7684\u5b57\u7b26\u4e32\uff0cC++11\u5f15\u5165\u4e86\u65b0\u7684\u7279\u6027\u539f\u59cb\u5b57\u7b26\u4e32 (raw string literal)</p> <p>raw\uff1a\u539f\u59cb\u7684\uff1bliteral\uff1a\u5b57\u9762\u91cf\uff0c\u5b8c\u5168\u6309\u7167\u539f\u6587\u7684\u3002\u987e\u540d\u601d\u4e49\uff0c\u539f\u59cb\u5b57\u7b26\u4e32\u4e2d\u7684\u6bcf\u4e2a\u5b57\u7b26\u90fd\u662f\u5b57\u7b26\u672c\u8eab\uff0c\u4e0d\u4f1a\u6709\u8f6c\u4e49\u5b57\u7b26\u3002</p> <p>\u539f\u59cb\u5b57\u7b26\u4e32\u662f\u683c\u5f0f\u5982\u4e0b\uff1a</p> <pre><code>R\"(\u5b57\u7b26\u4e32\u5185\u5bb9)\";\n</code></pre> <p>\u539f\u59cb\u5b57\u7b26\u4e32\u7531 <code>R</code> \u4f5c\u4e3a\u524d\u7f00\uff0c\u5728 <code>\"(\"</code> \u548c <code>\")\"</code> \u4e4b\u95f4\u7684\u662f\u5b57\u7b26\u4e32\u7684\u5185\u5bb9\u3002\u4ee5\u4e0b\u9762\u7684\u4e32\u4e3a\u4f8b</p> <p><pre><code>std::cout &lt;&lt; R\"(Hello C++11\\n\\0\\tHello C++14)\" &lt;&lt; std::endl;\n// \u8f93\u51fa\u7ed3\u679c\uff1a Hello C++11\\n\\0\\tHello C++14\n</code></pre> \u5c11\u4e86\u8f6c\u4e49\u5b57\u7b26\u7684\u5e72\u6270\uff0c\u53ef\u4ee5\u505a\u5230\u6240\u89c1\u5373\u6240\u5f97\uff0c\u66f4\u65b9\u4fbf\u6211\u4eec\u9605\u8bfb\u4e00\u4e9b\u6587\u672c\u3002</p>"},{"location":"C%2B%2B/c%2B%2B11/%E5%8E%9F%E5%A7%8B%E5%AD%97%E7%AC%A6%E4%B8%B2/#_3","title":"\u51b2\u7a81\u5904\u7406","text":"<p>\u5f53\u5b57\u7b26\u4e32\u4e2d\u5b58\u5728 <code>\"(</code> \u6216 <code>)\"</code> \u7684\u7ec4\u5408\u65f6\uff0c\u5c31\u4f1a\u4f7f\u7f16\u8bd1\u5668\u5bf9\u5b57\u7b26\u4e32\u7684\u89e3\u6790\u51fa\u73b0\u9519\u8bef\u3002\u5904\u7406\u7684\u65b9\u6cd5\u4e5f\u5f88\u7b80\u5355\uff0cC++11\u6807\u51c6\u4e2d\u5141\u8bb8\u5728\u5f15\u53f7\u548c\u62ec\u53f7\u4e4b\u95f4\u53ef\u4ee5\u63d2\u5165\u4e00\u6bb5\u6807\u8bc6\u7b26\uff0c\u5e76\u5c06\u6807\u8bc6\u7b26\u548c\u5f15\u53f7\u5c0f\u62ec\u53f7\u7684\u7ec4\u5408\u4f5c\u4e3a\u539f\u59cb\u5b57\u7b26\u4e32\u7684\u5f00\u59cb\u548c\u7ed3\u675f\u6807\u5fd7\uff0c\u5982\u4e0b\uff1a</p> <pre><code>std::cout &lt;&lt; R\"cyb(Hello \"(C++11)\"!\\n)cyb\" &lt;&lt; std::endl;\n// \u8f93\u51fa\u7ed3\u679c\uff1a Hello \"(C++11)\"!\\n\n</code></pre>"},{"location":"C%2B%2B/c%2B%2B11/%E5%8F%AF%E5%8F%98%E5%8F%82%E6%95%B0%E6%A8%A1%E6%9D%BF/","title":"\u53ef\u53d8\u53c2\u6570\u6a21\u677f","text":""},{"location":"C%2B%2B/c%2B%2B11/%E5%8F%AF%E5%8F%98%E5%8F%82%E6%95%B0%E6%A8%A1%E6%9D%BF/#_1","title":"\u53ef\u53d8\u53c2\u6570\u6a21\u677f","text":"<p>C++11 \u4e3a\u6a21\u677f\u63d0\u4f9b\u5b9a\u4e49\u8fb9\u957f\u53c2\u6570\u7684\u65b9\u6cd5\uff0c\u57fa\u7840\u8bed\u6cd5\u5982\u4e0b\uff1a</p> <pre><code>template&lt;class... Args&gt;\nvoid f (Args... a) { }\n</code></pre> <p><code>Args</code> \u662f\u4e00\u4e2a\u6a21\u677f\u53c2\u6570\u5305\uff0c<code>a</code> \u662f\u4e00\u4e2a\u51fd\u6570\u5f62\u53c2\u53c2\u6570\u5305\u3002\u53c2\u6570\u5305 <code>a</code> \u4f1a\u63a5\u6536\u4efb\u610f\u6570\u91cf\u7684\u53c2\u6570\u3002\u8fd9\u91cc\u7684\u7701\u7565\u53f7 <code>(...)</code> \u5728\u4e0d\u540c\u4f4d\u7f6e\u4ee3\u8868\u7740\u4e0d\u540c\u7684\u542b\u4e49\uff1a</p> <ul> <li><code>class... Args</code>\uff0c\u8fd9\u91cc\u4ee3\u8868\u6a21\u677f\u53c2\u6570\u5305\uff0c\u8868\u660e\u8fd9\u91cc\u6709\u591a\u79cd\u53c2\u6570\u3002</li> <li><code>Args... a</code>\uff0c\u8fd9\u91cc\u4ee3\u8868\u51fd\u6570\u53c2\u6570\u5305\uff0c\u8868\u660e\u8fd9\u91cc\u6709\u591a\u4e2a\u53c2\u6570\u3002</li> <li><code>arg_left...</code>\uff0c\u8fd9\u91cc\u662f\u5305\u7684\u5c55\u5f00\uff0c\u5c31\u662f\u5c06\u53c2\u6570\u540d\u5b57\u5c55\u5f00\u4e3a\u9017\u53f7\u5206\u5272\u7684\u53c2\u6570\u5217\u8868\u3002</li> </ul> <p>\u5728\u51fd\u6570</p> <p>\u6211\u4eec\u65e0\u6cd5\u50cf\u6570\u7ec4\u4e00\u6837\u76f4\u63a5\u4f7f\u7528\u53c2\u6570\u5305\u4e2d\u7684\u53c2\u6570\uff0c\u800c\u9700\u8981\u5bf9\u53c2\u6570\u5305\u8fdb\u884c\u89e3\u5305\u3002\u901a\u5e38\u89e3\u5305\u7684\u65b9\u5f0f\u6709\u4e24\u79cd\uff1a</p> <ul> <li>\u9010\u5c42\u5b9e\u4f8b\u5316\u51fd\u6570</li> </ul> <pre><code>// \u51fa\u53e3\u51fd\u6570\nvoid Unpack() { }\n// \u9010\u5c42\u89e3\u5305\ntemplate&lt;class Tp, class...Args&gt;\nvoid Unpack(Tp elem, Args... a)\n{\n    std::cout &lt;&lt; elem &lt;&lt; std::endl;\n    Unpack(a...);\n}\n\ntemplate&lt;class... Args&gt;\nvoid f(Args... a)\n{\n    Unpack(a...);\n}\n\nint main()\n{\n    f(\"asd\", 123, 1.1);\n    return 0;\n}\n/*\n\u8f93\u51fa\u7ed3\u679c\uff1a\nasd\n123\n1.1\n*/\n</code></pre> <p><code>Unpack</code> \u4f1a\u751f\u6210\u82e5\u5e72\u4e2a\u51fd\u6570\uff0c\u6bcf\u5c42\u51fd\u6570\u90fd\u4f1a\u6bd4\u4e0a\u4e00\u5c42\u7684\u53c2\u6570\u5c11\u4e00\uff0c\u6700\u540e\u663e\u793a\u5b9e\u4f8b\u5316\u4e00\u4e2a\u51fa\u53e3\u51fd\u6570\uff0c\u5f53\u53c2\u6570\u5305\u7684\u53c2\u6570\u90fd\u88ab\u89e3\u6790\u51fa\u6765\u540e\u5c31\u505c\u6b62\u3002</p> <ul> <li>\u9017\u53f7\u8868\u8fbe\u5f0f</li> </ul> <pre><code>template&lt;class Tp&gt;\nvoid print(Tp&amp; a) { std::cout &lt;&lt; a &lt;&lt; std::endl; }\n\ntemplate&lt;class... Args&gt;\nvoid f(Args... a)\n{\n    std::vector&lt;int&gt; vec{ (print(a),0)...};\n}\nint main()\n{\n    f(\"asd\", 123, 1.1);\n    return 0;\n}\n/*\n\u8f93\u51fa\u7ed3\u679c\uff1a\nasd\n123\n1.1\n*/\n</code></pre> <p>\u6b64\u65b9\u6cd5\u5728\u6784\u9020\u6570\u7ec4 <code>vec</code>  \u7684\u8fc7\u7a0b\u4e2d\u5c31\u5c06 <code>a</code> \u8fdb\u884c\u4e86\u5c55\u5f00\u3002<code>{ (print(a),0)...}</code> \u6700\u540e\u5c55\u5f00\u7684\u7ed3\u679c\u5c31\u662f <code>(print(arg1),0),(print(arg2),0),(print(arg3),0),...etc</code>\u3002</p> <p>C++11 \u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e2a\u65b0\u7684\u5173\u952e\u5b57\u6765\u8ba1\u7b97\u53c2\u6570\u5305\u7684\u5927\u5c0f <code>sizeof...()</code>\uff1a</p> <pre><code>template&lt;class... Args&gt;\nvoid f(Args... a)\n{\n    std::cout &lt;&lt; sizeof...(a) &lt;&lt; std::endl;\n}\n\nint main()\n{\n    f(\"asd\", 123, 1.1);\n    return 0;\n}\n/* \u8f93\u51fa\u7ed3\u679c\uff1a3 */\n</code></pre>"},{"location":"C%2B%2B/c%2B%2B11/%E5%8F%B3%E5%80%BC%E5%BC%95%E7%94%A8%E5%92%8C%E7%A7%BB%E5%8A%A8%E8%AF%AD%E4%B9%89/","title":"\u53f3\u503c\u5f15\u7528\u548c\u79fb\u52a8\u8bed\u4e49","text":""},{"location":"C%2B%2B/c%2B%2B11/%E5%8F%B3%E5%80%BC%E5%BC%95%E7%94%A8%E5%92%8C%E7%A7%BB%E5%8A%A8%E8%AF%AD%E4%B9%89/#_1","title":"\u53f3\u503c\u5f15\u7528","text":"<p>\u5de6\u503c\u53f3\u503c\u7684\u6982\u5ff5\u5728\u5f88\u65e9\u5c31\u4ee5\u53ca\u63d0\u51fa\u4e86\uff0c\u4f46\u4f20\u7edf C++98 \u4e2d\u7684\u5f15\u7528\u90fd\u662f\u5de6\u503c\u5f15\u7528\uff0c\u5728 C++11 \u4e2d\u624d\u63d0\u51fa\u4e86\u53f3\u503c\u5f15\u7528\u7684\u6982\u5ff5\u3002\u4f46\u65e0\u8bba\u662f\u5de6\u503c\u5f15\u7528\u8fd8\u662f\u53f3\u503c\u5f15\u7528\uff0c\u90fd\u662f\u7ed9\u5bf9\u8c61\u8d77\u522b\u540d\uff0c\u5e95\u5c42\u90fd\u662f\u6307\u9488\u3002</p>"},{"location":"C%2B%2B/c%2B%2B11/%E5%8F%B3%E5%80%BC%E5%BC%95%E7%94%A8%E5%92%8C%E7%A7%BB%E5%8A%A8%E8%AF%AD%E4%B9%89/#_2","title":"\u5de6\u503c\u548c\u53f3\u503c","text":"<p>\u5728\u7406\u89e3\u53f3\u503c\u5f15\u7528\u524d\uff0c\u6211\u4eec\u5148\u8981\u641e\u61c2\u5de6\u503c\u548c\u53f3\u503c\u7684\u662f\u4ec0\u4e48\u3002</p> <p>\u5de6\u503c (lvalue) \u548c \u53f3\u503c (rvalue) \u662f\u8868\u8fbe\u5f0f\u7684\u503c\u7c7b\u522b\u3002</p> <ul> <li> <p>\u5de6\u503c\uff1a\u6211\u4eec\u5b9a\u4e49\u7684\u6240\u6709\u5177\u540d\u53d8\u91cf\u901a\u5e38\u90fd\u662f\u4e00\u4e2a\u5de6\u503c\uff0c\u5b83\u901a\u5e38\u662f\u6709\u4e00\u5757\u56fa\u5b9a\u7684\u5185\u5b58\u7a7a\u95f4\u5177\u540d\u5bf9\u8c61\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5b83\u7684\u540d\u79f0\u8bbf\u95ee\u8fd9\u5757\u5185\u5b58\u5730\u5740\uff0c\u6240\u4ee5\u5b83\u76f8\u6bd4\u53f3\u503c\u4e5f\u5f80\u5f80\u6709\u66f4\u957f\u7684\u751f\u547d\u5468\u671f\u3002</p> </li> <li> <p>\u53f3\u503c\uff1a\u53f3\u503c\u901a\u5e38\u662f\u5b57\u9762\u5e38\u91cf ( C \u98ce\u683c\u5b57\u7b26\u4e32\u9664\u5916\uff0c\u5b83\u8868\u793a\u5730\u5740 ) \u3001\u8868\u8fbe\u5f0f\u8fd4\u56de\u503c\u6216\u662f\u51fd\u6570\u7684\u8fd4\u56de\u503c ( \u524d\u63d0\u662f\u8fd4\u56de\u503c\u4e0d\u662f\u5f15\u7528 )\uff0c\u5b83\u5f80\u5f80\u662f\u4ee3\u7801\u533a\u4e0a\u7684\u4e00\u4e2a\u5b57\u9762\u5e38\u91cf\u6216\u662f\u4e00\u5757\u5373\u5c06\u88ab\u91ca\u653e\u7a7a\u95f4\u7684\u5bf9\u8c61\uff0c\u751f\u547d\u5468\u671f\u5f88\u77ed\uff0c\u4e14\u901a\u5e38\u4e0d\u5177\u540d\u3002</p> </li> </ul> <p>C++11 \u5bf9\u503c\u7c7b\u522b\u505a\u51fa\u4e86\u7cbe\u7ec6\u7684\u5212\u5206\uff1a</p> <ul> <li> <p>\u5c06\u4ea1\u503c \uff08xvalue\uff09\uff1a\u751f\u547d\u5468\u671f\u5373\u5c06\u7ed3\u675f\u7684\u53d8\u91cf\u5bf9\u8c61\uff0c\u6216\u7531\u53f3\u503c\u5f15\u7528\u5f3a\u5236\u8f6c\u6362\u4ea7\u751f\u7684\u5bf9\u8c61\uff0c\u8fd9\u6837\u7684\u53d8\u91cf\u867d\u7136\u5177\u540d\uff0c\u4f46\u5b83\u4e5f\u662f\u53f3\u503c\u7684\u4e00\u79cd\u3002</p> </li> <li> <p>\u7eaf\u53f3\u503c \uff08prvalue\uff09\uff1a\u4f20\u7edf\u610f\u4e49\u4e0a\u7684\u53f3\u503c\uff0c\u5982\u533f\u540d\u5bf9\u8c61\u3001\u51fd\u6570\u8fd4\u56de\u503c\u4ee5\u53ca\u8868\u8fbe\u5f0f\u8fd4\u56de\u503c\u7b49\uff0c\u7eaf\u53f3\u503c\u901a\u5e38\u7528\u6765\u521d\u59cb\u5316\u5de6\u503c\u3002</p> </li> <li> <p>\u53f3\u503c \uff08rvalue\uff09\uff1a\u901a\u5e38\u6211\u4eec\u6240\u8bf4\u7684\u53f3\u503c\u662f\u5305\u62ec \u5c06\u4ea1\u503c \u548c \u7eaf\u53f3\u503c \u7684\u3002</p> </li> <li> <p>\u6cdb\u5de6\u503c \uff08gvalue\uff09\uff1a\u662f\u6307\u53ef\u4ee5\u901a\u8fc7\u540d\u5b57\u786e\u5b9a\u4e00\u5757\u5177\u4f53\u5730\u5740\u7684\u8868\u8fbe\u5f0f\u3002\u5c06\u4ea1\u503c \u4e5f\u662f\u6cdb\u5de6\u503c\u7684\u4e00\u79cd\uff0c\u56e0\u4e3a\u5b83\u5177\u540d\uff0c\u53ef\u4ee5\u786e\u5b9a\u4e00\u5757\u5177\u4f53\u7684\u5730\u5740\u7a7a\u95f4\u3002</p> </li> <li> <p>\u5de6\u503c \uff08lvalue\uff09 \uff1a \u5e76\u975e \u5c06\u4ea1\u503c \u7684 \u6cdb\u5de6\u503c\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u751f\u547d\u5468\u671f\u6682\u65f6\u4e0d\u4f1a\u7ed3\u675f\u7684\u5177\u540d\u53d8\u91cf\u3002</p> </li> </ul> <pre><code>// \u5de6\u503c\nint a = 3;\nint* pa = new int(2);\nconst int b = 1;\n\n\nint sum(int a,int b) { return a + b; }\n// \u7eaf\u53f3\u503c\n11.678          // \u5b57\u9762\u5e38\u91cf\nnullptr         // \u5b57\u9762\u5e38\u91cf\n10 * a          // \u8868\u8fbe\u5f0f\u8fd4\u56de\u503c\nsum(a,b)        // \u51fd\u6570\u8fd4\u56de\u503c\n\n\n// \u5c06\u4ea1\u503c\nint test()\n{\n    int a;    // \u6b64\u65f6\u751f\u547d\u5468\u671f\u6682\u65f6\u4e0d\u4f1a\u7ed3\u675f\uff0c\u8fd8\u662f\u5de6\u503c\n    return a; // \u8fd9\u91cc\u7684 a \u751f\u547d\u5468\u671f\u5373\u5c06\u7ed3\u675f\uff0c\u53d8\u4e3a\u5c06\u4ea1\u503c\n}\n</code></pre>"},{"location":"C%2B%2B/c%2B%2B11/%E5%8F%B3%E5%80%BC%E5%BC%95%E7%94%A8%E5%92%8C%E7%A7%BB%E5%8A%A8%E8%AF%AD%E4%B9%89/#_3","title":"\u5de6\u503c\u5f15\u7528\u548c\u53f3\u503c\u5f15\u7528","text":"<p>\u5de6\u503c\u5f15\u7528\u662f\u5bf9\u5de6\u503c\u7684\u5f15\u7528\uff0c\u5bf9\u5de6\u503c\u53d6\u522b\u540d\uff0c\u5f53\u7136\u4e5f\u53ef\u4e5f\u901a\u8fc7\u5c06\u5f15\u7528\u7c7b\u578b\u52a0\u4e0a\u5e38\u5c5e\u6027 (<code>const</code>) \u6765\u5f15\u7528\u53f3\u503c\u3002\u5728\u7c7b\u578b\u540e\u52a0 <code>&amp;</code> \u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u5de6\u503c\u5f15\u7528\uff1a</p> <pre><code>int&amp; lf_a = a;\nint*&amp; lf_pa = pa;\nconst int&amp; lf_b = b; \nconst int&amp; lf_rval = 10;    // \u5e38\u5c5e\u6027\u5de6\u503c\u5f15\u7528 \u5f15\u7528\u53f3\u503c\n</code></pre> <p>\u53f3\u503c\u5f15\u7528\u662f\u5bf9\u53f3\u503c\u7684\u5f15\u7528\uff0c\u5bf9\u53f3\u503c\u53d6\u522b\u540d\uff0c\u5f53\u7136\u4e5f\u53ef\u4e5f\u901a\u8fc7 <code>std::move()</code> \u51fd\u6570\uff0c\u5c06\u4e00\u4e2a\u5de6\u503c\u5f3a\u8f6c\u4e3a\u53f3\u503c\uff0c\u4ece\u800c\u8fdb\u884c\u53f3\u503c\u5f15\u7528\uff0c\u8fd9\u6837\u505a\u7684\u610f\u4e49\u5728\u540e\u6587\u4ecb\u7ecd\uff0c\u5728\u7c7b\u578b\u540e\u52a0 <code>&amp;&amp;</code> \u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u53f3\u503c\u5f15\u7528\uff1a</p> <pre><code>double&amp;&amp; rf_d = 11.678;\nint&amp;&amp; rf_exp = 10 * a;\nint&amp;&amp; rf_fun = sum(a,b);\nint a = 0;\nint&amp;&amp; rf_lval = std::move(a);   // \u53f3\u503c\u5f15\u7528 \u5f15\u7528\u5f3a\u8f6c\u540e\u7684\u5de6\u503c\n</code></pre> <p>\u5f15\u7528\u7684\u5e95\u5c42\u662f\u6307\u9488\uff0c\u4e0d\u7ba1\u662f\u5de6\u503c\u5f15\u7528\u8fd8\u662f\u53f3\u503c\u5f15\u7528\u672c\u8d28\u90fd\u662f\u4e00\u4e2a\u6307\u9488\u5e38\u91cf\uff0c\u5b83\u4eec\u90fd\u8bb0\u5f55\u5f15\u7528\u5bf9\u8c61\u7684\u5730\u5740\u3002\u4f46\u662f\u5bf9\u4e8e\u5b57\u9762\u5e38\u91cf\uff0c\u5b83\u53ea\u662f\u4ee3\u7801\u533a\u7684\u4e00\u6bb5\u6570\u636e\uff0c\u5b83\u7684\u5730\u5740\u662f\u4ec0\u4e48\uff1f\u96be\u9053\u662f\u4ee3\u7801\u533a\u7684\u4e00\u4e2a\u5730\u5740\u5417\uff1f\u663e\u7136\u4e0d\u53ef\u80fd\u662f\uff0c\u6211\u4eec\u770b\u4e00\u4e0b\u6c47\u7f16\u5c31\u4f1a\u53d1\u73b0\uff1a</p> <p>\u5bf9\u4e8e\u4e00\u4e2a\u5b57\u9762\u5e38\u91cf\u8fdb\u884c\u5f15\u7528\u65f6\uff0c\u4f1a\u5148\u5c06\u5176\u5728\u6808\u533a\u521b\u5efa\u4e00\u4e2a\u533f\u540d\u53d8\u91cf\uff0c\u6765\u5b58\u653e\u8fd9\u4e2a\u503c\uff0c\u53f3\u503c\u5f15\u7528\u4e8b\u5b9e\u4e0a\u5f15\u7528\u7684\u662f\u8fd9\u4e2a\u533f\u540d\u53d8\u91cf\u3002\u5bf9\u4e8e\u8868\u8fbe\u5f0f\u8fd0\u7b97\u7ed3\u679c\u548c\u51fd\u6570\u8fd4\u56de\u503c ( \u8fd4\u56de\u503c\u4e0d\u80fd\u662f\u5de6\u503c\u5f15\u7528 )\uff0c\u53f3\u503c\u5f15\u7528\u4e5f\u662f\u5f15\u7528\u7684\u8fd4\u56de\u7ed3\u679c\u7684\u4e34\u65f6\u533f\u540d\u5bf9\u8c61\u3002\u8fd9\u4e8b\u5b9e\u4e0a\u548c\u5e38\u5c5e\u6027\u5de6\u503c\u5f15\u7528\u5f15\u7528\u533f\u540d\u5bf9\u8c61\u662f\u76f8\u540c\u7684\uff0c\u53ea\u4e0d\u8fc7\u5de6\u503c\u5f15\u7528\u662f\u4e0d\u53ef\u4ee5\u4fee\u6539\u533f\u540d\u5bf9\u8c61\u7684\uff0c\u800c\u53f3\u503c\u5f15\u7528\u53ef\u4ee5\u3002</p>"},{"location":"C%2B%2B/c%2B%2B11/%E5%8F%B3%E5%80%BC%E5%BC%95%E7%94%A8%E5%92%8C%E7%A7%BB%E5%8A%A8%E8%AF%AD%E4%B9%89/#_4","title":"\u79fb\u52a8\u8bed\u4e49","text":""},{"location":"C%2B%2B/c%2B%2B11/%E5%8F%B3%E5%80%BC%E5%BC%95%E7%94%A8%E5%92%8C%E7%A7%BB%E5%8A%A8%E8%AF%AD%E4%B9%89/#_5","title":"\u6570\u636e\u62f7\u8d1d\u548c\u6570\u636e\u79fb\u52a8","text":"<p>\u79fb\u52a8\u8bed\u4e49 \u662f\u4e3a\u4e86\u964d\u4f4e\u5bf9\u8c61\u5728\u51fd\u6570\u95f4\u4f20\u9012\u8fc7\u7a0b\u4e2d\u62f7\u8d1d\u65f6\u7684\u8d44\u6e90\u6d88\u8017\u3002\u90a3\u4e48\u4ec0\u4e48\u662f\u79fb\u52a8\u8bed\u4e49\u5462\uff1f\u6211\u4eec\u5148\u6765\u770b\u4e00\u4e2a\u521d\u5b66 C++ \u65f6\u4e00\u5b9a\u4f1a\u9047\u5230\u7684\u95ee\u9898\uff1a\u6df1\u62f7\u8d1d\u3002\u4ee5\u4e0b\u9762\u7684\u7c7b\u4e3a\u4f8b\uff1a</p> <pre><code>class mstr\n{\npublic:\n    char* p;\n    int sz;\n    mstr()\n    {\n        p = new char[1] {'\\0'};\n        sz = 1;\n    }\n    // \u5b57\u7b26\u4e32\u6784\u9020\n    mstr(const char* str)\n    {\n        sz = strlen(str) + 1;\n        p = new char[sz];\n        memcpy(p, str, sizeof(char) * sz);\n    }\n\n    // \u62f7\u8d1d\u6784\u9020\n    mstr(const mstr&amp; ot)\n    {\n        std::cout &lt;&lt; \"mstr(const mstr&amp; ot) \u6df1\u62f7\u8d1d\" &lt;&lt; std::endl;\n        p = new char[ot.sz];\n        sz = ot.sz;\n        memcpy(p, ot.p, ot.sz);\n    }\n    // \u590d\u5236\u62f7\u8d1d\n    mstr&amp; operator=(const mstr&amp; ot)\n    {\n        std::cout &lt;&lt; \"mstr&amp; operator=(const mstr&amp; ot) \u6df1\u62f7\u8d1d\" &lt;&lt; std::endl;\n        if (p) delete[] p;\n        p = new char[ot.sz];\n        sz = ot.sz;\n        memcpy(p, ot.p, ot.sz);\n        return *this;\n    }\n    ~mstr()\n    {delete[] p;}\n\n    /* \u5176\u4ed6\u529f\u80fd\u5b9e\u73b0\u7701\u7565 */\n};\n</code></pre> <p>\u6211\u4eec\u63d0\u4f9b\u4e86\u590d\u5236\u62f7\u8d1d\u548c\u62f7\u8d1d\u6784\u9020\uff0c\u6765\u9632\u6b62 Double Delete \uff0c\u4f46\u662f\u5728\u4e00\u4e9b\u573a\u666f\u4e0b\u4e8b\u5b9e\u4e0a\u5e76\u4e0d\u9700\u8981\u6df1\u62f7\u8d1d\uff0c\u4f8b\u5982\uff1a\u6211\u4eec\u60f3\u8fd4\u56de\u4e00\u4e2a\u51fd\u6570\u5bf9\u8c61\u65f6\u4e86\uff0c\u4f1a\u521b\u5efa\u4e24\u6b21 \u4e34\u65f6\u53d8\u91cf \uff0c\u90fd\u4f1a\u8fdb\u884c\u6df1\u62f7\u8d1d\uff1a</p> <pre><code>mstr test()\n{\n    mstr a;\n    return a; // \u6b64\u65f6 a \u4e3a\u53f3\u503c\n}\nint main()\n{\n    mstr b;\n    b = test(); // \u51fd\u6570\u8fd4\u56de\u503c\u4e3a\u53f3\u503c\n    return 0;\n}\n/*\n\u8fd0\u884c\u7ed3\u679c\uff1a\nmstr(const mstr&amp; ot) \u6df1\u62f7\u8d1d\nmstr&amp; operator=(const mstr&amp; ot) \u6df1\u62f7\u8d1d\n\n\u8981\u6ce8\u610f\u4e0d\u80fd\u5199\u6210\uff1a\nmstr b = test();\n\u8fde\u7eed\u7684\u6784\u9020\u4f1a\u88ab\u7f16\u8bd1\u5668\u4f18\u5316\uff0c\u53d8\u4e3a\u4e00\u6b21\u6784\u9020\u3002\n\u6240\u4ee5\u60f3\u8981\u770b\u5230\u5b8c\u6574\u6784\u9020\u548c\u8d4b\u503c\u64cd\u4f5c\uff0c\u8981\u5148\u521b\u5efa b\uff0c\u518d\u8fdb\u884c\u8d4b\u503c \n*/\n</code></pre> <p>\u9996\u5148\u5bf9\u8c61\u8981\u4ece <code>test()</code> \u51fd\u6570\u7684\u6808\u5e27\u62f7\u8d1d\u4e00\u4efd\u6570\u636e\u5230 <code>main()</code> \u51fd\u6570\u51fd\u6570\u6808\u5e27\u4e2d\uff0c\u6b64\u65f6\u4f1a\u751f\u6210\u4e00\u4efd\u4e34\u65f6\u533f\u540d\u53d8\u91cf\uff0c\u6765\u5b58\u50a8\u8fd9\u4efd\u6570\u636e\uff0c\u7136\u540e\u8fd9\u4efd\u4e34\u65f6\u53d8\u91cf\u518d\u5c06\u6570\u636e\u62f7\u8d1d\u7ed9\u6211\u4eec\u8981\u8d4b\u503c\u7684\u5bf9\u8c61 <code>b</code>\u3002</p> <p>\u6211\u4eec\u53d1\u73b0\u4e24\u6b21\u62f7\u8d1d\uff0c\u90fd\u662f\u62f7\u8d1d\u4e00\u4e2a \u53f3\u503c \u7684\u5806\u533a\u6570\u636e\uff0c\u8fd9\u597d\u50cf\u6839\u672c\u6ca1\u5fc5\u8981\uff0c\u6211\u4eec\u4e3a\u4ec0\u4e48\u8981\u91cd\u65b0\u7533\u8bf7\u7a7a\u95f4\u62f7\u8d1d\u6570\u636e\uff0c\u800c\u4e0d\u662f\u7ee7\u7eed\u7ef4\u62a4\u539f\u5148\u7684 \u53f3\u503c\u5bf9\u8c61 \u5728\u5806\u533a\u7684\u7a7a\u95f4\u5462\u3002\u540e\u8005\u6548\u7387\u660e\u663e\u662f\u66f4\u9ad8\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u53ea\u9700\u8981\u5c06\u90a3\u5757\u5806\u533a\u7a7a\u95f4\u7684\u5730\u5740\u79fb\u52a8\u5230\u65b0\u5bf9\u8c61\u4e2d\u5c31\u53ef\u4ee5\u4e86\uff0c\u800c\u8fd9\u5c31\u662f\u79fb\u52a8\u8bed\u4e49\uff0c\u53ea\u505a\u6570\u636e\u7684\u8f6c\u79fb\u800c\u975e\u6570\u636e\u7684\u62f7\u8d1d\uff0c\u8fd9\u6837\u907f\u514d\u7684\u539f\u59cb\u6570\u636e\u7684\u62f7\u8d1d\u3002</p> <p>\u8981\u60f3\u5b9e\u73b0\u79fb\u52a8\u8bed\u4e49\uff0c\u5c31\u9700\u8981\u91c7\u7528\u67d0\u79cd\u65b9\u5f0f\uff0c\u8ba9\u7f16\u8bd1\u5668\u77e5\u9053\u4ec0\u4e48\u65f6\u5019\u8981\u8fdb\u884c\u6df1\u62f7\u8d1d\uff0c\u4ec0\u4e48\u65f6\u5019\u5c31\u53ea\u9700\u8981\u8fdb\u884c\u6570\u636e\u7684\u8f6c\u79fb\u3002\u8fd9\u65f6\u53f3\u503c\u5c31\u6392\u4e0a\u7528\u573a\u4e86\u3002\u6211\u4eec\u9664\u4e86\u4e00\u822c\u7684\u62f7\u8d1d\u6784\u9020\u548c\u62f7\u8d1d\u8d4b\u503c\u5916\uff0c\u518d\u63d0\u4f9b \u79fb\u52a8\u6784\u9020\u3001\u79fb\u52a8\u8d4b\u503c\uff0c\u4e00\u822c\u7684\u62f7\u8d1d\u4ee5 <code>const</code> \u5de6\u503c\u5f15\u7528\u4e3a\u53c2\u6570\uff0c\u79fb\u52a8\u8bed\u4e49\u4ee5 \u53f3\u503c\u5f15\u7528 \u505a\u53c2\u6570\uff0c\u524d\u8005\u63a5\u6536\u5de6\u503c\u53c2\u6570\uff0c\u540e\u8005\u63a5\u6536\u53f3\u503c\u53c2\u6570\uff0c\u56e0\u4e3a\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u53f3\u503c\u90fd\u662f\u4e00\u4e2a\u751f\u547d\u5373\u5c06\u7ed3\u675f\u7684\u5bf9\u8c61\uff0c\u6240\u4ee5\u7f16\u8bd1\u5668\u4f1a\u8c03\u7528\u79fb\u52a8\u8bed\u4e49\uff0c\u5c06\u53f3\u503c\u7684\u7684\u6570\u636e\u79fb\u52a8\u5230\u5f53\u524d\u5bf9\u8c61\u4e2d\uff1a</p> <p><pre><code>// \u79fb\u52a8\u6784\u9020\nmstr(mstr&amp;&amp; ot)\n{\n    cout &lt;&lt; \"mstr(mstr&amp;&amp; ot) \u79fb\u52a8\u6784\u9020\" &lt;&lt; endl;\n    p = new char[1] {'\\0'};\n    sz = 1;\n    std::swap(ot.sz, this-&gt;sz);\n    std::swap(ot.p, this-&gt;p);\n}\n// \u79fb\u52a8\u8d4b\u503c\nmstr&amp; operator=(mstr&amp;&amp; ot)\n{\n    cout &lt;&lt; \"mstr&amp; operator=(mstr&amp;&amp; ot) \u79fb\u52a8\u8d4b\u503c\" &lt;&lt; endl;\n    std::swap(ot.sz, this-&gt;sz);\n    std::swap(ot.p, this-&gt;p);\n    return *this;\n}\n\n/*\n\u6dfb\u52a0\u79fb\u52a8\u8bed\u4e49\u540e\uff0c\u4e0a\u8ff0\u4f8b\u5b50\u8fd0\u884c\u7ed3\u679c\u4e3a:\nmstr(mstr&amp;&amp; ot) \u79fb\u52a8\u6784\u9020\nmstr&amp; operator=(mstr&amp;&amp; ot) \u79fb\u52a8\u8d4b\u503c\n*/\n</code></pre> \u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u53ea\u8fdb\u884c\u4e86\u79fb\u52a8\u6784\u9020\u548c\u79fb\u52a8\u8d4b\u503c\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u957f\u5b57\u7b26\u4e32\u6765\u8bf4\uff0c\u76f8\u6bd4\u76f4\u63a5\u62f7\u8d1d\uff0c\u6548\u7387\u4f1a\u5927\u5e45\u63d0\u9ad8\u3002</p>"},{"location":"C%2B%2B/c%2B%2B11/%E5%8F%B3%E5%80%BC%E5%BC%95%E7%94%A8%E5%92%8C%E7%A7%BB%E5%8A%A8%E8%AF%AD%E4%B9%89/#_6","title":"\u7c7b\u4e2d\u65b0\u7684\u9ed8\u8ba4\u51fd\u6570","text":"<p>C++11 \u4e2d\u6dfb\u52a0\u4e86 \u79fb\u52a8\u6784\u9020 \u548c \u79fb\u52a8\u62f7\u8d1d \u7684\u4f5c\u4e3a\u7c7b\u7684\u9ed8\u8ba4\u51fd\u6570\uff0c\u5f53\u6211\u4eec\u6ca1\u6709\u63d0\u4f9b\u79fb\u52a8\u6784\u9020\u548c\u79fb\u52a8\u62f7\u8d1d\uff0c\u5e76\u4e14\u6ca1\u6709\u63d0\u4f9b\u6790\u6784\u51fd\u6570\u3001\u62f7\u8d1d\u6784\u9020\u548c\u62f7\u8d1d\u8d4b\u503c\u7684\u4efb\u610f\u4e00\u4e2a\u5b9e\u73b0\u65f6\uff0c\u7f16\u8bd1\u5668\u4f1a\u9ed8\u8ba4\u751f\u6210\u4e00\u4efd\u79fb\u52a8\u6784\u9020\u548c\u79fb\u52a8\u62f7\u8d1d\u3002\u9ed8\u8ba4\u751f\u6210\u7684\u79fb\u52a8\u6784\u9020\u548c\u79fb\u52a8\u62f7\u8d1d\uff0c\u5bf9\u4e8e\u5185\u7f6e\u7c7b\u578b\u6210\u5458\u4f1a\u6267\u884c\u9010\u6210\u5458\u6309\u5b57\u8282\u62f7\u8d1d\uff0c\u81ea\u5b9a\u4e49\u7c7b\u578b\u6210\u5458\uff0c\u5219\u9700\u8981\u770b\u8fd9\u4e2a\u6210\u5458\u662f\u5426\u5b9e\u73b0\u79fb\u52a8\u6784\u9020\uff0c\u5982\u679c\u5b9e\u73b0\u4e86\u5c31\u8c03\u7528\u79fb\u52a8\u6784\u9020\uff0c\u6ca1\u6709\u5b9e\u73b0\u5c31\u8c03\u7528\u62f7\u8d1d\u6784\u9020\u3002</p>"},{"location":"C%2B%2B/c%2B%2B11/%E5%8F%B3%E5%80%BC%E5%BC%95%E7%94%A8%E5%92%8C%E7%A7%BB%E5%8A%A8%E8%AF%AD%E4%B9%89/#stdmove","title":"<code>std::move</code>","text":"<p><code>std::move</code> \u53ef\u4ee5\u4ee5\u5c06\u4e00\u4e2a\u5de6\u503c\u5f3a\u5236\u8f6c\u6362\u4e3a\u4e00\u4e2a\u5c06\u4ea1\u503c\u8868\u8fbe\u5f0f\u3002\u5f53\u7c7b\u6709\u79fb\u52a8\u8bed\u4e49\u7684\u5b9e\u73b0\uff0c\u5b83\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u5c06\u4e00\u4e2a\u5de6\u503c\u7684\u6570\u636e\u79fb\u52a8\u5230\u4e00\u4e2a\u65b0\u7684\u53d8\u91cf\u4e2d\uff1a</p> <p><pre><code>int mina()\n{\n    mstr b(\"cyb\");\n    mstr c(\"C++11\");\n    std::cout &lt;&lt; b.p &lt;&lt; '\\n';\n    std::cout &lt;&lt; c.p &lt;&lt; '\\n';\n    b = std::move(c);\n    std::cout &lt;&lt; b.p &lt;&lt; '\\n';\n    std::cout &lt;&lt; c.p &lt;&lt; '\\n';\n    return 0;\n}\n\n/*\n\u8f93\u51fa\u7ed3\u679c\uff1a\ncyb\nC++11\nmstr&amp; operator=(mstr&amp;&amp; ot) \u79fb\u52a8\u8d4b\u503c\nC++11\ncyb\n*/\n</code></pre> \u5728\u4e00\u4e9b\u573a\u666f\u4e0b\uff0c\u4f7f\u7528 <code>std::move</code> \u53ef\u4ee5\u63d0\u9ad8\u6211\u4eec\u4ee3\u7801\u7684\u6548\u7387\uff0c\u4f8b\u5982\uff1a\u5728 STL \u5bb9\u5668 <code>push_back()</code>\uff0c\u65f6\u4f7f\u7528\uff1a</p> <p><pre><code>int main()\n{\n    std::vector&lt;mstr&gt; a;\n    mstr s;\n    a.push_back(std::move(s));\n    return 0;\n}\n</code></pre> C++11 \u4e2d STL \u5e93\u4e2d\u7684\u5bb9\u5668\u4f1a\u63d0\u4f9b \u53f3\u503c\u5f15\u7528 \u7248\u672c\u7684 <code>push_back</code> \u51fd\u6570\uff0c\u5b83\u4e0e \u5de6\u503c\u5f15\u7528 \u7248\u672c\u4e0d\u592a\u7684\u5730\u65b9\u5728\u4e8e\uff0c\u4f1a\u8c03\u7528\u79fb\u52a8\u6784\u9020\uff0c\u5c06 <code>s</code> \u4e2d\u7684\u6570\u636e\u8f6c\u79fb\u81f3\u5bb9\u5668\u4e2d\uff0c\u800c\u5de6\u503c\u7248\u672c\u662f\u62f7\u8d1d\u6784\u9020\uff0c\u5c06\u4e00\u5757\u62f7\u8d1d\u51fa\u7684\u65b0\u6570\u636e\u52a0\u5165\u5bb9\u5668\u4e2d\u3002</p> <p>\u8981\u6ce8\u610f\u7684\u662f\uff0c\u6211\u4eec\u8981\u5c3d\u91cf\u907f\u514d\u4f7f\u7528\u88ab <code>std::move</code> \u540e\u7684\u5de6\u503c\u5bf9\u8c61\uff0c\u56e0\u4e3a\u5404\u4e2a\u7c7b\u7684\u79fb\u52a8\u8bed\u4e49\u5b9e\u73b0\u662f\u4e0d\u540c\u7684\uff0c\u5b83\u7684\u6570\u636e\u53ef\u80fd\u5df2\u7ecf\u88ab\u8f6c\u79fb\uff0c\u518d\u53bb\u4f7f\u7528\u53ef\u80fd\u4f1a\u6709\u5f15\u53d1\u4e00\u4e9b\u9519\u8bef\u3002</p> <p>\u5e76\u4e14\u6211\u4eec\u8981\u907f\u514d\u6ee5\u7528 <code>std::move</code>\uff0c\u5982\u4e0b\uff1a</p> <pre><code>mstr test()\n{\n    mstr a(\"a\");\n    return std::move(a);\n}\n</code></pre> <p>\u8fd9\u5c31\u662f\u4e00\u4e2a\u65e0\u610f\u4e49\u7684 <code>std::move</code> \uff0c\u56e0\u4e3a\u8fd9\u91cc <code>a</code> \u662f\u9690\u5f0f\u53ef\u4ee5\u79fb\u52a8\u662f\u5b9e\u4f53\uff0c\u6240\u4ee5\u8fd9\u91cc\u4f1a\u9ed8\u8ba4\u5c31\u8c03\u7528\u79fb\u52a8\u6784\u9020\uff0c\u4e0a\u6587\u5df2\u7ecf\u4ecb\u7ecd\u8fc7\u3002\u800c\u5bf9\u4e8e\u4e00\u4e2a\u7c7b\u7684\u6210\u5458\u51fd\u6570\u8fd4\u56de\u7c7b\u6570\u636e\u6210\u5458\u65f6\uff1a</p> <p><pre><code>struct A\n{ \n    mstr x;\n    mstr test()\n    {\n        return x;\n    }\n    mstr test2()\n    {\n        return std::move(x);\n    }\n};\nint main()\n{\n    A a;\n    a.test();\n    a.test2();\n    return 0;\n}\n/*\n\u8fd0\u884c\u7ed3\u679c:\nmstr(const mstr&amp; ot) \u6df1\u62f7\u8d1d\nmstr(mstr&amp;&amp; ot) \u79fb\u52a8\u6784\u9020\n*/\n</code></pre> \u6211\u4eec\u53d1\u73b0\u4e0d\u4f7f\u7528 <code>std::move</code> \u7684\u51fd\u6570\u662f\u8c03\u7528\u4e86\u62f7\u8d1d\uff0c\u8fd9\u662f\u56e0\u4e3a\u8fd9\u91cc <code>x</code> \u4e0d\u662f\u9690\u5f0f\u53ef\u79fb\u52a8\u5b9e\u4f53\uff0c\u5982\u679c\u4e0d <code>std::move</code> \uff0c\u76f4\u63a5 <code>return</code> \u4f1a\u8fdb\u884c\u62f7\u8d1d\u3002\u4e3a\u4ec0\u4e48\u4f1a\u8fd9\u6837\u4e5f\u5f88\u597d\u7406\u89e3\uff0c\u56e0\u4e3a\u6570\u636e\u6210\u5458\u5728\u6210\u5458\u51fd\u6570\u7ed3\u675f\u65f6\uff0c\u751f\u547d\u5468\u671f\u8fd8\u4e0d\u4f1a\u7ed3\u675f\uff0c\u6240\u4ee5\u4e0d\u4f1a\u56e0\u4e3a\u53d8\u4e3a \u5c06\u4ea1\u503c\uff0c\u800c\u6539\u53d8\u503c\u7c7b\u522b\u3002</p>"},{"location":"C%2B%2B/c%2B%2B11/%E5%8F%B3%E5%80%BC%E5%BC%95%E7%94%A8%E5%92%8C%E7%A7%BB%E5%8A%A8%E8%AF%AD%E4%B9%89/#_7","title":"\u5b8c\u7f8e\u8f6c\u53d1","text":""},{"location":"C%2B%2B/c%2B%2B11/%E5%8F%B3%E5%80%BC%E5%BC%95%E7%94%A8%E5%92%8C%E7%A7%BB%E5%8A%A8%E8%AF%AD%E4%B9%89/#_8","title":"\u4e07\u80fd\u5f15\u7528","text":"<p>C++11 \u63d0\u4f9b\u4e86\u4e07\u80fd\u5f15\u7528 ( \u901a\u7528\u5f15\u7528 )\uff0c\u5b83\u65e2\u53ef\u4ee5\u63a5\u53d7\u5de6\u503c\u5f15\u7528\uff0c\u4e5f\u80fd\u63a5\u53d7\u53f3\u503c\u5f15\u7528\uff0c\u4f46\u662f\u8981\u6ee1\u8db3\u4e00\u4e0b\u4e24\u4e2a\u6761\u4ef6\uff1a</p> <ul> <li>\u5fc5\u987b\u6ee1\u8db3 <code>T&amp;&amp;</code> \u7684\u5f62\u5f0f</li> <li>\u7c7b\u578b <code>T</code> \u8981\u662f\u7531\u63a8\u5bfc\u7684\u6765\u7684\u3002</li> </ul> <p>\u4e0b\u9762\u5c31\u662f\u4e00\u4e2a\u6a21\u677f\u51fd\u6570\u4e07\u80fd\u5f15\u7528\u7684\u4f8b\u5b50\uff1a</p> <pre><code>template&lt;class T&gt;\nvoid f(T&amp;&amp; a){ }\n</code></pre> <p>\u5982\u679c <code>T</code> \u7684\u63a8\u5bfc\u7ed3\u679c\u662f\u5de6\u503c\u7684\u8bdd\uff0c <code>a</code> \u7684\u7c7b\u578b\u5c31\u662f\u5de6\u503c\u5f15\u7528\uff0c\u5982\u679c <code>T</code> \u63a8\u5bfc\u7ed3\u679c\u662f\u53f3\u503c\u7684\u8bdd\uff0c <code>a</code> \u7684\u7c7b\u578b\u5c31\u662f\u53f3\u503c\u5f15\u7528\u3002 </p> <p>\u5e38\u89c1\u53ef\u4ee5\u5f62\u6210\u4e07\u80fd\u5f15\u7528\u7684\u60c5\u51b5\u5982\u4e0b\uff1a</p> <ul> <li>\u51fd\u6570\u6a21\u677f</li> <li><code>auto</code> \u58f0\u660e</li> <li><code>decltype</code> \u58f0\u660e</li> </ul> <p>\u6709\u4e00\u79cd\u60c5\u51b5\u9700\u8981\u6ce8\u610f\uff0c\u4e0b\u9762\u8fd9\u79cd\u60c5\u51b5\u662f\u4e07\u80fd\u5f15\u7528\u5417\uff1f</p> <pre><code>template&lt;class T&gt;\nclass A\n{\n    void fun(T&amp;&amp; ot);\n};\n</code></pre> <p>\u5b83\u4e0d\u662f\uff0c\u56e0\u4e3a\u5f53\u7c7b\u521b\u5efa\u5bf9\u8c61\u65f6\uff0c <code>T</code> \u7684\u7c7b\u578b\u5c31\u5df2\u7ecf\u786e\u5b9a\u4e86\uff0c\u5728\u8c03\u7528\u51fd\u6570 <code>fun()</code> \u65f6\uff0c\u4e0d\u5b58\u5728\u7c7b\u578b <code>T</code> \u7684\u63a8\u5bfc\uff0c\u6240\u4ee5\u4e0d\u80fd\u5f62\u6210\u4e07\u80fd\u5f15\u7528\u3002</p>"},{"location":"C%2B%2B/c%2B%2B11/%E5%8F%B3%E5%80%BC%E5%BC%95%E7%94%A8%E5%92%8C%E7%A7%BB%E5%8A%A8%E8%AF%AD%E4%B9%89/#_9","title":"\u5b8c\u7f8e\u8f6c\u53d1","text":"<p>\u5f53\u6211\u4eec\u5728\u4e00\u4e2a\u51fd\u6570\u4e2d\u60f3\u8f93\u51fa\u4e00\u4e2a\u53c2\u6570\u7684\u4e4b\u7c7b\u578b\u65f6\uff0c\u5c31\u9700\u8981\u8fdb\u884c\u53d8\u91cf\u8f6c\u53d1\uff0c\u4f46\u662f\u4e00\u822c\u7684\u53c2\u6570\u7c7b\u578b\uff0c\u5f53\u6211\u4eec\u5c06\u53c2\u6570\u4f20\u5165\u4ee5\u540e\uff0c\u53c2\u6570\u7684\u503c\u7c7b\u522b\u5c31\u5df2\u7ecf\u53d8\u4e3a\u4e86\u5de6\u503c\uff1a</p> <pre><code>// \u9488\u5bf9\u4e0d\u540c\u7684\u4e4b\u7c7b\u522b\u8f93\u51fa\u5bf9\u5e94\u7c7b\u578b\nvoid show_type(mstr&amp; a){ cout &lt;&lt; \"\u5de6\u503c\" &lt;&lt; endl; }\nvoid show_type(const mstr&amp; a){cout &lt;&lt; \"const \u5de6\u503c\" &lt;&lt;endl;}\nvoid show_type(mstr&amp;&amp; a){cout &lt;&lt; \"\u53f3\u503c\" &lt;&lt;endl;}\nvoid show_type(const mstr&amp;&amp; a){cout &lt;&lt; \"const \u53f3\u503c\" &lt;&lt;endl;}\n\n// 1. \u76f4\u63a5\u4f20\u9012\u5bf9\u8c61\nvoid fun(mstr a) { show_type(a); }\n// 2. \u4f20\u9012\u5de6\u503c\u5f15\u7528\nvoid fun(mstr&amp; a) { show_type(a); }\n// 3. \u4f20\u9012\u5e38\u5c5e\u6027\u5de6\u503c\u5f15\u7528\nvoid fun(const mstr&amp; a) { show_type(a); }\n</code></pre> <p>\u4f46\u662f\u8fd9\u4e9b\u5b9e\u73b0\u90fd\u4e0d\u662f\u5b8c\u7f8e\u7684\u8f6c\u53d1\u7684\uff0c\u7b2c\u4e00\u4e2a\u4f1a\u8c03\u7528\u62f7\u8d1d\u6784\u9020\uff0c\u5f97\u5230\u4e00\u4e2a\u65b0\u5bf9\u8c61\uff0c\u503c\u7c7b\u522b\u53d8\u4e3a\u5de6\u503c\uff0c\u7b2c\u4e8c\u4e2a\u4e0d\u80fd\u4f20\u9012\u53f3\u503c\uff0c\u7b2c\u4e09\u6b21\u4e2a\u6539\u53d8\u4e86\u5bf9\u8c61\u5e38\u5c5e\u6027\uff0c\u90fd\u4e0d\u662f\u5bf9 <code>a</code> \u7684\u5b8c\u7f8e\u8f6c\u53d1\u3002\u8fd9\u65f6\u6211\u4eec\u5c31\u9700\u8981\u4e00\u79cd\u5373\u53ef\u4ee5\u63a5\u6536\u53f3\u503c\u4e5f\u53ef\u4ee5\u5c31\u6536\u5de6\u503c\u7684\u5f62\u53c2\uff0c\u6ca1\u9519\u5c31\u662f\u4e07\u80fd\u5f15\u7528\uff1a</p> <pre><code>template&lt;class T&gt;\nvoid perfect_forward(T&amp;&amp; x)\n{\n    show_type(x); \n}\nint main()\n{\n    mstr a;\n    perfect_forward(a);\n    perfect_forward(std::move(a));\n    const mstr b;\n    perfect_forward(b);\n    perfect_forward(std::move(b));\n    return 0;\n}\n/*\n\u8fd0\u884c\u7ed3\u679c\uff1a\n\u5de6\u503c\n\u5de6\u503c\nconst \u5de6\u503c\nconst \u5de6\u503c\n*/\n</code></pre> <p>\u4e3a\u4ec0\u4e48\u8f93\u51fa\u7684\u90fd\u662f\u5de6\u503c\uff0c\u8fd9\u65f6\u56e0\u4e3a\u5728 <code>perfect_forward</code> \u5185\u7684 <code>x</code> \u662f\u4e00\u4e2a\u5de6\u503c\uff0c\u6211\u4eec\u60f3\u8981\u83b7\u53d6 <code>x</code> \u5bf9\u8c61\u539f\u751f\u503c\u7c7b\u522b\u65f6\u5c31\u9700\u8981\u8c03\u7528\u51fd\u6570 <code>std::forward&lt;&gt;</code>\uff1a</p> <pre><code>template&lt;class T&gt;\nvoid perfect_forward(T&amp;&amp; x)\n{\n    show_type(std::forward&lt;T&gt;(x));\n}\n/*\n\u8fd0\u884c\u7ed3\u679c\uff1a\n\u5de6\u503c\n\u53f3\u503c\nconst \u5de6\u503c\nconst \u53f3\u503c\n*/\n</code></pre> <p>\u5f53\u6211\u4eec\u60f3\u4fdd\u6301\u5b9e\u53c2\u7684\u5c5e\u6027\u65f6\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\u6a21\u677f\u51fd\u6570 <code>std::forward&lt;&gt;</code>\u3002\u800c <code>std::forward&lt;&gt;</code> \u5c31\u662f\u4e3a\u4e86\u9632\u6b62\u53f3\u503c\u5728\u51fd\u6570\u4f20\u53c2\u540e\u9000\u5316\u4e3a\u5de6\u503c\uff0c\u5bfc\u81f4\u53c2\u6570\u5339\u914d\u65f6\u51fa\u73b0\u9519\u8bef\u3002</p>"},{"location":"C%2B%2B/c%2B%2B11/%E5%A4%9A%E7%BA%BF%E7%A8%8B/","title":"\u591a\u7ebf\u7a0b","text":""},{"location":"C%2B%2B/c%2B%2B11/%E5%A4%9A%E7%BA%BF%E7%A8%8B/#_1","title":"\u7b80\u4ecb","text":"<p>\u5728C++11\u4e4b\u524d\uff0c\u6d89\u53ca\u5230\u591a\u7ebf\u7a0b\u95ee\u9898\uff0c\u90fd\u662f\u548c\u5e73\u53f0\u76f8\u5173\u7684\uff0c\u6bd4\u5982 windows \u548c linux \u4e0b\u5404\u6709\u81ea\u5df1\u7684\u63a5\u53e3\uff0c\u8fd9\u4f7f\u5f97\u4ee3\u7801\u7684\u53ef\u79fb\u690d\u6027\u6bd4\u8f83\u5dee\u3002C++11\u4e2d\u6700\u91cd\u8981\u7684\u7279\u6027\u5c31\u662f\u5bf9\u7ebf\u7a0b\u8fdb\u884c\u652f\u6301\u4e86\uff0c\u4f7f\u5f97C++\u5728\u5e76\u884c\u7f16\u7a0b\u65f6\u4e0d\u9700\u8981\u4f9d\u8d56\u7b2c\u4e09\u65b9\u5e93\uff0c\u800c\u4e14\u5728\u539f\u5b50\u64cd\u4f5c\u4e2d\u8fd8\u5f15\u5165\u4e86\u539f\u5b50\u7c7b\u7684\u6982\u5ff5\u3002</p> <p>C++11\u5927\u81f4\u589e\u52a0\u4e86\u4e94\u4e2a\u5e93\uff0c\u5176\u4e2d\u5e38\u89c1\u7684\u6709\uff1a\u7ebf\u7a0b\u5e93(thread)\u3001\u4e92\u65a5\u91cf\u5e93\uff08mutex\uff09\u3001\u539f\u5b50\u6027\u64cd\u4f5c\u5e93\uff08atomic\uff09\u3001\u6761\u4ef6\u53d8\u91cf\u5e93\uff08condition_variable\uff09\u3002</p> \u4ea4\u66ff\u6253\u5370 <pre><code>/*\n\u4f7f\u7528\u6761\u4ef6\u53d8\u91cf\u5b9e\u73b0\u4ea4\u66ff\u6253\u5370\u5947\u6570\u548c\u5076\u6570\n*/\n#include &lt;iostream&gt;\n#include &lt;thread&gt;\n#include &lt;mutex&gt;\n#include &lt;condition_variable&gt;\n#include &lt;chrono&gt;\nusing namespace std;\n\nint main()\n{\n    mutex mt;\n    thread odd,even;\n    condition_variable cv;\n    bool f = false;\n    auto f0 = [&amp;]()\n    {\n        int now = 1;\n        for(;;)\n        {\n            unique_lock&lt;mutex&gt; ulk(mt);\n            if(!f)\n                cv.wait(ulk);\n            cout &lt;&lt; this_thread::get_id() &lt;&lt; \": \" &lt;&lt; now * 2 &lt;&lt; endl;\n            now++;\n            // \u6253\u5370\u540e\u4f11\u7720 500 \u6beb\u79d2\u65b9\u4fbf\u89c2\u5bdf\n            this_thread::sleep_for(chrono::milliseconds(500));\n            f = false;\n            cv.notify_one();\n        }\n    };\n\n    auto f1 = [&amp;]()\n    {\n        int now = 0;\n        for(;;)\n        {\n            unique_lock&lt;mutex&gt; ulk(mt);\n            if(f)\n                cv.wait(ulk);\n            cout &lt;&lt; this_thread::get_id() &lt;&lt; \": \" &lt;&lt; now * 2 + 1&lt;&lt; endl;\n            now++;\n            this_thread::sleep_for(chrono::milliseconds(500));\n            f = true;\n            cv.notify_one();\n        }\n    };\n\n    odd = thread(f1);\n    even = thread(f0);\n\n    for(;;);\n\n    return 0;\n}\n</code></pre>"},{"location":"C%2B%2B/c%2B%2B11/%E5%A4%9A%E7%BA%BF%E7%A8%8B/#futures","title":"Futures","text":"<p>\u6807\u51c6\u5e93\u63d0\u4f9b\u4e86\u83b7\u53d6\u8fd4\u56de\u503c\u548c\u6355\u83b7\u7ebf\u7a0b\u4e2d\u5f15\u53d1\u5f02\u5e38\u7684\u5de5\u5177\u3002</p>"},{"location":"C%2B%2B/c%2B%2B11/%E6%99%BA%E8%83%BD%E6%8C%87%E9%92%88/","title":"\u667a\u80fd\u6307\u9488","text":""},{"location":"C%2B%2B/c%2B%2B11/%E6%99%BA%E8%83%BD%E6%8C%87%E9%92%88/#raii","title":"RAII","text":"<p>C++ \u4e2d\u5728\u5806\u533a\u7533\u8bf7\u7684\u7a7a\u95f4\u662f\u9700\u8981\u7a0b\u5e8f\u5458\u81ea\u884c\u8fdb\u884c\u91ca\u653e\u7684\uff0c\u4f46\u662f\u9700\u8981\u7a0b\u5e8f\u5458\u81ea\u884c\u7ea6\u675f\u7684\u4e8b\u60c5\uff0c\u603b\u662f\u4f1a\u51fa\u9519\u7684\uff0c\u4e3a\u4e86\u66f4\u597d\u7684\u7ba1\u7406\u5806\u533a\u7684\u5185\u5b58\uff0cC++ \u5f15\u5165\u4e86\u667a\u80fd\u6307\u9488\u3002</p> <p>\u667a\u80fd\u6307\u9488\u662f\u5bf9 RAII (Resource Acquisition Is Initialization) \u6280\u672f\u7684\u5b9e\u73b0\uff0cRAII \u662f\u4e00\u79cd\u5229\u7528\u5bf9\u8c61\u751f\u547d\u5468\u671f\u6765\u63a7\u5236\u7a0b\u5e8f\u8d44\u6e90\uff08\u5982\u5185\u5b58\u3001\u6587\u4ef6\u53e5\u67c4\u3001\u7f51\u7edc\u8fde\u63a5\u3001\u4e92\u65a5\u91cf\u7b49\u7b49\uff09\u7684\u7b80\u5355\u6280\u672f\u3002\u5728\u5bf9\u8c61\u6784\u9020\u65f6\u83b7\u53d6\u8d44\u6e90\uff0c\u63a5\u7740\u63a7\u5236\u5bf9\u8d44\u6e90\u7684\u8bbf\u95ee\u4f7f\u4e4b\u5728\u5bf9\u8c61\u7684\u751f\u547d\u5468\u671f\u5185\u59cb\u7ec8\u4fdd\u6301\u6709\u6548\uff0c\u6700\u540e\u5728\u5bf9\u8c61\u6790\u6784\u7684\u65f6\u5019\u91ca\u653e\u8d44\u6e90\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u6839\u636e RAII \u5b9e\u73b0\u4e00\u4e2a\u6700\u7b80\u5355\u7684\u667a\u80fd\u6307\u9488\uff1a</p> <pre><code>template&lt;class Tp&gt;\nclass smart_ptr\n{\n    Tp* _ptr;\npublic:\n    // \u5b9e\u73b0 RAII\n    smart_ptr(Tp p = nullptr)\n        :_ptr(p)\n    {}\n\n    ~smart_ptr()\n    { delete _ptr;}\n\n    // \u6307\u9488\u64cd\u4f5c\n    Tp&amp; operator*()\n    { return *_ptr;}\n\n    Tp* operator-&gt;()\n    { return _ptr;}\n};\n</code></pre> <p>\u4f46\u53ea\u662f\u8fd9\u6837\u8fd8\u662f\u4e0d\u591f\u7684\uff0c\u5bf9\u4e8e\u6307\u9488\u7684\u62f7\u8d1d\uff0c\u8fd8\u9700\u8981\u505a\u5f88\u591a\u7279\u6b8a\u5904\u7406\uff0c\u5982\uff1a\u591a\u4e2a\u667a\u80fd\u6307\u9488\u6307\u5411\u4e00\u5757\u7a7a\u95f4\u65f6\uff0c\u5e94\u8be5\u5982\u4f55\u907f\u514d Double delete \u7b49\u7b49\u3002\u6211\u4eec\u6765\u770b\u770b C++ \u5e93\u4e2d\u662f\u5982\u4f55\u5982\u7406\u7684\u3002</p> <p>C++ \u4e2d\u63d0\u4f9b\u4e86\u4e09\u79cd\u667a\u80fd\u6307\u9488:<code>auto_ptr</code> \uff08\u5df2\u5f03\u7528\uff09\u3001<code>unique_ptr</code>\u3001<code>shared_ptr</code>\uff0c\u548c\u4e00\u4e2a <code>weak_ptr</code> \u6765\u89e3\u51b3<code>shared_ptr</code> \u5faa\u73af\u5f15\u7528\u7684\u95ee\u9898\uff0c\u540e\u6587\u5c06\u8be6\u7ec6\u4ecb\u7ecd\u3002</p>"},{"location":"C%2B%2B/c%2B%2B11/%E6%99%BA%E8%83%BD%E6%8C%87%E9%92%88/#auto_ptr","title":"<code>auto_ptr</code>","text":"<p><code>auto_ptr</code> \u662f\u5728 C++98 \u5c31\u5df2\u7ecf\u52a0\u5165\u5230\u6807\u51c6\u4e2d\u7684\uff0c<code>auto_ptr</code> \u5bf9\u4e8e\u6307\u9488\u62f7\u8d1d\u7684\u5904\u7406\u662f\uff1a\u7ba1\u7406\u6743\u8f6c\u79fb\uff0c\u4e0b\u9762\u662f <code>auto_ptr</code> \u5728\u5e93\u4e2d\u62f7\u8d1d\u76f8\u5173\u7684\u5b9e\u73b0\uff1a</p> <pre><code>template &lt;typename _Tp&gt;\nclass auto_ptr\n{\n    _Tp *_M_ptr;\npublic:\n    typedef _Tp element_type;\n\n    /*.......*/\n\n    // \u4e24\u4e2a\u62f7\u8d1d\u90fd\u662f\u5c06 __a \u7ef4\u62a4\u7684\u5730\u5740\u4ea4\u7ed9\u5f53\u524d\u7684 auto_ptr\u5e76\u7f6e\u7a7a\n    // \u62f7\u8d1d\u8d4b\u503c\n    auto_ptr &amp; operator=(auto_ptr &amp;__a) throw()\n    {\n        reset(__a.release());\n        return *this;\n    }\n\n    // \u62f7\u8d1d\u6784\u9020\n    auto_ptr(auto_ptr &amp;__a) throw() \n        : _M_ptr(__a.release()) \n    {}\n\n    void reset(element_type *__p = 0) throw()\n    {\n        // \u907f\u514d\u81ea\u5df1\u7ed9\u81ea\u5df1\u8d4b\u503c\u5bfc\u81f4\u7684 double delete\n        if (__p != _M_ptr)\n        {\n            delete _M_ptr;\n            _M_ptr = __p;\n        }\n    }\n\n    element_type * release() throw()\n    {\n        element_type *__tmp = _M_ptr;\n        _M_ptr = 0;\n        return __tmp;\n    }\n\n    /*.......*/\n\n};\n</code></pre> <p>\u6211\u4eec\u4ece\u8fd9\u4e2a C++98 \u98ce\u683c\u7684\u5199\u6cd5\u5c31\u53ef\u4e5f\u770b\u51fa\uff0cC++11 \u4ee5\u540e\u5e93\u5c31\u5df2\u7ecf\u5f03\u7528\u4e86 <code>auto_ptr</code> \uff0c\u7559\u4e0b\u6e90\u7801\u53ea\u662f\u4e3a\u4e86\u5411\u524d\u517c\u5bb9\u3002\u4e3a\u4ec0\u4e48\u4f1a\u5f03\u7528\u5462\uff1f\u56e0\u4e3a\u8fd9\u79cd\u6240\u6709\u6743\u8f6c\u79fb\u7684\u5904\u7406\u65b9\u5f0f\u4f1a\u9020\u6210\u6307\u9488\u60ac\u7a7a\uff1a</p> <pre><code>int main()\n{\n    std::auto_ptr&lt;int&gt; a(new int);\n    std::auto_ptr&lt;int&gt; b (a);   // a \u5bf9\u6570\u636e\u7684\u7ba1\u7406\u6743\u88ab\u8f6c\u79fb\u7ed9\u4e86 b\n\n    (*b)++;\n    (*a)++; // \u8bbf\u95ee\u975e\u6cd5\u7a7a\u95f4\n\n    return 0;\n}\n</code></pre> <p>\u8fd9\u6837\u7684\u5b9e\u73b0\u5bfc\u81f4\u5728 <code>auto_ptr</code> \u7684\u751f\u547d\u5468\u671f\u5185\uff0c\u5176\u5185\u90e8\u6570\u636e\u4e0d\u4e00\u5b9a\u662f\u59cb\u7ec8\u6709\u6548\u7684\uff0c\u5f88\u5bb9\u6613\u9020\u6210\u975e\u6cd5\u8bbf\u95ee\u3002C++11 \u5411 <code>boost</code> \u5e93\u5b66\u4e60\uff0c\u5411\u5e93\u4e2d\u52a0\u5165\u4e86 <code>unique_ptr</code>\u3001<code>shared_ptr</code>\uff0c\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002</p>"},{"location":"C%2B%2B/c%2B%2B11/%E6%99%BA%E8%83%BD%E6%8C%87%E9%92%88/#unique_ptr","title":"<code>unique_ptr</code>","text":"<p><code>unique_ptr</code> \u7684\u89e3\u51b3\u65b9\u6848\u5f88\u7b80\u5355\uff0c\u90a3\u5c31\u662f\u7981\u6b62\u62f7\u8d1d\uff0c\u6211\u53ef\u4ee5\u5728\u5e93\u4e2d\u770b\u5230\uff1a</p> <pre><code>    // Disable copy from lvalue.\n    unique_ptr(const unique_ptr&amp;) = delete;\n    unique_ptr&amp; operator=(const unique_ptr&amp;) = delete;\n</code></pre> <p>\u5220\u9664\u4e86\u62f7\u8d1d\u6784\u9020\u548c\u62f7\u8d1d\u8d4b\u503c\u3002\u4f46\u662f <code>unique_ptr</code> \u5b9e\u73b0\u4e86\u79fb\u52a8\u8bed\u4e49\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 <code>move()</code> \u6765\u5c06\u4e00\u4e2a\u6570\u636e\u7ba1\u7406\u6743\u4ea4\u7ed9\u53e6\u4e00\u4e2a <code>unique_ptr</code>\uff0c\u8fd9\u4e0e <code>auto_ptr</code> \u7684\u7ba1\u7406\u6743\u8f6c\u79fb\u7684\u5904\u7406\u65b9\u6cd5\u7c7b\u4f3c\uff0c\u4f46\u66f4\u4e3a\u4e25\u683c\uff0c\u5e76\u4e14\u4f7f\u7528\u88ab <code>move()</code> \u8fc7\u7684\u53d8\u91cf\uff0c\u4e00\u822c\u7684\u7f16\u8bd1\u5668\u90fd\u4f1a\u62a5\u8b66\u544a\uff0c\u6bd4\u8d77 <code>auto_ptr</code> \u66f4\u4e3a\u5b89\u5168\u3002</p> <p>\u5e76\u4e14 <code>unique_ptr</code> \u5bf9\u6570\u7ec4\u8fdb\u884c\u4e86\u504f\u7279\u5316\uff0c\u91cd\u8f7d\u4e86 <code>operator[]</code> \u64cd\u4f5c\uff1a</p> <pre><code>std::unique_ptr&lt;int []&gt; p2(new int[10]);\np2[1] = 10\uff1b\n</code></pre>"},{"location":"C%2B%2B/c%2B%2B11/%E6%99%BA%E8%83%BD%E6%8C%87%E9%92%88/#release-vs-reset","title":"<code>release</code> VS <code>reset</code>","text":"<p><code>unique_ptr</code> \u4e2d <code>release</code> \u53ea\u4f1a\u91ca\u653e\u6240\u6709\u6743\uff0c\u5e76\u5c06\u8d44\u6e90\u7684\u539f\u59cb\u6307\u9488\u8fd4\u56de\uff0c\u8d44\u6e90\u7684\u91ca\u653e\u9700\u8981\u6211\u4eec\u624b\u52a8 delete\u3002</p> <pre><code>auto v = make_unique&lt;int&gt;(12);  // manages the object\nint * raw = v.release();        // pointer to no-longer-managed object\ndelete raw;                     // needs manual deletion\n</code></pre> <p>\u901a\u5e38 <code>release</code> \u4f1a\u7528\u6765\u521d\u59cb\u5316\u53e6\u4e00\u4e2a\u667a\u80fd\u6307\u9488\u3002\u9664\u975e\u6709\u5fc5\u8981\uff0c\u5426\u5219\u975e\u5e38\u4e0d\u63a8\u8350\u4f7f\u7528 <code>release</code> \u521d\u59cb\u5316\u4e00\u4e2a\u539f\u59cb\u6307\u9488\u3002</p> <p>\u800c <code>unique_ptr</code> \u4e2d <code>reset</code> \u4f1a\u91ca\u653e\u8d44\u6e90\uff0c\u5e76\u5c06 <code>unique_ptr</code> \u7f6e\u7a7a\u3002\u5982\u679c\u4f60\u63d0\u4f9b\u4e00\u4e2a\u65b0\u7684\u975e\u7a7a\u8d44\u6e90\u539f\u59cb\u6307\u9488\u505a\u53c2\u6570\uff0c<code>unique_ptr</code> \u4f1a\u7ef4\u62a4\u8fd9\u4e2a\u65b0\u6307\u9488\u3002</p> <pre><code>auto v = make_unique&lt;int&gt;(12);  // manages the object\nv.reset();                      // delete the object, leaving v empty\n</code></pre> <p>\u53c2\u8003\u81ea\uff1aDoes unique_ptr::release() call the destructor?</p>"},{"location":"C%2B%2B/c%2B%2B11/%E6%99%BA%E8%83%BD%E6%8C%87%E9%92%88/#shared_ptr","title":"<code>shared_ptr</code>","text":"<p><code>shared_ptr</code> \u5141\u8bb8\u62f7\u8d1d\uff0c\u5b83\u5185\u90e8\u5b9e\u73b0\u4e86\u5f15\u7528\u8ba1\u6570\uff0c\u8d4b\u503c\u65f6\u5f15\u7528\u52a0\u4e00\uff0c\u6307\u9488\u8fc7\u671f\u65f6\u5f15\u7528\u51cf\u4e00\uff0c\u53ea\u6709\u5230\u5f15\u7528\u8ba1\u6570\u51cf\u4e3a\u96f6\u65f6\uff0c\u624d\u91ca\u653e\u8d44\u6e90\uff0c\u8fd9\u5c31\u5f88\u597d\u7684\u89e3\u51b3\u4e86\u6307\u9488\u62f7\u8d1d\u7684\u95ee\u9898\u3002</p> <pre><code>class A\n{\npublic:\n    ~A() { std::cout &lt;&lt; \"~A()\" &lt;&lt; std::endl; }\n};\n\nint main()\n{\n    std::shared_ptr&lt;A&gt; a(new A);\n    // use_count() \u8fd4\u56de\u5f53\u524d\u5f15\u7528\u8be5\u6570\u636e\u7684\u6307\u9488\u4e2a\u6570\uff0cget() \u8fd4\u56de\u7ef4\u62a4\u7684\u539f\u751f\u6307\u9488\n    std::cout &lt;&lt; \"ptr count:\" &lt;&lt;  a.use_count() \n              &lt;&lt; \" ,address:\" &lt;&lt; a.get() &lt;&lt; std::endl;\n    {\n        // b \u4e5f\u5f15\u7528 a \u6307\u5411\u7684\u7a7a\u95f4\uff0c\u5f15\u7528\u8ba1\u6570 +1\n        std::shared_ptr&lt;A&gt; b(a);\n        std::cout &lt;&lt; \"ptr count:\" &lt;&lt;  b.use_count() \n                &lt;&lt; \" ,address:\" &lt;&lt; b.get() &lt;&lt; std::endl;\n        // b \u751f\u547d\u5468\u671f\u7ed3\u675f\uff0c\u5f15\u7528\u8ba1\u6570 -1\n    }\n    std::cout &lt;&lt; \"ptr count:\" &lt;&lt;  a.use_count() \n              &lt;&lt; \" ,address:\" &lt;&lt; a.get() &lt;&lt; std::endl;\n    // a \u751f\u547d\u5468\u671f\u7ed3\u675f\uff0c\u5f15\u7528\u8ba1\u6570 -1 \uff0c\u5f15\u7528\u8ba1\u6570\u4e3a 0 \uff0c\u91ca\u653e\u7a7a\u95f4\u3002\n    return 0;\n}\n/*\n\u8f93\u51fa\u7ed3\u679c\uff1a\nptr count:1 ,address:0x6f4ad0\nptr count:2 ,address:0x6f4ad0\nptr count:1 ,address:0x6f4ad0\n~A()\n*/\n</code></pre> <p>\u6709\u4e86\u5f15\u7528\u8ba1\u6570\uff0c\u5c31\u4e0d\u9700\u8981\u5728\u62c5\u5fc3 double delete \u7684\u95ee\u9898\u4e86\uff0c\u5f88\u597d\u7684\u89e3\u51b3\u4e86\u6307\u9488\u62f7\u8d1d\u7684\u95ee\u9898\u3002\u4f46\u662f\u8fd9\u53c8\u5f15\u51fa\u4e86\u53e6\u4e00\u4e2a\u95ee\u9898\uff0c\u5faa\u73af\u5f15\u7528\u3002</p>"},{"location":"C%2B%2B/c%2B%2B11/%E6%99%BA%E8%83%BD%E6%8C%87%E9%92%88/#_1","title":"\u5faa\u73af\u5f15\u7528","text":"<p>\u4ec0\u4e48\u662f\u5faa\u73af\u5f15\u7528\u5462\uff1f\u6211\u4eec\u62ff\u4e00\u4e2a\u4f8b\u5b50\u6765\u770b\uff1a</p> <pre><code>struct list_node\n{\n    int _d;\n    std::shared_ptr&lt;list_node&gt; _nxt;\n    std::shared_ptr&lt;list_node&gt; _pre;\npublic:\n\n    ~list_node(){ std::cout &lt;&lt; \"~list_node()\" &lt;&lt; std::endl; }\n};\n\nint main()\n{\n    std::shared_ptr&lt;list_node&gt; node_p1(new list_node);\n    std::shared_ptr&lt;list_node&gt; node_p2(new list_node);\n\n    node_p1-&gt;_nxt = node_p2;\n    node_p2-&gt;_pre = node_p1;\n\n    return 0;\n}\n</code></pre> <p>\u8fd0\u884c\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u4f60\u4f1a\u53d1\u73b0\u5b83\u662f\u6ca1\u6709\u8f93\u51fa\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4 <code>new</code> \u6765\u7684 <code>list_node</code> \u6700\u540e\u6ca1\u6709\u91ca\u653e\uff0c\u5185\u5b58\u6cc4\u6f0f\u4e86\u3002\u90a3\u53ea\u80fd\u8bf4\u660e\u4ee3\u7801\u7ed3\u675f\u65f6\uff0c\u7533\u8bf7\u6765\u7684\u4e24\u4e2a\u8282\u70b9\u7684\u5f15\u7528\u8ba1\u6570\u8fd8\u662f\u5927\u4e8e 0 \u7684\u3002\u800c\u9519\u8bef\u5c31\u53d1\u751f\u5728\u4e24\u4e2a\u8d4b\u503c\u8bed\u53e5\u3002</p> <p>\u8fd9\u6837\u7684\u4e24\u4e2a\u8282\u70b9\u5c31\u6784\u6210\u4e86\u5faa\u73af\u5f15\u7528\uff0c\u8fd9\u6837\u4e5f\u4f1a\u5bfc\u81f4\u5185\u5b58\u6cc4\u6f0f\uff0c\u6240\u4ee5 C++11 \u8fd8\u52a0\u5165\u4e86 <code>weak_ptr</code> \uff0c\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c<code>weak_ptr</code> \u662f\u4e0d\u6ee1\u8db3 RAII \u7684\uff0c\u6240\u4ee5\u4e25\u683c\u6765\u8bf4\u4e0d\u662f\u667a\u80fd\u6307\u9488\uff0c\u4ed6\u6307\u5411\u4e00\u4e2a\u5bf9\u8c61\u65f6\uff0c\u5e76\u4e0d\u4f1a\u589e\u52a0\u5176 <code>shared_ptr</code> \u7ef4\u62a4\u7684\u5f15\u7528\u8ba1\u6570\uff0c\u6240\u4ee5\u8fd9\u91cc\u6211\u4eec\u5c06\u8282\u70b9\u7ed3\u6784\u4f53\u4e2d\u7684 <code>shared_ptr</code> \u6362\u6210 <code>weak_ptr</code> \u5c31\u53ef\u4ee5\u907f\u514d\u8fd9\u6837\u7684\u60c5\u51b5\uff1a</p> <pre><code>struct list_node\n{\n    int _d;\n    std::weak_ptr&lt;list_node&gt; _nxt;\n    std::weak_ptr&lt;list_node&gt; _pre;\npublic:\n    ~list_node(){ std::cout &lt;&lt; \"~list_node()\" &lt;&lt; std::endl; }\n};\n/*\n\u8f93\u51fa\u7ed3\u679c\uff1a\n~list_node()\n~list_node()\n*/\n</code></pre> <p>\u518d\u8fd0\u884c\u7a0b\u5e8f\uff0c\u5c31\u53ef\u4e5f\u6b63\u5e38\u6790\u6784\u8282\u70b9\uff0c\u91ca\u653e\u5185\u5b58\u4e86\u3002</p>"},{"location":"C%2B%2B/c%2B%2B11/%E6%99%BA%E8%83%BD%E6%8C%87%E9%92%88/#weak_ptr","title":"<code>weak_ptr</code>","text":"<p><code>weak_ptr</code> \u662f\u4e00\u79cd\u5f31\u5f15\u7528\u7684\u667a\u80fd\u6307\u9488\uff0c\u5b83\u7684\u5b9e\u73b0\u53ea\u662f\u4e3a\u4e86\u534f\u52a9 <code>shared_ptr</code> \u5b9e\u73b0\u529f\u80fd\uff0c\u5b83\u53ea\u80fd\u7531 <code>shared_ptr</code> \u6216\u5176\u4ed6 <code>weak_ptr</code> \u6784\u9020\u800c\u6765\uff0c\u5e76\u4e14\u5b83\u6ca1\u6709\u91cd\u8f7d\u6307\u9488\u64cd\u4f5c\uff0c\u4f46\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 <code>lock</code> \u6210\u5458\u51fd\u6570\u83b7\u5f97\u4e00\u4e2a <code>shared_ptr</code> \u6765\u8bbf\u95ee\u5b83\u6307\u5411\u7684\u8d44\u6e90\uff0c\u5f53\u7136\u6b64\u65b9\u5f0f\u5f97\u5230\u7684 <code>shared_ptr</code> \u4e5f\u4e0d\u4f1a\u589e\u52a0\u5f15\u7528\u8ba1\u6570\u3002</p> <p>\u8fd9\u6837\u7684\u884c\u4e3a\u4f7f\u5f97 <code>weak_ptr</code> \u50cf\u4e00\u4e2a\u89c2\u5bdf\u8005\uff0c\u53ea\u5bf9\u8d44\u6e90\u8fdb\u884c\u8bfb\u5199\u64cd\u4f5c\uff0c\u800c\u4e0d\u505a\u8d44\u6e90\u7684\u91ca\u653e\u64cd\u4f5c\uff0c\u8fd9\u6837\u5728\u5b83\u7684\u751f\u547d\u5468\u671f\u5185\u8d44\u6e90\u53ef\u80fd\u4f1a\u88ab\u91ca\u653e\uff0c\u6240\u4ee5\u5e93\u4e2d\u63d0\u4f9b\u4e86 <code>expired</code> \u6210\u5458\u51fd\u6570\uff0c\u5224\u65ad\u5b83\u89c2\u5bdf\u7684\u8d44\u6e90\u662f\u5426\u8fd8\u6709\u6548\u3002\u5728\u4f7f\u7528 <code>weak_ptr</code> \u65f6\u662f\u9700\u8981\u8fdb\u884c\u5408\u6cd5\u6027\u68c0\u67e5\u7684\uff1a</p> <pre><code>int main()\n{\n    std::weak_ptr&lt;int&gt; wp;\n\n    auto f = [](std::weak_ptr&lt;int&gt;&amp; wp) \n    {\n        // \u5982\u679c\u6ca1\u6709\u5931\u6548\u5c31\u8f93\u51fa\u89c2\u5bdf\u8d44\u6e90\u7684\u503c\n        if(!wp.expired())\n            std::cout &lt;&lt; *wp.lock() &lt;&lt; std::endl;\n        else std::cout &lt;&lt; \"wp \u5931\u6548\" &lt;&lt; std::endl;\n    };\n\n    {\n        std::shared_ptr&lt;int&gt; sp(new int(1));\n        wp = sp;    // \u89c2\u5bdf sp \u7ef4\u62a4\u7684\u8d44\u6e90\n        f(wp);      \n    }\n    f(wp);          // \u6b64\u65f6 wp \u89c2\u5bdf\u7684\u8d44\u6e90\u5df2\u7ecf\u5931\u6548\n    return 0;   \n}\n/*\n\u8f93\u51fa\u7ed3\u679c\uff1a\n1\nwp \u5931\u6548\n*/\n</code></pre> <p><code>weak_ptr</code> \u4e5f\u53ef\u4ee5\u901a\u8fc7\u6210\u5458\u51fd\u6570 <code>use_count</code> \u67e5\u770b\u8d44\u6e90\u7684\u5f15\u7528\u8ba1\u6570\u3002</p> <ul> <li>\u5f31\u5f15\u7528\u8ba1\u6570</li> </ul> <p><code>std::shared_ptr</code>\u7ba1\u7406\u4e24\u4e2a\u6210\u5458\uff1a</p> <ul> <li> <p>\u63a7\u5236\u5757\uff1a\u5b58\u50a8\u5f15\u7528\u8ba1\u6570\uff0c\u5220\u9664\u5668\u7b49</p> </li> <li> <p>\u88ab\u7ba1\u7406\u5bf9\u8c61\u7684\u6307\u9488</p> </li> </ul> <p>\u5728\u63a7\u5236\u5757\u4e2d\u8fd8\u6709\u4e00\u4e2a\u5f31\u5f15\u7528\u8ba1\u6570\uff0c\u6bcf\u5f53\u6709\u4e00\u4e2a <code>weak_ptr</code> \u6307\u5411\u88ab\u7ba1\u7406\u5bf9\u8c61\uff0c\u5f31\u5f15\u7528\u8ba1\u6570\u52a0 1\u3002</p> <p>\u5f53\u5f15\u7528\u8ba1\u6570\u51cf\u4e3a 0 \u65f6\uff0c<code>shared_ptr</code> \u4f1a\u4e3a\u6211\u4eec\u91ca\u653e\u88ab\u7ba1\u7406\u5bf9\u8c61\u3002\u56e0\u4e3a <code>weak_ptr</code> \u901a\u8fc7\u63a7\u5236\u5757\u5224\u65ad\u8d44\u6e90\u662f\u5426\u6709\u6548\uff0c\u6240\u4ee5\u53ea\u6709\u5f53\u5f31\u5f15\u7528\u8ba1\u6570\u51cf\u548c\u5f15\u7528\u8ba1\u6570\u90fd\u51cf\u4e3a 0 \u65f6\uff0c\u624d\u4f1a\u91ca\u653e\u63a7\u5236\u5757\uff08\u8fd9\u4e5f\u5bfc\u81f4\u4e00\u4e9b\u95ee\u9898\uff0c\u540e\u6587\u4f1a\u4ecb\u7ecd\uff09\u3002</p>"},{"location":"C%2B%2B/c%2B%2B11/%E6%99%BA%E8%83%BD%E6%8C%87%E9%92%88/#make_shared","title":"make_shared","text":"<p>\u6211\u4eec\u5728\u521b\u5efa\u4e00\u4e2a <code>shared_ptr</code> \u65f6\uff0c\u66f4\u63a8\u8350\u4f7f\u7528 <code>make_shared</code> \u6765\u6784\u5efa\uff0c\u5b83\u662f\u66f4\u9ad8\u6548\u7684\uff0c\u5e76\u4e14\u662f\u5f02\u5e38\u5b89\u5168\u7684\u3002</p>"},{"location":"C%2B%2B/c%2B%2B11/%E6%99%BA%E8%83%BD%E6%8C%87%E9%92%88/#_2","title":"\u9ad8\u6548","text":"<p>\u5982\u4e0a\u6587\u63d0\u5230\u7684\uff0c<code>make_shared</code> \u5185\u90e8\u7ef4\u62a4\u7684\u662f\u4e24\u4e2a\u6210\u5458\u63a7\u5236\u5757\u548c\u88ab\u7ba1\u7406\u5bf9\u8c61\u7684\u6307\u9488\u3002<code>make_shared</code> \u53ea\u4f1a\u6267\u884c\u4e00\u6b21\u5806\u7533\u8bf7\uff0c\u4e00\u5e76\u8ba1\u7b97\u6211\u4eec\u7ed9\u7684\u6570\u636e\u548c\u63a7\u5236\u5757\u7684\u5927\u5c0f\uff0c\u5e76\u7533\u8bf7\u7a7a\u95f4\u3002\u800c\u5982\u679c\u4f7f\u7528\u6784\u9020\u51fd\u6570\uff0c\u7c7b\u4f3c\u4e0b\u9762\u8fd9\u6837:</p> <pre><code>std::shared_ptr&lt;Object&gt; p2(new Object(\"foo\"));\n</code></pre> <p>\u4f1a\u6267\u884c\u4e24\u6b21\u5806\u7533\u8bf7\uff0c\u4e00\u6b21 <code>new Object(\"foo\")</code> \uff0c\u4e00\u6b21\u7533\u8bf7\u63a7\u5236\u5757\u7a7a\u95f4\u3002</p>"},{"location":"C%2B%2B/c%2B%2B11/%E6%99%BA%E8%83%BD%E6%8C%87%E9%92%88/#_3","title":"\u5f02\u5e38\u5b89\u5168","text":"<p>\u5bf9\u4e8e\u5f02\u5e38\u5b89\u5168\u8003\u8651\u4e0b\u8ff0\u4f8b\u5b50\uff1a</p> <pre><code>void F(const std::shared_ptr&lt;Lhs&gt; &amp;lhs, const std::shared_ptr&lt;Rhs&gt; &amp;rhs) { /* ... */ }\n\nF(std::shared_ptr&lt;Lhs&gt;(new Lhs(\"foo\")),\n  std::shared_ptr&lt;Rhs&gt;(new Rhs(\"bar\")));\n</code></pre> <p>\u7531\u4e8e C++ \u5141\u8bb8\u5bf9\u5b50\u8868\u8fbe\u5f0f\u8fdb\u884c\u4efb\u610f\u987a\u5e8f\u7684\u6c42\u503c\uff0c\u56e0\u6b64\u4e00\u79cd\u53ef\u80fd\u7684\u987a\u5e8f\u662f\uff1a</p> <ol> <li><code>new Lhs(\"foo\")</code> </li> <li><code>new Rhs(\"bar\")</code></li> <li><code>std::shared_ptr&lt;Lhs&gt;</code></li> <li><code>std::shared_ptr&lt;Rhs&gt;</code></li> </ol> <p>\u5f53 <code>new Rhs(\"bar\")</code> \u51fa\u73b0\u5f02\u5e38\u65f6\uff0c\u4f1a\u6253\u65ad\u540e\u7eed <code>std::shared_ptr</code> \u7684\u6784\u9020\uff0c\u8fd9\u6837\u4f1a\u5bfc\u81f4 <code>new Lhs(\"foo\")</code> \u8fd8\u672a\u4ea4\u7ed9<code>std::shared_ptr&lt;Lhs&gt;</code> \u7ba1\u7406\uff0c\u5c31\u88ab\u8df3\u8fc7\u4e86\uff0c\u6700\u7ec8\u5bfc\u81f4\u5185\u5b58\u6cc4\u6f0f\u3002</p> <p>\u800c <code>std::make_shared</code> \u5c31\u4e0d\u4f1a\u6709\u8fd9\u6837\u7684\u95ee\u9898\uff1a</p> <pre><code>F(std::make_shared&lt;Lhs&gt;(\"foo\"), std::make_shared&lt;Rhs&gt;(\"bar\"));\n</code></pre> <p>\u4f46\u81ea C++17 \u4ee5\u540e\uff0c <code>std::shared_ptr</code> \u6784\u9020\u4e0d\u518d\u4f1a\u51fa\u73b0\u8fd9\u6837\u7684\u95ee\u9898\u4e86\uff0c\u56e0\u4e3a C++17 \u4ee5\u540e\u8981\u6c42\uff0c\u51fd\u6570\u7684\u6bcf\u4e2a\u53c2\u6570\u7684\u8868\u8fbe\u5f0f\u5fc5\u987b\u5b8c\u6574\u6267\u884c\u5b8c\uff0c\u624d\u53ef\u4ee5\u6267\u884c\u5176\u4ed6\u53c2\u6570\u7684\u8868\u8fbe\u5f0f\u3002</p>"},{"location":"C%2B%2B/c%2B%2B11/%E6%99%BA%E8%83%BD%E6%8C%87%E9%92%88/#_4","title":"\u7f3a\u70b9","text":"<p>\u56e0\u4e3a <code>std::make_shared</code> \u4f1a\u4e00\u5e76\u7533\u8bf7\u6570\u636e\u548c\u63a7\u5236\u5757\u7684\u7a7a\u95f4\uff0c\u6240\u4ee5\u65e0\u6cd5\u5355\u72ec\u7684\u91ca\u653e\u88ab\u7ba1\u7406\u5bf9\u8c61\uff0c\u5f53\u6709 <code>weak_ptr</code> \u6307\u5411\u8fd9\u5757\u6570\u636e\u65f6\uff0c\u56e0\u4e3a\u8981\u7ef4\u62a4\u63a7\u5236\u5757\uff0c\u6240\u4ee5\u5bfc\u81f4\u88ab\u7ba1\u7406\u5bf9\u8c61\u4e5f\u4e0d\u80fd\u91ca\u653e\u3002\u53ea\u6709\u5f15\u7528\u8ba1\u6570\u548c\u5f31\u5f15\u7528\u8ba1\u6570\u90fd\u51cf\u4e3a 0 \uff0c\u624d\u80fd\u91ca\u653e\u6574\u5757\u7684\u7a7a\u95f4\u3002</p> <p>\u53c2\u8003\u81ea\uff1aDifference in make_shared and normal shared_ptr in C++</p>"},{"location":"C%2B%2B/c%2B%2B11/%E6%99%BA%E8%83%BD%E6%8C%87%E9%92%88/#_5","title":"\u7ebf\u7a0b\u5b89\u5168","text":"<p><code>shared_ptr</code> \u5f15\u7528\u8ba1\u6570\u5728\u5730\u5c42\u662f\u5b9e\u73b0\u4e86\u539f\u5b50\u6027\u64cd\u4f5c\u7684\uff0c\u6240\u4ee5\u6307\u9488\u672c\u8eab\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u4f46\u662f\u5b83\u7ef4\u62a4\u7684\u6570\u636e\u4e0d\u662f\uff0c\u9700\u8981\u6211\u4eec\u81ea\u5df1\u4fdd\u8bc1\u6570\u636e\u7684\u7ebf\u7a0b\u5b89\u5168\u3002</p>"},{"location":"C%2B%2B/c%2B%2B11/%E6%99%BA%E8%83%BD%E6%8C%87%E9%92%88/#_6","title":"\u5176\u4ed6\u6ce8\u610f\u4e8b\u9879","text":"<ul> <li> <p><code>make_shared</code></p> </li> <li> <p>lmabda \u51fd\u6570\u6355\u83b7\u667a\u80fd\u6307\u9488</p> </li> </ul> <p>lmabda \u6355\u83b7 <code>unique_ptr</code> \u65f6\uff0c\u8981\u4f7f\u7528\u5f15\u7528\u6355\u83b7\uff0c\u56e0\u4e3a <code>unique_ptr</code> \u4e0d\u80fd\u8fdb\u884c\u62f7\u8d1d\u3002</p> <p>lmabda \u6355\u83b7 <code>shared_ptr</code> \u65f6\uff0c\u8981\u4f7f\u7528\u503c\u6355\u83b7\uff0c\u9632\u6b62\u8c03\u7528\u65f6\u7a7a\u95f4\u5df2\u7ecf\u91ca\u653e\u3002</p> <ul> <li><code>shared_ptr</code> \u7684\u5927\u5c0f</li> </ul> <p><code>shared_ptr</code> \u5185\u90e8\u6709\u4e24\u4e2a\u6307\u9488 32 \u4f4d\u4e0b 8 Byte \uff0c64 \u4f4d\u4e0b 16 Byte\u3002\u4e00\u4e2a\u6307\u9488\uff0c\u4e00\u4e2a <code>__shared_count</code> \u7c7b\uff0c\u7c7b\u91cc\u5c01\u88c5\u4e86\u4e00\u4e2a\u6307\u9488\uff0c\u7528\u4e8e\u8bb0\u5f55\u5f15\u7528\u8ba1\u6570\u548c\u5220\u9664\u5668\u3002</p> <pre><code>element_type*      _M_ptr;         // Contained pointer.\n__shared_count&lt;_Lp&gt;  _M_refcount;    // Reference counter.\n</code></pre>"},{"location":"C%2B%2B/c%2B%2B11/%E7%B1%BB%E5%9E%8B%E5%A3%B0%E6%98%8E/","title":"\u7c7b\u578b\u58f0\u660e","text":""},{"location":"C%2B%2B/c%2B%2B11/%E7%B1%BB%E5%9E%8B%E5%A3%B0%E6%98%8E/#auto","title":"<code>auto</code>","text":"<p>C++11 \u4f7f\u7528 <code>auto</code> \u6765\u81ea\u52a8\u7c7b\u578b\u63a8\u65ad\uff0c\u8fd9\u8981\u6c42\u663e\u793a\u521d\u59cb\u5316\uff0c\u8ba9\u7f16\u8bd1\u5668\u80fd\u591f\u5c06\u53d8\u91cf\u8bbe\u7f6e\u4e3a\u521d\u59cb\u503c\u7684\u7c7b\u578b\u3002<code>auto</code> \u7684\u63a8\u5bfc\u89c4\u5219\u5982\u4e0b\uff1a</p> <ul> <li> <p>auto \u57fa\u672c\u89c4\u5219\uff1a\u53bb\u6389\u5f15\u7528\u548c const \u8d44\u683c\u3002</p> </li> <li> <p>\u4fdd\u6301\u5f15\u7528\u548c\u5e38\u91cf\u6027\uff1a\u4f7f\u7528 auto&amp;\u3001const auto&amp;\u3001auto* \u7b49\u3002</p> </li> <li> <p>\u6570\u7ec4\u548c\u6307\u9488\uff1a\u6570\u7ec4\u4f1a\u88ab\u63a8\u5bfc\u4e3a\u6307\u9488</p> </li> </ul> <p>\u5728 auto \u7684\u63a8\u5bfc\u4e2d\uff0c\u5982\u679c\u8868\u8fbe\u5f0f\u672c\u8eab\u5305\u542b\u81ea\u52a8\u63a8\u5bfc\u7684\u7c7b\u578b\uff08\u5982 std::vector\uff09\uff0c\u5219\u8fd9\u79cd\u5d4c\u5957\u63a8\u5bfc\u5728C++\u6807\u51c6\u4e2d\u662f\u4e0d\u5141\u8bb8\u7684\u3002\u4f46\u662f\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u6a21\u677f\u548c decltype \u6765\u5b9e\u73b0\u7c7b\u4f3c\u7684\u529f\u80fd\u3002"},{"location":"C%2B%2B/c%2B%2B11/%E7%B1%BB%E5%9E%8B%E5%A3%B0%E6%98%8E/#decltype","title":"<code>decltype</code>","text":""},{"location":"C%2B%2B/c%2B%2B11/%E7%B1%BB%E5%9E%8B%E5%A3%B0%E6%98%8E/#_1","title":"\u57fa\u672c\u89c4\u5219","text":"<ul> <li>\u5bf9\u6807\u8bc6\u7b26\u6216\u7c7b\u6210\u5458\u8bbf\u95ee\u8868\u8fbe\u5f0f\uff1a</li> </ul> <p><code>decltype(x)</code> \u7684\u7c7b\u578b\u4e0e <code>x</code> \u7684\u7c7b\u578b\u76f8\u540c\u3002\u5982\u679c <code>x</code> \u662f\u53d8\u91cf\uff0c\u5219 <code>decltype(x)</code> \u7684\u7c7b\u578b\u662f\u8be5\u53d8\u91cf\u7684\u7c7b\u578b\u3002\u4e0e <code>auto</code> \u4e0d\u540c\u7684 <code>decltype</code> \u4f1a\u4fdd\u7559 cv \u9650\u5b9a\u7b26\u548c\u5f15\u7528\u5c5e\u6027\u3002</p> <pre><code>int i;\ndecltype(i) j;  // j \u7684\u7c7b\u578b\u662f int\n</code></pre> <ul> <li>\u5bf9\u5de6\u503c\u8868\u8fbe\u5f0f\uff1a</li> </ul> <p>\u5982\u679c <code>expr</code> \u662f\u4e00\u4e2a\u5de6\u503c\u8868\u8fbe\u5f0f\uff0c\u5219 <code>decltype(expr)</code> \u662f <code>T&amp;</code>\uff0c\u5176\u4e2d <code>T</code> \u662f <code>expr</code> \u7684\u7c7b\u578b\u3002</p> <pre><code>int i;\ndecltype((i)) j = i;  // j \u7684\u7c7b\u578b\u662f int&amp;\n</code></pre> <ul> <li>\u5bf9\u53f3\u503c\u53f3\u503c\u8868\u8fbe\u5f0f\uff1a</li> </ul> <p>\u5982\u679c <code>expr</code> \u662f\u4e00\u4e2a\u53f3\u503c\u8868\u8fbe\u5f0f\uff0c\u5219 <code>decltype(expr)</code> \u662f <code>T</code>\uff0c\u5176\u4e2d <code>T</code> \u662f <code>expr</code> \u7684\u7c7b\u578b\u3002</p> <pre><code>int foo();\ndecltype(foo()) x = foo();  // x \u7684\u7c7b\u578b\u662f int\n</code></pre> <p>\u4e0b\u9762\u6211\u4eec\u4f7f\u7528\u4e00\u79cd\u7279\u6b8a\u7684\u624b\u6bb5\u9a8c\u8bc1\u4e0a\u8ff0\u63a8\u5bfc\u89c4\u5219\u3002\u4f7f\u7528\u4e00\u79cd\u4e0d\u5b9a\u4e49\u6a21\u677f\u51fd\u6570\u7684\u65b9\u5f0f\uff0c\u8ba9\u7f16\u8bd1\u5668\u63a8\u5bfc\u5b8c\u7c7b\u578b\u540e\u627e\u4e0d\u5230\u5b9e\u73b0\u62a5\u9519\uff0c\u4ece\u800c\u770b\u5230\u5177\u4f53\u7684\u63a8\u5bfc\u7c7b\u578b\uff1a</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n\ntemplate&lt;class Tp&gt;\nvoid f();\n\nint main() {\n    int a = 5;\n    const int&amp; b = a;\n    auto c = b;          // c \u662f int\uff0cauto \u53bb\u6389\u4e86\u5f15\u7528\u548c const\n    decltype(b) d = a;   // d \u662f const int&amp;\uff0cdecltype \u4fdd\u7559\u4e86\u5f15\u7528\u548c const\n\n    std::vector&lt;int&gt; v;\n    decltype(v[0]) e = a;  // e \u662f int&amp;\uff0c\u56e0\u4e3a v[0] \u8fd4\u56de\u4e00\u4e2a\u5de6\u503c\u5f15\u7528\n\n    decltype((a)) f = a;   // f \u662f int&amp;\uff0c\u56e0\u4e3a (a) \u662f\u4e00\u4e2a\u5de6\u503c\u8868\u8fbe\u5f0f\n    decltype(a) g = a;     // g \u662f int\uff0c\u76f4\u63a5\u4f7f\u7528\u6807\u8bc6\u7b26 a\uff0cdecltype(a) \u662f int\n\n    return 0;\n}\n</code></pre> <ul> <li>\u5bf9\u4e8e\u6807\u8bc6\u7b26\u6216\u7c7b\u6210\u5458\uff0c<code>decltype</code> \u83b7\u53d6\u5176\u58f0\u660e\u7c7b\u578b\u3002</li> <li>\u5bf9\u4e8e\u5de6\u503c\u8868\u8fbe\u5f0f\uff0c<code>decltype</code> \u4f1a\u751f\u6210\u4e00\u4e2a\u5f15\u7528\u7c7b\u578b\u3002</li> <li>\u5bf9\u4e8e\u53f3\u503c\u8868\u8fbe\u5f0f\uff0c<code>decltype</code> \u4f1a\u751f\u6210\u5176\u503c\u7c7b\u578b\u3002</li> </ul>"},{"location":"C%2B%2B/c%2B%2B11/%E7%B1%BB%E5%9E%8B%E8%90%83%E5%8F%96/","title":"\u7c7b\u578b\u8403\u53d6","text":""},{"location":"C%2B%2B/c%2B%2B11/%E7%B1%BB%E5%9E%8B%E8%90%83%E5%8F%96/#_1","title":"\u7c7b\u578b\u8403\u53d6","text":""},{"location":"C%2B%2B/c%2B%2B11/%E7%B1%BB%E7%9A%84%E6%96%B0%E5%8A%9F%E8%83%BD/","title":"\u7c7b\u7684\u65b0\u529f\u80fd","text":""},{"location":"C%2B%2B/c%2B%2B11/%E7%B1%BB%E7%9A%84%E6%96%B0%E5%8A%9F%E8%83%BD/#_1","title":"\u9ed8\u8ba4\u6210\u5458\u51fd\u6570","text":""},{"location":"C%2B%2B/c%2B%2B11/%E7%B1%BB%E7%9A%84%E6%96%B0%E5%8A%9F%E8%83%BD/#default-delete","title":"<code>default</code> \u548c <code>delete</code>","text":"<p>C++11 \u63d0\u4f9b\u4e86 <code>default</code> \u548c <code>delete</code> \u4e24\u4e2a\u5173\u952e\u5b57\uff0c<code>default</code> \u7528\u6765\u5f3a\u5236\u7f16\u8bd1\u5668\u751f\u6210\u4e00\u4e9b\u9ed8\u8ba4\u6210\u5458\u51fd\u6570\uff0c<code>delete</code> \u662f\u7981\u6b62\u7f16\u8bd1\u5668\u751f\u6210\u4e00\u4e9b\u6210\u5458\u51fd\u6570\uff0c\u7ed9\u51e0\u4e2a\u4f8b\u5b50\u9a6c\u4e0a\u5c31\u53ef\u4e5f\u7406\u89e3\uff1a</p> <pre><code>class A\n{\npublic:\n    // \u63d0\u4f9b\u6709\u53c2\u6784\u9020\uff0c\u8981\u6c42\u7f16\u8bd1\u5668\u751f\u6210\u9ed8\u8ba4\u6784\u9020\n    A() = default;\n    A(int,int){}\n\n    // \u63d0\u4f9b\u62f7\u8d1d\u6784\u9020\uff0c\u8981\u6c42\u7f16\u8bd1\u5668\u751f\u6210\u9ed8\u8ba4\u79fb\u52a8\u6784\u9020\n    A(const A&amp;) {}\n    A(A&amp;&amp;) = default;\n\n    // \u7981\u6b62\u7f16\u8bd1\u5668\u751f\u6210\u62f7\u8d1d\u8d4b\u503c\n    A&amp; operator=(const A&amp;) = delete;\n};\n</code></pre> <p>\u8981\u6ce8\u610f\u7684\u662f <code>default</code> \u53ea\u80fd\u7528\u4e8e\u9ed8\u8ba4\u6210\u5458\u51fd\u6570\uff0c\u800c <code>delete</code> \u53ef\u4ee5\u7528\u4e8e\u4efb\u4f55\u51fd\u6570\uff0c<code>delete</code> \u66f4\u53ef\u80fd\u7684\u7528\u6cd5\u662f\u7981\u6b62\u7279\u5b9a\u7684\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362\uff1a</p> <p><pre><code>void f(int){}\nint main()\n{\n    f(1.1);\n    return 0;\n}\n</code></pre> \u8fd9\u91cc\u5982\u679c\u6211\u4eec\u60f3\u7981\u6b62\u4ece <code>double</code> \u5230 <code>int</code> \u7684\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362\uff0c\u5bfc\u81f4\u9519\u8bef\u7684\u51fd\u6570\u8c03\u7528\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528 <code>delete</code>\uff1a</p> <pre><code>void f(int){}\nvoid f(double) = delete;\nint main()\n{\n    f(1.1); // Compilation error : use of deleted function 'void f(double)'\n    return 0;\n}\n</code></pre>"},{"location":"C%2B%2B/c%2B%2B11/%E7%B1%BB%E7%9A%84%E6%96%B0%E5%8A%9F%E8%83%BD/#_2","title":"\u7ba1\u7406\u865a\u51fd\u6570","text":""},{"location":"C%2B%2B/c%2B%2B11/%E7%B1%BB%E7%9A%84%E6%96%B0%E5%8A%9F%E8%83%BD/#final","title":"<code>final</code>","text":"<p><code>final</code> \u4fee\u9970\u7c7b\u65f6\uff0c\u88ab\u4fee\u9970\u7c7b\u5c06\u4e0d\u53ef\u4ee5\u88ab\u7ee7\u627f\u3002</p> <p><pre><code>class A final\n{};\n\nclass B : public A\n{};\n/* \nCompilation error\uff1a\ncannot derive from 'final' base 'A' in derived type 'B' \n*/\n</code></pre> <code>final</code> \u4fee\u9970\u865a\u51fd\u6570\u65f6\uff0c\u8be5\u865a\u51fd\u6570\u5c06\u65e0\u6cd5\u5728\u5b50\u7c7b\u4e2d\u88ab\u91cd\u5199\u3002</p> <pre><code>class A \n{\npublic:\n    virtual void print() final { }\n};\n\nclass B : public A\n{\npublic:\n    virtual void print() { }\n};\n/* \nCompilation error\uff1a\nvirtual function 'virtual void B::print()' overriding final function \n*/\n</code></pre>"},{"location":"C%2B%2B/c%2B%2B11/%E7%B1%BB%E7%9A%84%E6%96%B0%E5%8A%9F%E8%83%BD/#override","title":"<code>override</code>","text":"<p><code>override</code> \u4fee\u9970\u865a\u51fd\u6570\uff0c\u4f1a\u5f3a\u5236\u8981\u6c42\u5b50\u7c7b\u91cd\u5199\u88ab\u4fee\u9970\u7684\u865a\u51fd\u6570\u3002</p> <pre><code>class A \n{\npublic:\n    virtual void print() override {}\n};\n\nclass B : public A\n{};\n/* \nCompilation error\uff1a\n'virtual void A::print()' marked 'override', but does not override \n*/\n</code></pre>"},{"location":"C%2B%2B/c%2B%2B11/%E7%B1%BB%E7%9A%84%E6%96%B0%E5%8A%9F%E8%83%BD/#_3","title":"\u59d4\u6258\u6784\u9020\u51fd\u6570","text":"<p>\u5982\u679c\u7c7b\u4e2d\u7684\u67d0\u4e9b\u6784\u9020\u51fd\u6570\u9700\u8981\u4f7f\u7528\u5176\u4ed6\u6784\u9020\u51fd\u6570\u4e2d\u5df2\u6709\u7684\u4ee3\u7801\uff0cC++11 \u5141\u8bb8\u6211\u4eec\u5728\u6784\u9020\u51fd\u6570\u7684\u521d\u59cb\u5316\u5217\u8868\u4e2d\u4f7f\u7528\u53e6\u4e00\u4e2a\u6784\u9020\u51fd\u6570\uff0c\u8fd9\u88ab\u79f0\u4f5c\u59d4\u6258\uff0c\u56e0\u4e3a\u8be5\u6784\u9020\u51fd\u6570\u7684\u4e00\u90e8\u5206\u4efb\u52a1\u59d4\u6258\u7ed9\u4e86\u53e6\u4e00\u4e2a\u6784\u9020\u51fd\u6570\uff1a</p> <pre><code>class A\n{\n    int _a;\n    double _b;\n    char _c;\npublic:\n    A(int a,double b):\n        _a(a),\n        _b(b)\n    {}\n\n    // \u59d4\u6258 A(int,double) \u53bb\u521d\u59cb\u5316 _a , _b\n    // \u6b64\u65f6 A(int,double,char) \u662f\u4e00\u4e2a\u59d4\u6258\u6784\u9020\u51fd\u6570\n    // A(int,double) \u662f\u88ab\u59d4\u6258\u51fd\u6570\n    A(int a,double b,char c):\n        A(a,b)\n    {\n        _c = c;\n    }\n};\n</code></pre> <p>\u5bf9\u4e8e\u59d4\u6258\u6784\u9020\u51fd\u6570\u9700\u8981\u6ce8\u610f\u51e0\u70b9\uff1a</p> <ul> <li>\u88ab\u59d4\u6258\u7684\u6784\u9020\u51fd\u6570\u5728\u59d4\u6258\u6784\u9020\u51fd\u6570\u7684\u521d\u59cb\u5316\u5217\u8868\u91cc\u88ab\u8c03\u7528\uff0c\u800c\u4e0d\u662f\u5728\u59d4\u6258\u6784\u9020\u51fd\u6570\u7684\u51fd\u6570\u4f53\u91cc\u88ab\u8c03\u7528\u3002</li> </ul> <pre><code>class A\n{\n    int _a;\n    double _b;\n    char _c;\npublic:\n    A(int a,double b):\n        _a(a),\n        _b(b)\n    {}\n    A(int a,double b,char c)\n    {\n        A(a,b); // \u8fd9\u6837\u8c03\u7528\u662f\u65e0\u610f\u4e49\u7684\uff0c\u4f1a\u88ab\u7f16\u8bd1\u5668\u5ffd\u7565\uff0c\u4e0d\u4f1a\u6267\u884c\u6784\u9020\u3002\n        _c = c;\n    }\n};\n</code></pre> <ul> <li>\u59d4\u6258\u6784\u9020\u51fd\u6570\u7684\u521d\u59cb\u503c\u5217\u8868\u4e2d\uff0c\u53ea\u5141\u8bb8\u51fa\u73b0\u88ab\u59d4\u6258\u7684\u6784\u9020\u51fd\u6570\uff0c\u800c\u4e0d\u80fd\u76f4\u63a5\u7ed9\u6210\u5458\u53d8\u91cf\u8fdb\u884c\u521d\u59cb\u5316\u3002</li> </ul> <pre><code>class A\n{\n    int _a;\n    double _b;\n    char _c;\npublic:\n    A(int a,double b):\n        _a(a),\n        _b(b)\n    {}\n\n    A(int a,double b,char c):\n        A(a,b),\n        _c(c)   // Compilation error\uff1a\u59d4\u6258\u6784\u9020\u51fd\u6570\u4e0d\u80fd\u5177\u6709\u5176\u4ed6\u6210\u5458\u521d\u59cb\u5316\u8868\u8fbe\u5f0f   \n    {}\n};\n</code></pre>"},{"location":"C%2B%2B/c%2B%2B11/%E7%B1%BB%E7%9A%84%E6%96%B0%E5%8A%9F%E8%83%BD/#_4","title":"\u7ee7\u627f\u6784\u9020\u51fd\u6570","text":"<p>C++11 \u5141\u8bb8\u6d3e\u751f\u7c7b\u7ee7\u627f\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570\uff0c\u5728\u9762\u5bf9\u57fa\u7c7b\u5fc5\u987b\u521d\u59cb\u5316\u7684\u60c5\u51b5\u4e0b\uff0c\u4e0d\u5fc5\u5728\u6d3e\u751f\u7c7b\u4e2d\u989d\u5916\u7f16\u5199\u6784\u9020\u51fd\u6570\u6765\u5bf9\u57fa\u7c7b\u8fdb\u884c\u6784\u9020\uff1a</p> <p><pre><code>class A\n{\n    int _a;\n    double _b;\npublic:\n    A(int a, double b) :\n        _a(a),\n        _b(b)\n    {\n        std::cout &lt;&lt; \"A(int a, double b)\" &lt;&lt; std::endl;\n    }\n    void f()\n    {}\n};\n\nclass B : public A\n{\n    char _c;\npublic:\n    using A::A; // \u7ee7\u627f\u57fa\u7c7b\u6784\u9020\u51fd\u6570\n};\nint main()\n{\n    B bb(1,1.1);\n    return 0;\n}\n/*\n\u8f93\u51fa\u7ed3\u679c\uff1a\nA(int a, double b)\n*/\n</code></pre> \u4f46\u662f\u7ee7\u627f\u7684\u57fa\u7c7b\u6784\u9020\u51fd\u6570\u53ea\u80fd\u5bf9\u57fa\u7c7b\u6210\u5458\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u5f53\u6211\u4eec\u540c\u65f6\u60f3\u5bf9\u6d3e\u751f\u7c7b\u8fdb\u884c\u521d\u59cb\u5316\u65f6\uff0c\u5c31\u8981\u4f7f\u7528\u521d\u59cb\u5316\u5217\u8868\uff1a</p> <pre><code>    B(int a,double b,char c): A(a,b),_c(c) {}\n</code></pre> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\u57fa\u7c7b\u4e2d\u7f16\u8bd1\u5668\u9ed8\u8ba4\u751f\u6210\u7684\u6784\u9020\u51fd\u6570\u662f\u4e0d\u4f1a\u88ab\u7ee7\u627f\u7684\u3002</p>"},{"location":"C%2B%2B/c%2B%2B11/%E7%B1%BB%E7%9A%84%E6%96%B0%E5%8A%9F%E8%83%BD/#_5","title":"\u65b0\u589e\u9ed8\u8ba4\u51fd\u6570","text":"<p>\u539f C++ \u7c7b\u4e2d\u6709\u56db\u4e2a\u9ed8\u8ba4\u6210\u5458\u51fd\u6570\uff1a\u9ed8\u8ba4\u6784\u9020\uff0c\u62f7\u8d1d\u6784\u9020\uff0c\u62f7\u8d1d\u8d4b\u503c\uff0c\u6790\u6784\u51fd\u6570\u3002C++11 \u65b0\u589e \u79fb\u52a8\u6784\u9020 \u548c \u79fb\u52a8\u62f7\u8d1d \u4e24\u4e2a\u9ed8\u8ba4\u6210\u5458\u51fd\u6570\u3002\u4f1a\u5728 \u53f3\u503c\u5f15\u7528\u548c\u79fb\u52a8\u8bed\u4e49 \u8be6\u7ec6\u4ecb\u7ecd\u3002</p>"},{"location":"C%2B%2B/c%2B%2B14/decltype%28auto%29/","title":"Decltype(auto)","text":""},{"location":"C%2B%2B/c%2B%2B14/decltype%28auto%29/#_1","title":"\u7528\u9014","text":"<p>decltype(auto) \u53ef\u4ee5\u7528\u6765\u58f0\u660e\u53d8\u91cf\u4ee5\u53ca\u6307\u793a\u51fd\u6570\u8fd4\u56de\u7c7b\u578b\u3002</p> <p>\u5f53\u4f7f\u7528 decltype(auto) \u6765\u58f0\u660e\u53d8\u91cf\u65f6\uff0c\u8be5\u53d8\u91cf\u5e94\u7acb\u5373\u88ab\u521d\u59cb\u5316\uff0c</p> <ul> <li>decltype(auto):</li> </ul> <p><code>decltype(auto)</code> \u662f\u4e00\u79cd\u7b80\u5199\uff0c\u53ef\u4ee5\u81ea\u52a8\u63a8\u5bfc\u8868\u8fbe\u5f0f\u7684\u7c7b\u578b\uff0c\u540c\u65f6\u4fdd\u7559\u8868\u8fbe\u5f0f\u7684\u6240\u6709\u7279\u6027\uff08\u5305\u62ec\u5f15\u7528\u548c cv \u9650\u5b9a\u7b26\uff09\u3002</p> <pre><code>int x = 0;\nint&amp; foo() { return x; }\ndecltype(auto) y = foo();  // y \u662f int&amp;\uff0c\u4fdd\u6301\u4e86 foo() \u7684\u8fd4\u56de\u7c7b\u578b\n</code></pre> <ul> <li>\u4e0e <code>decltype</code> \u4e00\u8d77\u4f7f\u7528\u7684\u8fd4\u56de\u7c7b\u578b\u540e\u7f6e\u8bed\u6cd5\uff1a</li> </ul> <p>\u53ef\u4ee5\u5728\u51fd\u6570\u5b9a\u4e49\u4e2d\u4f7f\u7528 <code>decltype</code> \u63a8\u5bfc\u8fd4\u56de\u7c7b\u578b\u3002</p> <pre><code>auto add(int a, int b) -&gt; decltype(a + b) {\n    return a + b;\n}\n</code></pre>"},{"location":"C%2B%2B/c%2B%2B17/filesystem/","title":"Filesystem","text":"<p>\u5feb\u901f\u4e86\u89e3C++17 std:: filesystem\u7684\u539f\u7406\u548c\u4f7f\u7528</p>"},{"location":"C%2B%2B/c%2B%2B17/fold/","title":"Fold","text":""},{"location":"C%2B%2B/c%2B%2B17/fold/#_1","title":"\u7b80\u4ecb","text":"<p>cppreference : fold expressions</p> <p>C++ 17 \u63d0\u4f9b\u4e86\u4e00\u79cd\u65b0\u7684\u5305\u5c55\u5f00\u65b9\u5f0f\uff0c\u8bed\u6cd5\u6709\u4e0b\u9762\u56db\u79cd\u5199\u6cd5\uff1a</p> <p>\u4e0d\u7ba1\u54ea\u79cd\u5199\u6cd5\uff0c\u5728\u5c55\u5f00\u8868\u8fbe\u5f0f\u65f6\uff0c\u90fd\u4e0d\u4f1a\u6539\u53d8\u53c2\u6570\u5305\u4e2d\u53c2\u6570\u7684\u987a\u5e8f\u3002</p> <ul> <li> <p><code>(... op E)</code>\uff1a <code>(((E1 op E2) op ...) op EN)</code>\uff0c\u8868\u8fbe\u5f0f\u4ece\u5de6\u5411\u53f3\u5c55\u5f00</p> </li> <li> <p><code>(E op ...)</code>\uff1a<code>(E1 op (... op (EN-1 op EN)))</code>\uff0c\u8868\u8fbe\u5f0f\u4ece\u53f3\u5411\u5de6\u5c55\u5f00</p> </li> </ul> <p>\u8fd9\u4e24\u79cd\u662f\u6ca1\u6709\u521d\u59cb\u503c\u7684\uff0c\u8bed\u6cd5\u7c7b\u4f3c:</p> <pre><code>template&lt;class Tp&gt;\nvoid print(Tp a)\n{\n    cout &lt;&lt; a &lt;&lt; ',';\n}\n\ntemplate&lt;class... Args&gt;\nvoid unpacker(Args... as)\n{\n    (print(as), ...);\n    cout &lt;&lt; '\\n';\n}\n/*\n\u5c55\u5f00\u7ed3\u679c\uff1a\ntemplate&lt;&gt;\nvoid unpacker&lt;int, int, char&gt;(int __as0, int __as1, char __as2)\n{\n  print(__as0) , (print(__as1) , print(__as2));\n  std::operator&lt;&lt;(std::cout, '\\n');\n}\n*/\n</code></pre> <ul> <li> <p><code>(E op ... op I)</code> \uff1a <code>(E1 op (... op (EN\u22121 op (EN op I))))</code></p> </li> <li> <p><code>(I op ... op E)</code> \uff1a <code>((((I op E1) op E2) op ...) op EN)</code></p> </li> </ul> <p>\u6709\u521d\u59cb\u503c\u7684\u4f1a\u5148\u5c06\u7b2c\u4e00\u4e2a\u5c55\u5f00\u7684\u53c2\u6570\u4e0e\u521d\u59cb\u503c\u505a <code>op</code> \u8fd0\u7b97\uff1a</p> <pre><code>template&lt;class... Args&gt;\nvoid unpacker(Args... as)\n{\n    (cout &lt;&lt; ... &lt;&lt; as) &lt;&lt; '\\n';\n}\n/*\n\u5c55\u5f00\u7ed3\u679c\uff1a\ntemplate&lt;&gt;\nvoid unpacker&lt;int, int, char&gt;(int __as0, int __as1, char __as2)\n{\n  std::operator&lt;&lt;(std::operator&lt;&lt;(std::cout.operator&lt;&lt;(__as0).operator&lt;&lt;(__as1), __as2), '\\n');\n}\n*/\n</code></pre>"},{"location":"C%2B%2B/c%2B%2B20/format/format/","title":"Format","text":"<p>std::format for C++20\u7b80\u4ecb</p>"},{"location":"C%2B%2B/c%2B%2B20/semaphore/semaphore/","title":"Semaphore","text":""},{"location":"C%2B%2B/c%2B%2B20/semaphore/semaphore/#_1","title":"\u7b80\u4ecb","text":"<p>C++20 \u4e2d\u5f15\u5165\u4e86\u4fe1\u53f7\u91cf\uff0c\u4f4d\u4e8e\u5934\u6587\u4ef6 <code>&lt;semaphore&gt;</code> \u4e2d\u3002</p> <p>\u5b83\u63d0\u4f9b\u4e86\u4e24\u79cd\u4fe1\u53f7\u91cf\uff1a</p> <ul> <li>counting_semaphore\uff1a\u6a21\u677f\u7c7b\uff0c\u5b9a\u4e49\u5982\u4e0b\uff1a</li> </ul> <pre><code>template&lt; std::ptrdiff_t LeastMaxValue = /* implementation-defined */ &gt;\nclass counting_semaphore;\n</code></pre> <p>\u6a21\u677f\u53c2\u6570 <code>LeastMaxValue</code> \u4e3a\u4fe1\u53f7\u91cf\u7684\u7684\u521d\u59cb\u503c\uff0c\u5176\u9ed8\u8ba4\u503c\u4e0d\u540c\u5e73\u53f0\u7684\u5b9e\u73b0\u4e0d\u540c\u3002\u8fd9\u91cc ptrdiff_t \u662f\u4e00\u4e2a\u6709\u7b26\u53f7\u6570\uff0c\u5177\u4f53\u7c7b\u578b\u8981\u770b\u7f16\u8bd1\u5668\u5177\u4f53\u662f\u5b9e\u73b0\u3002</p> <p>\u5728 MSVC \u4e0b <code>LeastMaxValue</code> \u9ed8\u8ba4\u503c\u4e3a <code>long long</code> \u7684\u6700\u5927\u503c\uff0c\u5728 gcc(11.2.0) \u4e0b\u8be5\u503c\u662f <code>long int</code> \u7684\u6700\u5927\u503c\u3002</p> <ul> <li>binary_semaphore\uff1a\u5b83\u662f\u4e00\u4e2a\u4e24\u79cd\u72b6\u6001\u7684\u4fe1\u53f7\u91cf\uff0c\u4ed6\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a</li> </ul> <pre><code>using binary_semaphore = std::counting_semaphore&lt;1&gt;;\n</code></pre> <p>counting_semaphore \u4e0d\u652f\u6301\u9ed8\u8ba4\u6784\u9020\uff0c\u62f7\u8d1d\u548c\u79fb\u52a8\u8bed\u4e49\u3002\u6211\u4eec\u5728\u521b\u5efa\u4fe1\u53f7\u91cf\u65f6\u8981\u4f20\u7ed9\u6784\u9020\u51fd\u6570\u4e00\u4e2a\u503c\uff0c\u4f5c\u4e3a\u4fe1\u53f7\u91cf\u8ba1\u6570\u5668\u7684\u521d\u59cb\u72b6\u6001\uff1a</p> <pre><code>std::counting_semaphore&lt;10&gt; csem(1);// \u521d\u59cb\u8ba1\u6570\u5668\u4e3a 1\n</code></pre>"},{"location":"C%2B%2B/c%2B%2B20/semaphore/semaphore/#pv","title":"P/V \u64cd\u4f5c","text":""},{"location":"C%2B%2B/c%2B%2B20/semaphore/semaphore/#p","title":"P \u64cd\u4f5c","text":"<p>\u63d0\u4f9b\u4e86\u4e09\u79cd P \u64cd\u4f5c\u65b9\u5f0f\uff1a</p> <ul> <li> <p><code>acquire</code>\uff1a\u963b\u585e\u5f0f\uff0c\u76f4\u5230\u7533\u8bf7\u5230\u4fe1\u53f7\u91cf\u3002</p> </li> <li> <p><code>try_acquire</code>\uff1a\u65e0\u963b\u585e\u5f0f\u7533\u8bf7\u3002</p> </li> <li> <p><code>try_acquire_for</code>\uff1a\u963b\u585e\u5f0f\uff0c\u7533\u8bf7\u4fe1\u53f7\u91cf\uff0c\u4f46\u53ea\u963b\u585e\u4e00\u6bb5\u65f6\u95f4\u3002</p> </li> <li> <p><code>try_acquire_until</code>\uff1a\u963b\u585e\u81f3\u67d0\u4e2a\u65f6\u95f4\u70b9\u3002</p> </li> </ul> <p>\u540e\u4e24\u4e2a\u5173\u4e8e\u65f6\u95f4\u7684\u51fd\u6570\u53ef\u4ee5\u4f7f\u7528 <code>&lt;chrono&gt;</code> \u7ed9\u51fa\u3002 \u8fd8\u6709\u4e00\u4e2a <code>max</code> \u51fd\u6570\uff0c\u4ed6\u4f1a\u8fd4\u56de\u5185\u90e8\u8ba1\u6570\u5668\u7684\u6700\u5927\u53ef\u80fd\u503c\u3002</p>"},{"location":"C%2B%2B/c%2B%2B20/semaphore/semaphore/#v","title":"V \u64cd\u4f5c","text":"<p>\u53ea\u6709\u4e00\u4e2a <code>release</code> \u51fd\u6570\uff0c\u8868\u793a\u4fe1\u53f7\u91cf\u8ba1\u6570\u5668\u7684\u503c +1\u3002</p>"},{"location":"C%2B%2B/lib/cpp-httplib/httplib/","title":"Httplib","text":""},{"location":"C%2B%2B/lib/cpp-httplib/httplib/#_1","title":"\u7b80\u4ecb","text":"<p>\u4ed3\u5e93\u94fe\u63a5</p> <p>\u4e00\u4e2a\u57fa\u4e8e C++11 \u5f00\u53d1\u7684\u5355\u5934\u6587\u4ef6 HTTP/HTTPS \u5e93\u3002\u7528\u6cd5\u7b80\u5355\u6613\u4e0a\u624b\u3002</p>"},{"location":"C%2B%2B/lib/cpp-httplib/httplib/#_2","title":"\u53c2\u8003\u6559\u7a0b","text":"<p>\u3010C++\u3011HTTP\u534f\u8bae\u5e93cpp-httplib</p>"},{"location":"C%2B%2B/lib/jsoncpp/jsoncpp/","title":"Jsoncpp","text":""},{"location":"C%2B%2B/lib/jsoncpp/jsoncpp/#_1","title":"\u7b80\u4ecb","text":"<p>\u4ed3\u5e93\u94fe\u63a5</p> <p>\u4e00\u4e2a\u57fa\u4e8e C++11 \u7684\u5904\u7406 JSON \u6570\u636e\u7684\u5355\u5934\u6587\u4ef6\u5e93\u3002</p>"},{"location":"C%2B%2B/%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/new%26delete/","title":"\u5185\u5b58\u7ba1\u7406","text":""},{"location":"C%2B%2B/%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/new%26delete/#cc","title":"C/C++\u5185\u5b58\u5206\u5e03","text":"<p>\u5bf9\u4e8eC/C++\u7a0b\u5e8f\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5185\u5b58\u5206\u4e3a\u4e00\u4e0b\u51e0\u4e2a\u533a\uff1a</p> <ul> <li>\u9759\u6001\u533a\uff08\u6570\u636e\u6bb5\uff09\uff1a\u5b58\u653e\u5168\u5c40\u53d8\u91cf\u548c\u9759\u6001\u6570\u636e</li> <li>\u5e38\u91cf\u533a\uff08\u4ee3\u7801\u6bb5\uff09\uff1a\u5b58\u653e\u53ea\u8bfb\u5e38\u91cf/\u53ef\u6267\u884c\u4ee3\u7801</li> <li>\u5806\u533a\uff1a\u7528\u4e8e\u7a0b\u5e8f\u8fd0\u884c\u65f6\u52a8\u6001\u5206\u914d\u5185\u5b58\u3002</li> <li>\u6808\u533a\uff1a\u5b58\u653e\u4e34\u65f6\u53d8\u91cf\u3002</li> </ul>"},{"location":"C%2B%2B/%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/new%26delete/#c","title":"C++\u4e2d\u7684\u5185\u5b58\u7ba1\u7406","text":"<p>\u5728C\u8bed\u8a00\u4e2d\u6211\u4eec\u4f7f\u7528malloc / realloc / calloc\u6765\u5728\u5806\u533a\u7533\u8bf7\u7a7a\u95f4\u3002\u4f7f\u7528free\u6765\u91ca\u653e\u5806\u533a\u5185\u5b58\u3002malloc\u662f\u53ea\u7533\u8bf7\u7a7a\u95f4\uff0ccalloc\u662f\u7533\u8bf7\u7a7a\u95f4\u5e76\u4e14\u8d4b\u521d\u59cb\u503c\uff0crealloc\u662f\u66f4\u6539\u7533\u8bf7\u7684\u7a7a\u95f4\u5927\u5c0f\u3002</p> <p>\u8fd9\u6837\u8fdb\u884c\u7533\u8bf7\u7a7a\u95f4\u7684\u5f0a\u7aef\u662f\u64cd\u4f5c\u7e41\u7410\uff0c\u5e76\u4e14\u5728\u4e3a\u7c7b\u7533\u8bf7\u5185\u5b58\u65f6\uff0c\u4f7f\u7528\u4e0a\u9762\u7684\u51fd\u6570\u5f00\u8f9f\u5185\u5b58\uff0c\u8fd8\u9700\u8981\u4f7f\u7528 placement new(\u540e\u6587\u4f1a\u4ecb\u7ecd) \u53bb\u624b\u52a8\u8c03\u7528\u6784\u9020\u51fd\u6570\uff0c\u975e\u5e38\u9ebb\u70e6\u3002</p> <p>\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0cC++\u63d0\u4f9b\u4e86new\u548cdelete\u64cd\u4f5c\u7b26\u3002</p> <p>\u7533\u8bf7\u548c\u91ca\u653e\u5355\u4e2a\u5143\u7d20\u7684\u7a7a\u95f4\uff0c\u4f7f\u7528new\u548cdelete\u64cd\u4f5c\u7b26\uff0c\u7533\u8bf7\u548c\u91ca\u653e\u8fde\u7eed\u7684\u7a7a\u95f4\uff0c\u4f7f\u7528new[]\u548cdelete[]\u3002</p>"},{"location":"C%2B%2B/%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/new%26delete/#operator-new-operator-delete","title":"operator new \u548coperator delete\u51fd\u6570","text":"<p>new \u548c delete \u662f\u7528\u6237\u8fdb\u884c\u52a8\u6001\u5185\u5b58\u7533\u8bf7\u548c\u91ca\u653e\u7684\u64cd\u4f5c\u7b26\uff0coperator new \u548c operator delete \u662f\u7cfb\u7edf\u63d0\u4f9b\u7684\u5168\u5c40\u51fd\u6570\uff0cnew \u5728\u5e95\u5c42\u8c03\u7528 operator new \u5168\u5c40\u51fd\u6570\u6765\u7533\u8bf7\u7a7a\u95f4\uff0cdelete \u5728\u5e95\u5c42\u901a\u8fc7 operator delete \u5168\u5c40\u51fd\u6570\u6765\u91ca\u653e\u7a7a\u95f4\u3002</p> <pre><code>/*\noperator new\uff1a\u8be5\u51fd\u6570\u5b9e\u9645\u901a\u8fc7malloc\u6765\u7533\u8bf7\u7a7a\u95f4\uff0c\u5f53malloc\u7533\u8bf7\u7a7a\u95f4\u6210\u529f\u65f6\u76f4\u63a5\u8fd4\u56de\uff1b\n\u7533\u8bf7\u7a7a\u95f4\u5931\u8d25\uff0c\u5c1d\u8bd5\u6267\u884c\u7a7a\u95f4\u4e0d\u8db3\u5e94\u5bf9\u63aa\u65bd\uff0c\u5982\u679c\u5e94\u5bf9\u63aa\u65bd\u7528\u6237\u8bbe\u7f6e\u4e86\uff0c\u5219\u7ee7\u7eed\u7533\u8bf7\uff0c\u5426\u5219\u629b\u5f02\u5e38\u3002\n*/\nvoid* __CRTDECL operator new(size_t size) _THROW1(_STD bad_alloc)\n{\n    // try to allocate size bytes\n    void* p;\n    while ((p = malloc(size)) == 0)\n        if (_callnewh(size) == 0)\n        {\n            // report no memory\n            // \u5982\u679c\u7533\u8bf7\u5185\u5b58\u5931\u8d25\u4e86\uff0c\u8fd9\u91cc\u4f1a\u629b\u51fabad_alloc \u7c7b\u578b\u5f02\u5e38\n            static const std::bad_alloc nomem;\n            _RAISE(nomem);\n        }\n    return (p);\n}\n/*\noperator delete: \u8be5\u51fd\u6570\u6700\u7ec8\u662f\u901a\u8fc7free\u6765\u91ca\u653e\u7a7a\u95f4\u7684\n*/\n\n/*\nfree\u7684\u5b9e\u73b0\n*/\n#define free(p) _free_dbg(p, _NORMAL_BLOCK)\nvoid operator delete(void* pUserData)\n{\n    _CrtMemBlockHeader* pHead;\n    RTCCALLBACK(_RTC_Free_hook, (pUserData, 0));\n    if (pUserData == NULL)\n        return;\n    _mlock(_HEAP_LOCK); /* block other threads */\n    __TRY\n        /* get a pointer to memory block header */\n        pHead = pHdr(pUserData);\n    /* verify block type */\n    _ASSERTE(_BLOCK_TYPE_IS_VALID(pHead-&gt;nBlockUse));\n    _free_dbg(pUserData, pHead-&gt;nBlockUse);\n    __FINALLY\n        _munlock(_HEAP_LOCK); /* release other threads */\n    __END_TRY_FINALLY\n        return;\n}\n</code></pre> <p>\u770b\u4e86\u4e0a\u9762\u7684\u4ee3\u7801\u6211\u4eec\u77e5\u9053 operator new \u548c operator delete \u5c31\u662f\u5bf9 malloc \u548c free \u7684\u5c01\u88c5\uff0c\u8fd9\u6837\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u66f4\u597d\u7684\u9002\u5e94\u5728 C++ \u4ee3\u7801\u4e2d\u8fdb\u884c\u5f02\u5e38\u5904\u7406\u3002</p>"},{"location":"C%2B%2B/%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/new%26delete/#new-delete-new-delete","title":"new[] \u548c delete[] \u3001new \u548c delete \u4e3a\u4ec0\u4e48\u8981\u5339\u914d\u4f7f\u7528\uff1f","text":"<p>delete[] \u548cdelete \u90fd\u662f\u8c03\u7528 free \u8fdb\u884c\u5185\u5b58\u91ca\u653e\uff0c\u552f\u4e00\u7684\u533a\u522b\u662f delete[] \u4f1a\u8c03\u7528\u591a\u6b21\u6790\u6784\u51fd\u6570\uff0c delete \u53ea\u4f1a\u8c03\u7528\u4e00\u6b21\u3002\u5f53\u7c7b\u4e2d\u7533\u8bf7\u8fc7\u5806\u533a\u5185\u5b58\u65f6\uff0c\u5982\u679c\u4e0d\u4f7f\u7528 delete[] \u5c31\u4f1a\u51fa\u73b0\u5185\u5b58\u6cc4\u6f0f\u7684\u95ee\u9898\uff0c\u4f46\u662f\u5982\u679c\u7c7b\u4e2d\u6ca1\u6709\u7533\u8bf7\u8fc7\u5806\u533a\u5185\u5b58\uff0c\u6784\u9020\u51fd\u6570\u6ca1\u6709\u8fdb\u884c\u4efb\u4f55\u64cd\u4f5c\u65f6\uff0c\u90a3\u8c03\u7528\u8fd9\u4e2a\u4e24\u4e2a\u4e0d\u662f\u5c31\u6ca1\u533a\u522b\u4e86\u561b\uff1f</p> <p>\u8fd9\u80af\u5b9a\u662f\u4e0d\u5bf9\u7684\u3002</p> <p>\u539f\u56e0\u51fa\u5728 new \u548c new[] \u7684\u533a\u522b\u4e0a\u3002</p> <p>\u6211\u4eec\u5728 new[] \u7684\u65f6\u5019\uff0c\u4f1a\u7ed9\u64cd\u4f5c\u7b26\u8f93\u5165\u4e00\u4e2a\u5143\u7d20\u4e2a\u6570\uff0c\u8fd9\u6837 new \u64cd\u4f5c\u7b26\u5c31\u80fd\u77e5\u9053\u8981\u8c03\u7528\u51e0\u6b21\u6784\u9020\u51fd\u6570\uff1b\u4f46\u662f delete[] \u5728\u4f7f\u7528\u65f6\u5e76\u4e0d\u9700\u8981\u6211\u4eec\u8f93\u5165\u5177\u4f53\u7684\u6570\u7ec4\u5927\u5c0f\uff0c\u5b83\u65f6\u600e\u4e48\u77e5\u9053\u8981\u8c03\u7528\u51e0\u6b21\u6790\u6784\u51fd\u6570\u7684\uff1f</p> <p>\u539f\u56e0\u662f new[] \u64cd\u4f5c\u7b26\u5728\u7533\u8bf7\u7a7a\u95f4\u65f6\uff0c\u4f1a\u989d\u5916\u7533\u8bf7\u4e00\u4e2a\u5143\u7d20\u5927\u5c0f\u7684\u7a7a\u95f4\uff0c\u8fd9\u4e2a\u989d\u5916\u7684\u7a7a\u95f4\u4f1a\u5b58\u50a8\u8fd9\u4e2a\u6570\u7ec4\u7684\u5927\u5c0f\u3002\u800c\u8fd9\u591a\u7684\u7a7a\u95f4\u662f\u5728new\u7ed9\u6211\u4eec\u8fd4\u56de\u7684\u6307\u9488\u7684\u524d\u9762\u3002</p> <p>\u5728\u8c03\u7528 delete[] \u65f6\u4f1a\u5411\u524d\u504f\u79fb\u6307\u9488\uff0c\u627e\u5230\u6b63\u786e\u7684\u52a8\u6001\u5185\u5b58\u7684\u5f00\u59cb\u4f4d\u7f6e\uff0c\u6765\u8c03\u7528 free\uff0c\u800c delete \u4e0d\u4f1a\u8fd9\u6837\u505a\uff0c\u5c31\u4f1a\u51fa\u73b0\u62a5\u9519\u3002</p> <p>\u4f46\u662f\u6709\u65f6\u7f16\u8bd1\u5668\u4f1a\u505a\u4e00\u4e9b\u4f18\u5316\uff0c\u5c31\u53c8\u4f1a\u5f15\u53d1\u4e00\u4e9b\u95ee\u9898\u3002</p> <p>\u6211\u4eec\u518d\u770b\u4e0b\u9762\u8fd9\u4e2a\u4f8b\u5b50</p> <pre><code>// \u5728Windows\u4e0bVS2022\u73af\u5883\u4e0b\u548cLinux\u4e0bg++ 4.8.5\u7ed3\u679c\u76f8\u540c\n#include &lt;iostream&gt;\n// \u4f7f\u7528\u9ed8\u8ba4\u6790\u6784\u51fd\u6570\u7684\u7c7b\nclass A\n{\npublic:\n};\n\n// \u81ea\u5b9a\u4e49\u6790\u6784\u51fd\u6570\u7684\u7c7b\nclass B\n{\npublic:\n    ~B(){}\n};\n\nint main()\n{\n    // \u731c\u731c\u54ea\u6bb5\u4ee3\u7801\u4f1a\u5f15\u8d77\u62a5\u9519\uff1f\n    A* a = new A[10];\n    delete a;\n\n\n    B* b = new B[10];\n    delete b;\n\n\n    return 0;\n}\n</code></pre> <p>\u7b54\u6848\u662fB\u7c7b\u4f1a\u5f15\u8d77\u62a5\u9519\u3002\u8fd9\u662f\u7f16\u8bd1\u5668\u4f18\u5316\u7684\u7ed3\u679c\uff0c\u56e0\u4e3aA\u7c7b\u4e2d\u4f7f\u7528\u7684\u662fC++\u9ed8\u8ba4\u7684\u6790\u6784\u51fd\u6570\uff0c\u8fd9\u662f\u7f16\u8bd1\u5668\u5df2\u7ecf\u77e5\u9053\u6790\u6784\u51fd\u6570\u4ec0\u4e48\u90fd\u4e0d\u4f1a\u505a\uff0c\u4e5f\u5c31\u4e0d\u9700\u8981\u8bb0\u5f55\u5177\u4f53\u7684\u5143\u7d20\u4e2a\u6570\uff0c\u6240\u4ee5\u7f16\u8bd1\u5668\u5c31\u6ca1\u6709\u989d\u5916\u7533\u8bf7\u7a7a\u95f4\uff0c\u8fd4\u56de\u7684\u6307\u9488\u5c31\u662f\u52a8\u6001\u5185\u5b58\u6b63\u786e\u7684\u5f00\u59cb\u4f4d\u7f6e\uff0c\u6240\u4ee5\u53ef\u4ee5\u6b63\u5e38\u8fd0\u884c\u3002</p> <p>\u4f46\u662fB\u5c31\u4e0d\u4e00\u6837\u4e86\uff0c\u6211\u4eec\u63d0\u4f9b\u4e86\u5177\u4f53\u7684\u6790\u6784\u51fd\u6570\uff0c\u7f16\u8bd1\u5668\u5c31\u4e0d\u6562\u64c5\u4f5c\u4e3b\u5f20\u7684\u4e0d\u53bb\u8c03\u7528\u6790\u6784\u51fd\u6570\u3002\u5c31\u4f1a\u51fa\u73b0\u6211\u4eec\u4e0a\u9762\u4ecb\u7ecd\u7684\u95ee\u9898\u3002</p> <p>\u4f46\u662f\u8fd9\u6837\u7684\u4f18\u5316\u5e76\u4e0d\u662fc++\u6807\u51c6\u5f3a\u5236\u7684\uff0c\u4e00\u4e9b\u8001\u7684\u7f16\u8bd1\u5668\u53ef\u80fd\u4e0d\u4f1a\u8fdb\u884c\u8fd9\u6837\u7684\u4f18\u5316\uff0c\u8fd9\u6837A\u7c7b\u8fd9\u6837\u5199\u4e5f\u4f1a\u62a5\u9519\uff0c\u6240\u4ee5\u7ed3\u679c\u662f\u672a\u5b9a\u4e49\u7684\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u4e00\u5b9a\u8981\u5339\u914d\u4f7f\u7528\uff0c\u907f\u514d\u4e0d\u5fc5\u8981\u7684\u9ebb\u70e6\u3002</p>"},{"location":"C%2B%2B/%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/new%26delete/#newplacement-new","title":"\u5b9a\u4f4dnew\u8868\u8fbe\u5f0f(placement-new)","text":"<p>\u5b9a\u4f4dnew\u8868\u8fbe\u5f0f\u662f\u5728\u5df2\u5206\u914d\u7684\u539f\u59cb\u5185\u5b58\u7a7a\u95f4\u4e2d\u8c03\u7528\u6784\u9020\u51fd\u6570\u521d\u59cb\u5316\u4e00\u4e2a\u5bf9\u8c61\u3002</p> <p>\u8bed\u6cd5\uff1a <pre><code>new (place_address) type\nnew (place_address) type(initializer-list)\n//place_address\u5fc5\u987b\u662f\u4e00\u4e2a\u6307\u9488\uff0cinitializer-list\u662f\u7c7b\u578b\u7684\u521d\u59cb\u5316\u5217\u8868\n</code></pre></p> <p>\u5b9a\u4f4dnew\u8868\u8fbe\u5f0f\u5728\u5b9e\u9645\u4e2d\u4e00\u822c\u662f\u914d\u5408\u5185\u5b58\u6c60\u4f7f\u7528\u3002\u56e0\u4e3a\u5185\u5b58\u6c60\u5206\u914d\u51fa\u7684\u5185\u5b58\u6ca1\u6709\u521d\u59cb\u5316\uff0c\u6240\u4ee5\u5982\u679c\u662f\u81ea\u5b9a\u4e49\u7c7b\u578b\u7684\u5bf9\u8c61\uff0c\u9700\u8981\u4f7f\u7528new\u7684\u5b9a\u4e49\u8868\u8fbe\u5f0f\u8fdb\u884c\u663e\u793a\u8c03\u6784\u9020\u51fd\u6570\u8fdb\u884c\u521d\u59cb\u5316\u3002</p>"},{"location":"C%2B%2B/%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/new%26delete/#newdeletemallocfree","title":"new/delete\u548cmalloc/free\u7684\u533a\u522b","text":"<p>\u8bf4\u4e86\u8fd9\u4e48\u591a\u7ec8\u4e8e\u5230\u4e86\u559c\u95fb\u4e50\u89c1\u7684\u516b\u80a1\u73af\u8282\u3002</p> <p>malloc/free\u548cnew/delete\u7684\u5171\u540c\u70b9\u662f\uff1a</p> <ul> <li>\u90fd\u662f\u4ece\u5806\u4e0a\u7533\u8bf7\u7a7a\u95f4\uff0c\u5e76\u4e14\u9700\u8981\u7528\u6237\u624b\u52a8\u91ca\u653e\u3002</li> </ul> <p>\u4e0d\u540c\u70b9\uff1a</p> <ul> <li>malloc\u548cfree\u662f\u51fd\u6570\uff0cnew\u548cdelete\u662f\u64cd\u4f5c\u7b26</li> <li>malloc\u51fd\u6570\u7533\u8bf7\u7684\u7a7a\u95f4\u4e0d\u4f1a\u8fdb\u884c\u521d\u59cb\u5316\uff0cnew\u53ef\u4ee5\u8fdb\u884c\u521d\u59cb\u5316</li> <li>malloc\u7533\u8bf7\u7a7a\u95f4\u65f6\uff0c\u9700\u8981\u624b\u52a8\u8ba1\u7b97\u7a7a\u95f4\u5927\u5c0f\u5e76\u4f20\u9012\uff0cnew\u53ea\u9700\u5728\u5176\u540e\u8ddf\u4e0a\u7a7a\u95f4\u7684\u7c7b\u578b\u5373\u53ef\uff0c\u5982\u679c\u662f\u591a\u4e2a\u5bf9\u8c61\uff0c[]\u4e2d\u6307\u5b9a\u5bf9\u8c61\u4e2a\u6570\u5373\u53ef</li> <li>malloc\u7684\u8fd4\u56de\u503c\u4e3avoid*, \u5728\u4f7f\u7528\u65f6\u5fc5\u987b\u5f3a\u8f6c\uff0cnew\u4e0d\u9700\u8981\uff0c\u56e0\u4e3anew\u540e\u8ddf\u7684\u662f\u7a7a\u95f4\u7684\u7c7b\u578b</li> <li>malloc\u7533\u8bf7\u7a7a\u95f4\u5931\u8d25\u65f6\uff0c\u8fd4\u56de\u7684\u662fNULL\uff0c\u56e0\u6b64\u4f7f\u7528\u65f6\u5fc5\u987b\u5224\u7a7a\uff0cnew\u4e0d\u9700\u8981\uff0c\u4f46\u662fnew\u9700\u8981\u6355\u83b7\u5f02\u5e38</li> <li>\u7533\u8bf7\u81ea\u5b9a\u4e49\u7c7b\u578b\u5bf9\u8c61\u65f6\uff0cmalloc/free\u53ea\u4f1a\u5f00\u8f9f\u7a7a\u95f4\uff0c\u4e0d\u4f1a\u8c03\u7528\u6784\u9020\u51fd\u6570\u4e0e\u6790\u6784\u51fd\u6570\uff0c\u800cnew\u5728\u7533\u8bf7\u7a7a\u95f4\u540e\u4f1a\u8c03\u7528\u6784\u9020\u51fd\u6570\u5b8c\u6210\u5bf9\u8c61\u7684\u521d\u59cb\u5316\uff0cdelete\u5728\u91ca\u653e\u7a7a\u95f4\u524d\u4f1a\u8c03\u7528\u6790\u6784\u51fd\u6570\u5b8c\u6210\u7a7a\u95f4\u4e2d\u8d44\u6e90\u7684\u6e05\u7406\u3002</li> </ul>"},{"location":"C%2B%2B/%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/%E5%BC%82%E5%B8%B8/","title":"\u5f02\u5e38","text":""},{"location":"C%2B%2B/%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/%E5%BC%82%E5%B8%B8/#c","title":"C \u9519\u8bef\u5904\u7406\u673a\u5236","text":"<ul> <li> <p>\u7ec8\u6b62\u7a0b\u5e8f\uff1a\u5982 <code>assert</code>\u3002</p> </li> <li> <p>\u8fd4\u56de\u9519\u8bef\u7801\uff1a\u9700\u8981\u81ea\u5df1\u627e\u9519\u8bef\u51fa\u5728\u54ea\u91cc\uff0c\u800c\u4e14\u5f88\u591a\u7cfb\u7edf\u63a5\u53e3\u90fd\u4f1a\u628a\u9519\u8bef\u7801\u653e\u5230 <code>errno</code> \u4e2d\u3002</p> </li> </ul> <p>\u5b9e\u9645\u4e2d C \u7a0b\u5e8f\u90fd\u662f\u4f7f\u7528\u9519\u8bef\u7801\u7684\u65b9\u5f0f\u5904\u7406\u9519\u8bef\uff0c\u90e8\u5206\u60c5\u51b5\u4e0b\u4f7f\u7528\u7ec8\u6b62\u7a0b\u5e8f\u5904\u7406\u4e25\u91cd\u7684\u9519\u8bef\u3002</p>"},{"location":"C%2B%2B/%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/%E5%BC%82%E5%B8%B8/#c_1","title":"C++ \u5f02\u5e38\u5904\u7406\u673a\u5236","text":"<p>\u5f53\u4e00\u4e2a\u51fd\u6570\u51fa\u73b0\u81ea\u5df1\u65e0\u6cd5\u5904\u7406\u7684\u9519\u8bef\u65f6\u5c31\u53ef\u4ee5\u629b\u51fa\u5f02\u5e38\uff0c\u8ba9\u51fd\u6570\u7684\u76f4\u63a5\u6216\u95f4\u63a5\u8c03\u7528\u8005\u5904\u7406\u8fd9\u4e2a\u95ee\u9898\u3002</p> <pre><code>try\n{\n    // \u53ef\u80fd\u629b\u51fa\u5f02\u5e38\u7684\u8bed\u53e5\n}\ncatch(exceptionType variable)\n{\n    // \u5904\u7406\u5f02\u5e38\u7684\u8bed\u53e5\n}\n</code></pre> <p>\u53d1\u751f\u5f02\u5e38\u65f6\u5fc5\u987b\u5c06\u5f02\u5e38\u660e\u786e\u5730\u629b\u51fa\uff0ctry\u624d\u80fd\u68c0\u6d4b\u5230\uff1b\u5982\u679c\u4e0d\u629b\u51fa\u6765\uff0c\u5373\u4f7f\u6709\u5f02\u5e38try\u4e5f\u68c0\u6d4b\u4e0d\u5230\u3002\u5f02\u5e38\u4e00\u65e6\u629b\u51fa\uff0c\u4f1a\u7acb\u523b\u88abtry\u68c0\u6d4b\u5230\uff0c\u5e76\u4e14\u4e0d\u4f1a\u518d\u6267\u884c\u5f02\u5e38\u70b9\uff08\u5f02\u5e38\u53d1\u751f\u4f4d\u7f6e\uff09\u540e\u9762\u7684\u8bed\u53e5\u3002\u610f\u601d\u5c31\u662f\uff1a\u68c0\u6d4b\u5230\u5f02\u5e38\u540e\u7a0b\u5e8f\u7684\u6267\u884c\u6d41\u4f1a\u53d1\u751f\u8df3\u8f6c\uff0c\u4ece\u5f02\u5e38\u70b9\u8df3\u8f6c\u5230catch\u6240\u5728\u7684\u4f4d\u7f6e\uff0c\u4f4d\u4e8e\u5f02\u5e38\u70b9\u4e4b\u540e\u7684\u3001\u5e76\u4e14\u5728\u5f53\u524dtry\u5757\u5185\u7684\u8bed\u53e5\u5c31\u90fd\u4e0d\u4f1a\u518d\u6267\u884c\uff1b\u5373\u4f7fcatch\u8bed\u53e5\u6210\u529f\u5730\u5904\u7406\u4e86\u9519\u8bef\uff0c\u7a0b\u5e8f\u7684\u6267\u884c\u6d41\u4e5f\u4e0d\u4f1a\u518d\u56de\u9000\u5230\u5f02\u5e38\u70b9\uff0c\u6240\u4ee5\u8fd9\u4e9b\u8bed\u53e5\u6c38\u8fdc\u90fd\u6ca1\u6709\u6267\u884c\u7684\u673a\u4f1a\u3002\u6267\u884c\u5b8c catch \u5757\u6240\u5305\u542b\u7684\u4ee3\u7801\u540e\uff0c\u7a0b\u5e8f\u4f1a\u7ee7\u7eed\u6267\u884c catch \u5757\u540e\u9762\u7684\u4ee3\u7801\u3002</p> <p>\u56e0\u4e3a\u5f02\u5e38\u4f1a\u5bfc\u81f4\u6267\u884c\u6d41\u8df3\u8f6c\uff0c\u7a0b\u5e8f\u4e2d\u5e94\u5c3d\u91cf\u907f\u514d\u4f7f\u7528\u5f02\u5e38\uff0c\u9891\u7e41\u7684\u5f02\u5e38\u629b\u51fa\u5f88\u5bb9\u6613\u5f15\u8d77\u4e0d\u5fc5\u8981\u7684\u9519\u8bef\u3002\u5bf9\u4e8e\u6b63\u5e38\u7684\u8fd4\u56de\u503c\uff0c\u6216\u8005\u4e0d\u592a\u4e25\u91cd\u3001\u53ef\u4ee5\u91cd\u8bd5 / \u6062\u590d\u7684\u9519\u8bef\uff0c\u5efa\u8bae\u4e0d\u4f7f\u7528\u5f02\u5e38\uff0c\u628a\u5b83\u4eec\u5f52\u5230\u6b63\u5e38\u7684\u6d41\u7a0b\u91cc\u3002</p> <p>\u51e0\u4e2a\u4f7f\u7528\u5f02\u5e38\u7684\u5224\u65ad\u51c6\u5219\uff1a</p> <ul> <li> <p>\u4e0d\u5141\u8bb8\u88ab\u5ffd\u7565\u7684\u9519\u8bef\uff1b</p> </li> <li> <p>\u6781\u5c11\u6570\u60c5\u51b5\u4e0b\u624d\u4f1a\u53d1\u751f\u7684\u9519\u8bef\uff1b</p> </li> <li> <p>\u4e25\u91cd\u5f71\u54cd\u6b63\u5e38\u6d41\u7a0b\uff0c\u5f88\u96be\u6062\u590d\u5230\u6b63\u5e38\u72b6\u6001\u7684\u9519\u8bef\uff1b</p> </li> <li> <p>\u65e0\u6cd5\u672c\u5730\u5904\u7406\uff0c\u5fc5\u987b\u201c\u7a7f\u900f\u201d\u8c03\u7528\u6808\uff0c\u4f20\u9012\u5230\u4e0a\u5c42\u624d\u80fd\u88ab\u5904\u7406\u7684\u9519\u8bef\u3002</p> </li> </ul>"},{"location":"C%2B%2B/%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/%E5%BC%82%E5%B8%B8/#noexcept","title":"<code>noexcept</code>","text":"<p>C++ 11\u63d0\u51fa\u4e86\u4e00\u4e2a\u65b0\u7684\u7f16\u8bd1\u9636\u6bb5\u547d\u4ee4\uff1a<code>noexcept</code>\uff0c \u88ab\u5b83\u4fee\u9970\u7684\u51fd\u6570\uff0c\u5c31\u662f\u544a\u8bc9\u7f16\u8bd1\u5668\u8fd9\u4e2a\u51fd\u6570\u4e0d\u4f1a\u629b\u51fa\u5f02\u5e38\uff0c\u5141\u8bb8\u7f16\u8bd1\u5668\u5bf9\u8be5\u51fd\u6570\u8fdb\u884c\u4f18\u5316\uff0c\u4e0d\u53bb\u52a0\u90a3\u4e9b\u6808\u5c55\u5f00\u7684\u989d\u5916\u4ee3\u7801\uff0c\u6d88\u9664\u5f02\u5e38\u5904\u7406\u7684\u6210\u672c\u3002\u4f46\u627f\u8bfa\u53ea\u662f\u627f\u8bfa\uff0c\u88ab\u4fee\u9970\u7684\u51fd\u6570\u5982\u679c\u771f\u7684\u629b\u51fa\u4e5f\u4e0d\u4f1a\u62a5\u9519\u3002</p>"},{"location":"C%2B%2B/%E7%BB%A7%E6%89%BF%E5%A4%9A%E6%80%81/%E5%A4%9A%E6%80%81/","title":"\u591a\u6001","text":""},{"location":"C%2B%2B/%E7%BB%A7%E6%89%BF%E5%A4%9A%E6%80%81/%E5%A4%9A%E6%80%81/#_1","title":"\u57fa\u7840","text":""},{"location":"C%2B%2B/%E7%BB%A7%E6%89%BF%E5%A4%9A%E6%80%81/%E5%A4%9A%E6%80%81/#_2","title":"\u5173\u952e\u5b57","text":"<p>\u88ab <code>virtual</code> \u4fee\u9970\u7684\u7c7b\u6210\u5458\u51fd\u6570\u79f0\u4e3a\u865a\u51fd\u6570\uff0c\u53ef\u4ee5\u7531\u5b50\u7c7b\u91cd\u5199\u3002</p> <p>\u865a\u51fd\u6570\u540e\u52a0 <code>= 0</code> \uff0c\u5c31\u6210\u4e86\u7eaf\u865a\u51fd\u6570\uff0c\u5305\u542b\u7eaf\u865a\u51fd\u6570\u7684\u7c7b\u88ab\u79f0\u4f5c\u62bd\u8c61\u7c7b\uff0c\u62bd\u8c61\u7c7b\u4e0d\u80fd\u5b9e\u4f8b\u5316\u5bf9\u8c61\uff0c\u7ee7\u627f\u62bd\u8c61\u7c7b\u7684\u6d3e\u751f\u7c7b\u53ea\u6709\u91cd\u5199\u7eaf\u865a\u51fd\u6570\u540e\u624d\u80fd\u8fdb\u884c\u5b9e\u4f8b\u5316\u3002</p> <p>C++11 \u4e2d\u8fd8\u7ed9\u51fa\u4e24\u4e2a\u4e0e\u591a\u6001\u76f8\u5173\u7684\u5173\u952e\u5b57\uff1a</p> <ul> <li><code>final</code>\uff1a\u4fee\u9970\u865a\u51fd\u6570\uff0c\u8868\u793a\u8be5\u865a\u51fd\u6570\u4e0d\u80fd\u518d\u88ab\u91cd\u5199</li> <li><code>override</code>: \u68c0\u67e5\u6d3e\u751f\u7c7b\u865a\u51fd\u6570\u662f\u5426\u91cd\u5199\u4e86\u57fa\u7c7b\u67d0\u4e2a\u865a\u51fd\u6570\uff0c\u5982\u679c\u6ca1\u6709\u91cd\u5199\u7f16\u8bd1\u62a5\u9519\u3002</li> </ul>"},{"location":"C%2B%2B/%E7%BB%A7%E6%89%BF%E5%A4%9A%E6%80%81/%E5%A4%9A%E6%80%81/#_3","title":"\u591a\u6001\u6784\u6210\u6761\u4ef6","text":"<p>\u591a\u6001\u6784\u6210\u7684\u6761\u4ef6\u6709\u4ee5\u4e0b\u4e24\u70b9\uff1a</p> <ul> <li>\u5fc5\u987b\u901a\u8fc7\u57fa\u7c7b\u7684\u6307\u9488\u6216\u8005\u5f15\u7528\u8c03\u7528\u865a\u51fd\u6570</li> <li>\u88ab\u8c03\u7528\u7684\u51fd\u6570\u5fc5\u987b\u662f\u865a\u51fd\u6570\uff0c\u4e14\u6d3e\u751f\u7c7b\u5fc5\u987b\u5bf9\u57fa\u7c7b\u7684\u865a\u51fd\u6570\u8fdb\u884c\u91cd\u5199</li> </ul> <p>\u5728\u6d3e\u751f\u7c7b\u4e2d\u91cd\u5199\u57fa\u7c7b\u4e2d\u7684\u865a\u51fd\u6570\u9700\u8981\u4fdd\u8bc1\u51fd\u6570\u540d\u5b57\uff08\u865a\u6790\u6784\u4e0d\u9700\u8981\u540d\u5b57\u76f8\u540c\uff09\u3001\u53c2\u6570\u5217\u8868\u5b8c\u5168\u76f8\u540c\u3002</p> <p>\u6211\u4eec\u8981\u660e\u786e\u7684\u662f\u6d3e\u751f\u7c7b\u7ee7\u627f\u7684\u662f\u57fa\u7c7b\u865a\u51fd\u6570\u7684\u58f0\u660e\uff0c\u91cd\u5199\u7684\u662f\u5b9e\u73b0\u3002</p> <p>\u5224\u65ad\u4e0b\u9762\u7a0b\u5e8f\u7684\u8f93\u51fa\uff1a</p> <pre><code>struct A\n{\n    virtual void fun(int val = 1){cout &lt;&lt; \"A\" &lt;&lt; val &lt;&lt; endl;}\n    void test(){fun();}\n};\n\nstruct B:public A\n{\n    virtual void fun(int val = 0){cout &lt;&lt; \"B\" &lt;&lt; val &lt;&lt; endl;}\n};\n\nint main()\n{\n    B* p = new B;\n    p-&gt;test();\n    return 0;\n}\n</code></pre> <p>\u5148\u8bf4\u7b54\u6848\uff0c\u8f93\u51faB1\u3002</p> <p>\u8fd9\u91cc <code>B</code> \u7684\u6307\u9488\u8c03\u7528\u7ee7\u627f\u81ea <code>A</code> \u7684\u51fd\u6570 <code>test</code>\uff0c\u5728 <code>test</code> \u4e2d\u7684 <code>this</code> \u7684\u7c7b\u578b\u662f <code>A*</code> \uff0c\u4f7f\u7528\u57fa\u7c7b\u6307\u9488\u8c03\u7528\u6d3e\u751f\u7c7b\u5bf9\u8c61\u4e2d\u91cd\u5199\u7684\u865a\u51fd\u6570\uff0c\u6240\u4ee5\u6784\u6210\u591a\u6001\u3002</p> <p>\u4f46\u662f\u6211\u4eec\u521a\u8bf4\u8fc7\u6d3e\u751f\u7c7b\u7ee7\u627f\u7684\u662f\u57fa\u7c7b\u865a\u51fd\u6570\u7684\u58f0\u660e\uff0c\u91cd\u5199\u7684\u662f\u5b9e\u73b0\uff0c\u6240\u4ee5 <code>val</code> \u7684\u503c\u662f 1\uff0c\u4f46\u662f\u5b9e\u73b0\u662f\u6d3e\u751f\u7c7b\u7684\uff0c\u6240\u4ee5\u4f1a\u8f93\u51fa <code>B1</code>\u3002</p>"},{"location":"C%2B%2B/%E7%BB%A7%E6%89%BF%E5%A4%9A%E6%80%81/%E5%A4%9A%E6%80%81/#_4","title":"\u591a\u6001\u539f\u7406","text":""},{"location":"C%2B%2B/%E7%BB%A7%E6%89%BF%E5%A4%9A%E6%80%81/%E5%A4%9A%E6%80%81/#_5","title":"\u865a\u51fd\u6570\u8868","text":"<p>\u6bcf\u4e2a\u5e26\u6709\u865a\u51fd\u6570\u7684\u7c7b\u90fd\u4f1a\u88ab\u52a0\u5165\u4e00\u4e2a \u865a\u51fd\u6570\u8868\u6307\u9488 \uff0c\u4ed6\u6307\u5411\u4e00\u4e2a\u865a\u51fd\u6570\u8868\uff0c\u8868\u4e2d\u7684\u51fd\u6570\u90fd\u662f\u5f53\u524d\u7c7b\u4e0b\u7684\u865a\u51fd\u6570\u5730\u5740\u3002\u8be5\u8868\u88ab\u5b58\u50a8\u5728\u9759\u6001\u533a\u4e2d\u3002\u5f53\u5b9e\u4f8b\u5bf9\u8c61\u8c03\u7528\u865a\u51fd\u6570\u65f6\uff0c\u5c31\u8981\u901a\u8fc7\u865a\u51fd\u6570\u8868\u53bb\u67e5\u627e\u865a\u51fd\u6570\u7684\u5730\u5740\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u89c2\u5bdf VS \u4e0b\u76d1\u89c6\u7a97\u53e3\u770b\u5230\uff1a</p> <pre><code>#include&lt;iostream&gt;\nusing namespace std;\nclass BsaeA\n{\npublic:\n    virtual void fun1() { cout &lt;&lt; \"f1\" &lt;&lt; endl; }\n    virtual void fun2() { cout &lt;&lt; \"f2\" &lt;&lt; endl; }\n};\n\nint main()\n{\n    BaseA a;\n    return 0;\n}\n</code></pre> <p>\u5f53\u6d3e\u751f\u7c7b\u91cd\u5199\u8fd9\u4e9b\u865a\u51fd\u6570\u65f6\uff0c\u5728\u6d3e\u751f\u7c7b\u4e2d\u7684\u865a\u51fd\u6570\u8868\u5bf9\u5e94\u7684\u51fd\u6570\u5730\u5740\u4f1a\u88ab\u8986\u76d6\u4e3a\u6d3e\u751f\u7c7b\u4e2d\u91cd\u5199\u7684\u51fd\u6570\u5730\u5740\u3002</p> <p>\u6211\u4eec\u77e5\u9053\u5f53\u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u6307\u5411\u6d3e\u751f\u7c7b\u65f6\uff0c\u4f1a\u8fdb\u884c\u5207\u7247\uff0c\u53bb\u7ef4\u62a4\u6d3e\u751f\u7c7b\u5bf9\u8c61\u5c5e\u4e8e\u57fa\u7c7b\u7684\u90e8\u5206\u3002\u6240\u4ee5\u5f53\u6211\u4eec\u62ff\u6307\u5411\u6d3e\u751f\u7c7b\u7684\u57fa\u7c7b\u6307\u9488\u8c03\u7528\u91cd\u5199\u7684\u865a\u51fd\u6570\u65f6\uff0c\u4ed6\u5c31\u4f1a\u5728\u4ece\u8be5\u6d3e\u751f\u7c7b\u5bf9\u8c61\u6240\u6307\u5411\u7684\u865a\u51fd\u6570\u8868\u4e2d\u627e\u8be5\u51fd\u6570\u5730\u5740\uff0c\u6240\u4ee5\u6700\u540e\u8c03\u7528\u7684\u51fd\u6570\u5c31\u662f\u6d3e\u751f\u7c7b\u91cd\u5199\u7684\u51fd\u6570\u3002</p> <p>\u5f53\u7136\u6ca1\u6709\u5728\u6d3e\u751f\u7c7b\u91cd\u5199\u7684\u865a\u51fd\u6570\uff0c\u5728\u865a\u51fd\u6570\u8868\u4e2d\u7684\u51fd\u6570\u5730\u5740\u662f\u4e0e\u57fa\u7c7b\u4e2d\u7684\u76f8\u540c\u7684\u3002</p> <pre><code>#include&lt;iostream&gt;\nusing namespace std;\nclass BaseA\n{\npublic:\n    virtual void fun1() { cout &lt;&lt; \"f1\" &lt;&lt; endl; }\n    virtual void fun2() { cout &lt;&lt; \"f2\" &lt;&lt; endl; }\n};\n\nclass B :public BaseA\n{\npublic:\n    virtual void fun1() { cout &lt;&lt; \"B::f1\" &lt;&lt; endl; }\n};\n\nint main()\n{\n    BaseA a; \n    B b;\n    return 0;\n}\n</code></pre> <p>\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u88ab\u91cd\u5199\u7684\u51fd\u6570 <code>fun1</code> \u5730\u5740\u53d8\u6210\u4e86 <code>0x00be1488</code> \uff0c\u6ca1\u6709\u88ab\u91cd\u5199\u7684 <code>fun2</code> \u5730\u5740\u4e0e\u57fa\u7c7b\u76f8\u540c\u3002</p> <p>\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5f53\u6709\u591a\u4e2a\u57fa\u7c7b\u65f6\uff0c\u6bcf\u4e2a\u57fa\u7c7b\u7684\u865a\u51fd\u6570\u8868\u6307\u9488\u662f\u5206\u5f00\u7684\u3002\u8fd9\u4e5f\u662f\u53ef\u4ee5\u7406\u89e3\u7684\uff0c\u56e0\u4e3a\u4e0d\u540c\u7684\u57fa\u7c7b\u6307\u9488\u6307\u5411\u6d3e\u751f\u7c7b\u65f6\uff0c\u6240\u5207\u7247\u7684\u5185\u5bb9\u80af\u5b9a\u662f\u5bf9\u5e94\u57fa\u7c7b\u7684\u5185\u5bb9\uff0c\u90a3\u4e48\u60f3\u8981\u5b9e\u73b0\u4e0d\u540c\u7c7b\u7684\u591a\u6001\uff0c\u5c31\u5fc5\u987b\u8981\u5c06\u4e0d\u540c\u7c7b\u7684\u865a\u51fd\u6570\u8868\u6307\u9488\u5206\u5f00\u3002</p> <pre><code>#include&lt;iostream&gt;\nusing namespace std;\nclass BaseA\n{\npublic:\n    virtual void fun1() { cout &lt;&lt; \"f1\" &lt;&lt; endl; }\n    virtual void fun2() { cout &lt;&lt; \"f2\" &lt;&lt; endl; }\n};\nclass BaseB\n{\npublic:\n    virtual void fun3() { cout &lt;&lt; \"f1\" &lt;&lt; endl; }\n    virtual void fun4() { cout &lt;&lt; \"f2\" &lt;&lt; endl; }\n};\nclass son:public BaseA ,public BaseB\n{\npublic:\n    virtual void fun1() { cout &lt;&lt; \"son::f1\" &lt;&lt; endl; }\n    virtual void fun3() { cout &lt;&lt; \"son::f3\" &lt;&lt; endl; }\n};\n\nint main()\n{\n    son a;\n    return 0;\n}\n</code></pre> <p>\u4ed6\u4eec\u7684\u903b\u8f91\u5173\u7cfb\u5c31\u5982\u4e0b\u56fe\uff1a</p>"},{"location":"C%2B%2B/%E7%BB%A7%E6%89%BF%E5%A4%9A%E6%80%81/%E5%A4%9A%E6%80%81/#_6","title":"\u6613\u9519","text":""},{"location":"C%2B%2B/%E7%BB%A7%E6%89%BF%E5%A4%9A%E6%80%81/%E5%A4%9A%E6%80%81/#_7","title":"\u91cd\u8f7d\u3001\u91cd\u5199\u3001\u91cd\u5b9a\u4e49\uff08\u9690\u85cf\uff09","text":""},{"location":"C%2B%2B/%E7%BB%A7%E6%89%BF%E5%A4%9A%E6%80%81/%E5%A4%9A%E6%80%81/#_8","title":"\u91cd\u8f7d","text":"<ul> <li>\u4e24\u4e2a\u51fd\u6570\u5728\u540c\u4e00\u4f5c\u7528\u57df\u4e0b\u3002</li> <li>\u51fd\u6570\u540d\u76f8\u540c\uff0c\u53c2\u6570\u4e0d\u540c\u3002</li> </ul>"},{"location":"C%2B%2B/%E7%BB%A7%E6%89%BF%E5%A4%9A%E6%80%81/%E5%A4%9A%E6%80%81/#_9","title":"\u91cd\u5199","text":"<ul> <li>\u4e24\u4e2a\u51fd\u6570\u5206\u522b\u5728\u57fa\u7c7b\u548c\u6d3e\u751f\u7c7b\u7684\u4f5c\u7528\u57df\u3002</li> <li>\u51fd\u6570\u540d\u3001\u53c2\u6570\u3001\u8fd4\u56de\u503c\uff08\u534f\u53d8\u9664\u5916\uff09\u90fd\u76f8\u540c\u3002</li> <li>\u4e24\u4e2a\u51fd\u6570\u90fd\u662f\u865a\u51fd\u6570</li> </ul>"},{"location":"C%2B%2B/%E7%BB%A7%E6%89%BF%E5%A4%9A%E6%80%81/%E5%A4%9A%E6%80%81/#_10","title":"\u9690\u85cf","text":"<ul> <li>\u4e24\u4e2a\u51fd\u6570\u5206\u522b\u5728\u57fa\u7c7b\u548c\u6d3e\u751f\u7c7b\u7684\u4f5c\u7528\u57df\u3002</li> <li>\u51fd\u6570\u540d\u76f8\u540c\u3002</li> </ul> <p>\u5206\u522b\u5904\u4e8e\u57fa\u7c7b\u548c\u6d3e\u751f\u7c7b\u4e2d\u7684\u540c\u540d\u51fd\u6570\u4e0d\u6784\u6210\u91cd\u5199\u5c31\u662f\u9690\u85cf\u3002</p>"},{"location":"C%2B%2B/%E7%BB%A7%E6%89%BF%E5%A4%9A%E6%80%81/%E5%A4%9A%E6%80%81/#_11","title":"\u5185\u8054\u51fd\u6570\u53ef\u4ee5\u662f\u865a\u51fd\u6570\u5417","text":"<p>\u662f\u53ef\u4ee5\u7684\uff0c\u4f46\u662f\u5f53\u91c7\u7528\u591a\u6001\u8c03\u7528\u65f6\uff0c\u5185\u8054\u51fd\u6570\u4e0d\u4f1a\u5728\u8c03\u7528\u4f4d\u7f6e\u5c55\u5f00\uff0c\u5f53\u6b63\u5e38\u8c03\u7528\u65f6\uff0c\u5185\u8054\u51fd\u6570\u624d\u4f1a\u5c55\u5f00\u3002</p>"},{"location":"C%2B%2B/%E7%BB%A7%E6%89%BF%E5%A4%9A%E6%80%81/%E5%A4%9A%E6%80%81/#_12","title":"\u9759\u6001\u6210\u5458\u51fd\u6570\u53ef\u4ee5\u662f\u865a\u51fd\u6570\u5417","text":"<p>\u4e0d\u53ef\u4ee5\u3002\u9759\u6001\u6210\u5458\u51fd\u6570\u5728\u8c03\u7528\u65f6\u662f\u4e0d\u4f1a\u4f20\u9012 <code>this</code> \u6307\u9488\u7684\uff0c\u4f46\u5bf9\u4e8e <code>virtual</code> \u865a\u51fd\u6570\uff0c\u5b83\u7684\u8c03\u7528\u6070\u6070\u4f7f\u7528 <code>this</code> \u6307\u9488\u3002\u5728\u6709\u865a\u51fd\u6570\u7684\u7c7b\u5b9e\u4f8b\u4e2d\uff0c<code>this</code> \u6307\u9488\u8c03\u7528 <code>vptr</code> \u6307\u9488\uff0c\u6307\u5411\u7684\u662f vtable(\u865a\u51fd\u6570\u5217\u8868) \uff0c\u901a\u8fc7\u865a\u51fd\u6570\u5217\u8868\u627e\u5230\u9700\u8981\u8c03\u7528\u7684\u865a\u51fd\u6570\u7684\u5730\u5740\u3002\u603b\u4f53\u6765\u8bf4\u865a\u51fd\u6570\u7684\u8c03\u7528\u5173\u7cfb\u662f\uff1a<code>this</code> \u6307\u9488-&gt; <code>vptr</code> -&gt; <code>vtable</code> -&gt; \u865a\u51fd\u6570\u3002</p> <p>\u6240\u4ee5\u8bf4\uff0c<code>static</code> \u9759\u6001\u51fd\u6570\u6ca1\u6709this\u6307\u9488\uff0c\u4e5f\u5c31\u65e0\u6cd5\u627e\u5230\u865a\u51fd\u6570\u4e86\u3002\u6240\u4ee5\u9759\u6001\u6210\u5458\u51fd\u6570\u4e0d\u80fd\u662f\u865a\u51fd\u6570\u3002\u4ed6\u4eec\u7684\u5173\u952e\u533a\u522b\u5c31\u662f <code>this</code> \u6307\u9488\u3002</p>"},{"location":"C%2B%2B/%E7%BB%A7%E6%89%BF%E5%A4%9A%E6%80%81/%E5%A4%9A%E6%80%81/#_13","title":"\u6784\u9020\u51fd\u6570\u53ef\u4ee5\u662f\u865a\u51fd\u6570\u5417","text":"<p>\u4e0d\u53ef\u4ee5\u3002\u865a\u51fd\u6570\u8868\u6307\u9488\u662f\u5728\u6784\u9020\u51fd\u6570\u9636\u6bb5\u521d\u59cb\u5316\u7684\uff0c\u865a\u51fd\u6570\u8c03\u7528\u53c8\u9700\u8981\u865a\u51fd\u6570\u8868\u3002\u6240\u4ee5\u5982\u679c\u6784\u9020\u51fd\u6570\u662f\u865a\u51fd\u6570\uff0c\u60f3\u8c03\u7528\u6784\u9020\u51fd\u6570\u5c31\u9700\u8981\u865a\u51fd\u6570\u8868\u6307\u9488\uff0c\u4f46\u865a\u51fd\u6570\u8868\u6307\u9488\u8fd8\u672a\u521d\u59cb\u5316\uff0c\u5c31\u4f1a\u6709\u95ee\u9898\u3002</p>"},{"location":"C%2B%2B/%E7%BB%A7%E6%89%BF%E5%A4%9A%E6%80%81/%E5%A4%9A%E6%80%81/#_14","title":"\u6790\u6784\u51fd\u6570\u53ef\u662f\u865a\u51fd\u6570\u5417","text":"<p>\u53ef\u4ee5\uff0c\u800c\u4e14\u6700\u597d\u662f\u865a\u51fd\u6570\u3002\u56e0\u4e3a\u5f53\u7236\u7c7b\u6307\u9488\u6307\u5411\u4e00\u5757 <code>new</code> \u6765\u7684\u5b50\u7c7b\u5bf9\u8c61\u65f6\uff0c\u53ea\u6709\u6790\u6784\u51fd\u6570\u6784\u6210\u591a\u6001\u8c03\u7528\uff0c\u624d\u80fd\u8c03\u7528\u5b50\u7c7b\u5bf9\u8c61\u7684\u6790\u6784\u51fd\u6570\uff0c\u6b63\u786e\u91ca\u653e\u5b50\u7c7b\u5bf9\u8c61\u7684\u5185\u5b58\u7a7a\u95f4\u3002</p>"},{"location":"C%2B%2B/%E7%BB%A7%E6%89%BF%E5%A4%9A%E6%80%81/%E5%A4%9A%E6%80%81/#_15","title":"\u5bf9\u8c61\u8bbf\u95ee\u666e\u901a\u51fd\u6570\u5feb\u8fd8\u662f\u865a\u51fd\u6570\u5feb","text":"<p>\u9996\u5148\u5982\u679c\u662f\u666e\u901a\u5bf9\u8c61\uff0c\u662f\u4e00\u6837\u5feb\u7684\u3002\u5982\u679c\u662f\u6307\u9488\u5bf9\u8c61\u6216\u8005\u662f\u5f15\u7528\u5bf9\u8c61\uff0c\u5219\u8c03\u7528\u7684\u666e\u901a\u51fd\u6570\u5feb\uff0c\u56e0\u4e3a\u6784\u6210\u591a\u6001\uff0c\u8fd0\u884c\u65f6\u8c03\u7528\u865a\u51fd\u6570\u9700\u8981\u5230\u865a\u51fd\u6570\u8868\u4e2d\u53bb\u67e5\u627e\u3002</p>"},{"location":"C%2B%2B/%E7%BB%A7%E6%89%BF%E5%A4%9A%E6%80%81/%E5%A4%9A%E6%80%81/#_16","title":"\u865a\u51fd\u6570\u8868\u662f\u5728\u4ec0\u4e48\u9636\u6bb5\u751f\u6210\u7684?\u5b58\u5728\u54ea\u7684","text":"<p>\u865a\u51fd\u6570\u8868\u662f\u5728\u7f16\u8bd1\u9636\u6bb5\u5c31\u751f\u6210\u7684\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\u5b58\u5728\u4ee3\u7801\u6bb5(\u5e38\u91cf\u533a)\u7684\u3002</p>"},{"location":"C%2B%2B/%E7%BB%A7%E6%89%BF%E5%A4%9A%E6%80%81/%E7%BB%A7%E6%89%BF/","title":"\u7ee7\u627f","text":""},{"location":"C%2B%2B/%E7%BB%A7%E6%89%BF%E5%A4%9A%E6%80%81/%E7%BB%A7%E6%89%BF/#_1","title":"\u6784\u9020\u987a\u5e8f","text":"<p>\u521d\u5b66 C++ \u65f6\uff0c\u4f60\u4e00\u5b9a\u8bb0\u8fc7\u6d3e\u751f\u7c7b\u548c\u5b50\u7c7b\u7684\u6784\u9020\u987a\u5e8f\uff0c\u4f46\u662f\u6ca1\u60f3\u8fc7\u4e3a\u4ec0\u4e48\u662f\u8fd9\u6837\u7684\u987a\u5e8f\u3002</p> <p>\u5b66\u4e60\u521d\u59cb\u5316\u5217\u8868\u65f6\uff0c\u6211\u4eec\u4e86\u89e3\u5230\u7f16\u8bd1\u5668\u5728\u6784\u9020\u6210\u5458\u53d8\u91cf\u65f6\uff0c\u4e0d\u4f1a\u6309\u7167\u6211\u4eec\u5728\u521d\u59cb\u5316\u5217\u8868\u7684\u987a\u5e8f\u8fdb\u884c\u6784\u9020\uff0c\u800c\u662f\u58f0\u660e\u987a\u5e8f\u8fdb\u884c\u6784\u9020\u3002\u6211\u4eec\u901a\u8fc7 VS \u76d1\u89c6\u7a97\u53e3\u53ef\u4ee5\u770b\u5230\uff0c\u57fa\u7c7b\u4f1a\u6309\u7167\u7ee7\u627f\u987a\u88ab\u7f16\u8bd1\u5668\u58f0\u660e\u5728\u6574\u4e2a\u6d3e\u751f\u7c7b\u7684\u5f00\u5934\uff0c\u5982\u4e0b\uff1a</p> <pre><code>#include&lt;iostream&gt;\nusing namespace std;\nclass BaseA{};\nclass BaseB{};\nclass son:public BaseA ,public BaseB\n{\n    int var;\n};\n\nint main()\n{\n    son a;\n    return 0;\n}\n</code></pre> <p>\u90a3\u4e48\u6309\u7167\u4e0a\u8ff0\u7c7b\u6784\u9020\u539f\u5219\uff0c\u5f88\u5bb9\u6613\u5c31\u80fd\u60f3\u5230\u4e3a\u4ec0\u4e48\u4f1a\u5148\u6784\u9020\u7236\u7c7b\uff0c\u4e3a\u4ec0\u4e48\u591a\u7ee7\u627f\u65f6\u4f1a\u6309\u7167\u4ece\u5de6\u5411\u53f3\u7684\u987a\u5e8f\u4e00\u4e00\u6784\u9020\u3002\u672c\u8d28\u4e0a\u5c31\u662f\u6210\u5458\u53d8\u91cf\u7684\u6784\u9020\u3002</p>"},{"location":"C%2B%2B/%E7%BB%A7%E6%89%BF%E5%A4%9A%E6%80%81/%E7%BB%A7%E6%89%BF/#_2","title":"\u57fa\u7c7b\u548c\u6d3e\u751f\u7c7b\u5bf9\u8c61\u8d4b\u503c\u8f6c\u6362","text":"<p>\u5b50\u7c7b\u5bf9\u8c61\u53ef\u4ee5\u8d4b\u503c\u7ed9\u7236\u7c7b\u7684\u5bf9\u8c61\u3001\u7236\u7c7b\u7684\u6307\u9488\u3001\u7236\u7c7b\u7684\u5f15\u7528\uff0c\u8fd9\u4e9b\u53d8\u91cf\u4f1a\u7ef4\u62a4\u5b50\u7c7b\u5bf9\u8c61\u4e2d\u7236\u7c7b\u7684\u90a3\u90e8\u5206\u6210\u5458\u3002</p> <p>\u6ce8\u610f\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u5e76\u4e0d\u4f1a\u50cf\u5176\u4ed6\u53d8\u91cf\u8f6c\u5316\u90a3\u6837\u4ea7\u751f\u4e34\u65f6\u53d8\u91cf\u3002</p> <pre><code>double a;\n// \u8fd9\u6837\u4f1a\u62a5\u9519\nint&amp; pa = a;\n\n// A\u4e3a\u5b50\u7c7b B\u4e3a\u7236\u7c7b\nA x;\n// \u8fd9\u6837\u5199\u4e0d\u4f1a\u62a5\u9519\nB&amp; px = A\n</code></pre> <p>\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u4e0d\u540c\u7c7b\u578b\u95f4\u7684\u8d4b\u503c\u4f1a\u4ea7\u751f\u4e00\u4e2a\u4e34\u65f6\u53d8\u91cf\uff0c\u7136\u540e\u5c06\u8fd9\u4e2a\u4e34\u65f6\u53d8\u91cf\u8d4b\u503c\u7ed9\u76ee\u6807\u7c7b\u578b\uff0c\u4f46\u662f\u4e34\u65f6\u53d8\u91cf\u5177\u6709\u5e38\u6027\uff0c\u5982\u679c\u76f4\u63a5\u62ff <code>int&amp;</code> \u6765\u5f15\u7528\u5c31\u4f1a\u62a5\u9519\uff0c\u8981\u6362\u6210 <code>const int&amp;</code> \u3002</p> <p>\u4f46\u662f\u5bf9\u4e8e\u5b50\u7c7b\u5bf9\u8c61\u5bf9\u7236\u7c7b\u7684\u8d4b\u503c\u5c31\u4e0d\u4f1a\u4ea7\u751f\u4e34\u65f6\u53d8\u91cf\uff0c\u800c\u662f\u7236\u7c7b\u5bf9\u8c61\u76f4\u63a5\u7ef4\u62a4\u5b50\u7c7b\u4e2d\u4ece\u7236\u7c7b\u7ee7\u627f\u6765\u7684\u90a3\u90e8\u5206\u6210\u5458\u3002</p> <p>\u4f46\u662f\u5728\u79c1\u6709\u7ee7\u627f\u548c\u4fdd\u62a4\u7ee7\u627f\u65f6\u7236\u7c7b\u6307\u9488(\u5f15\u7528)\u65e0\u6cd5\u6307\u5411\u5b50\u7c7b\u3002</p>"},{"location":"C%2B%2B/%E7%BB%A7%E6%89%BF%E5%A4%9A%E6%80%81/%E7%BB%A7%E6%89%BF/#_3","title":"\u7ee7\u627f\u4e2d\u7684\u4f5c\u7528\u57df","text":"<p>\u5728\u7ee7\u627f\u4f53\u7cfb\u4e2d\uff0c\u7236\u7c7b\u548c\u5b50\u7c7b\u90fd\u6709\u72ec\u7acb\u7684\u4f5c\u7528\u57df\u3002\u6240\u4ee5\u5bf9\u4e8e\u7236\u7c7b\u548c\u5b50\u7c7b\u4e2d\u7684\u540c\u540d\u51fd\u6570\u5e76\u4e0d\u4f1a\u6784\u6210\u51fd\u6570\u91cd\u8f7d\uff0c\u800c\u662f\u6784\u6210\u9690\u85cf\u5173\u7cfb\u3002</p> <p>\u6240\u8c13\u9690\u85cf\u5c31\u662f\u5728\u5b50\u7c7b\u4e2d\u4f1a\u9ed8\u8ba4\u8c03\u7528\u5b50\u7c7b\u4e2d\u7684\u540c\u540d\u51fd\u6570\uff0c\u800c\u5c4f\u853d\u7236\u7c7b\u4e2d\u7684\u540c\u540d\u51fd\u6570\u3002\u5f53\u9700\u8981\u8c03\u7528\u7236\u7c7b\u7684\u540c\u540d\u51fd\u6570\u65f6\uff0c\u5c31\u8981\u52a0\u4e0a\u4f5c\u7528\u57df\u9650\u5b9a\u7b26\u3002</p>"},{"location":"C%2B%2B/%E7%BB%A7%E6%89%BF%E5%A4%9A%E6%80%81/%E7%BB%A7%E6%89%BF/#_4","title":"\u7ee7\u627f\u9759\u6001\u6210\u5458","text":"<p>\u57fa\u7c7b\u5b9a\u4e49\u4e86static\u9759\u6001\u6210\u5458\uff0c\u5219\u6574\u4e2a\u7ee7\u627f\u4f53\u7cfb\u91cc\u9762\u53ea\u6709\u4e00\u4e2a\u8fd9\u6837\u7684\u6210\u5458\u3002\u65e0\u8bba\u6d3e\u751f\u51fa\u591a\u5c11\u4e2a\u5b50\u7c7b\uff0c\u90fd\u53ea\u6709\u4e00\u4e2astatic\u6210\u5458\u5b9e\u4f8b \u3002</p>"},{"location":"C%2B%2B/%E7%BB%A7%E6%89%BF%E5%A4%9A%E6%80%81/%E7%BB%A7%E6%89%BF/#_5","title":"\u7ee7\u627f\u4e0e\u53cb\u5143","text":"<p>\u53cb\u5143\u5173\u7cfb\u4e0d\u80fd\u88ab\u7ee7\u627f\uff0c\u4e5f\u5c31\u662f\u8bf4\u57fa\u7c7b\u53cb\u5143\u4e0d\u80fd\u8bbf\u95ee\u5b50\u7c7b\u79c1\u6709\u548c\u4fdd\u62a4\u6210\u5458\u3002</p>"},{"location":"C%2B%2B/%E7%BB%A7%E6%89%BF%E5%A4%9A%E6%80%81/%E7%BB%A7%E6%89%BF/#_6","title":"\u83f1\u5f62\u7ee7\u627f\u548c\u865a\u7ee7\u627f","text":""},{"location":"C%2B%2B/%E7%BB%A7%E6%89%BF%E5%A4%9A%E6%80%81/%E7%BB%A7%E6%89%BF/#_7","title":"\u865a\u7ee7\u627f\u539f\u7406","text":"<p>\u83f1\u5f62\u7ee7\u627f\u662f\u591a\u7ee7\u627f\u7684\u4e00\u79cd\u7279\u6b8a\u60c5\u51b5\uff1a</p> <p>\u83f1\u5f62\u7ee7\u627f\u4f1a\u5bfc\u81f4\u6570\u636e\u5197\u4f59\u548c\u4e8c\u4e49\u6027\u7684\u95ee\u9898\uff0c\u5373\u5728\u7c7b D \u4e2d\u6709\u4e24\u4efd\u7c7b A \u7684\u6570\u636e\uff0c\u4e00\u4efd\u7531 B \u7ee7\u627f\u800c\u6765\uff0c\u4e00\u4efd\u7531 C \u7ee7\u627f\u800c\u6765\u3002\u4ee5\u4e0b\u5c31\u662f\u4e00\u4e2a\u83f1\u5f62\u7ee7\u627f\u7684\u4f8b\u5b50\uff1a</p> <pre><code>class A\n{\npublic:\n    int _a;\n};\n\nclass B: public A\n{\npublic:\n    int _b;\n};\n\nclass C: public A\n{\npublic:\n    int _c;\n};\n\nclass D: public B,public C\n{\npublic: \n    int _d;\n};\n</code></pre> <p>\u5f53\u6211\u4eec\u50cf\u4e0b\u9762\u8fd9\u6837\u76f4\u63a5\u8bbf\u95ee\u65f6\u5c31\u4f1a\u51fa\u73b0\u4e8c\u4e49\u6027\uff1a</p> <p>\u9700\u8981\u6211\u4eec\u7528\u4f5c\u7528\u57df\u9650\u5b9a\u7b26\u6765\u6307\u5b9a\u8bbf\u95ee\u54ea\u4e2a_a</p> <p>\u6211\u4eec\u901a\u8fc7\u89c2\u5bdf d \u5185\u5b58\u53ef\u4ee5\u53d1\u73b0\uff0c\u7c7b A \u4e2d\u7684 _a \u7684\u786e\u7ee7\u627f\u4e86\u4e24\u4efd\u3002</p> <p>\u90a3\u4e48\u60f3\u8981\u89e3\u51b3\u8fd9\u6837\u7684\u95ee\u9898\u5c31\u8981\u7528\u5230\u865a\u7ee7\u627f\uff0c\u7528\u5230\u5173\u952e\u5b57 virtual\uff0c\u5982\u679c\u5b50\u7c7b\u91c7\u7528\u865a\u7ee7\u627f\u7684\u65b9\u5f0f\u7ee7\u627f\u7236\u7c7b\uff0c\u90a3\u4e48\u8be5\u7236\u7c7b\u88ab\u79f0\u4f5c\u865a\u57fa\u7c7b\uff0c\u4e14\u7ee7\u627f\u540e\u4f1a\u5728\u5b50\u7c7b\u4e2d\u591a\u52a0\u5165\u4e00\u4e2a\u6307\u9488\uff0c\u6307\u5411\u4e00\u4e2a\u865a\u57fa\u7c7b\u8868\uff0c\u8be5\u8868\u4e2d\u8bb0\u5f55\u4e86\u672c\u7c7b\u5730\u5740\u5230\u865a\u57fa\u7c7b\u5730\u5740\u7684\u504f\u79fb\u91cf\u3002</p> <p>\u4e0b\u9762\u91c7\u7528\u865a\u7ee7\u627f\u7684\u65b9\u5f0f\uff0c\u518d\u6b21\u89c2\u5bdf\u4e00\u4e0b d \u7684\u5185\u5b58\u5206\u5e03</p> <pre><code>class A\n{\npublic:\n    int _a;\n};\n\nclass B : virtual public A\n{\npublic:\n    int _b;\n};\n\nclass C : virtual public A\n{\npublic:\n    int _c;\n};\n\nclass D : public B, public C\n{\npublic:\n    int _d;\n};\n</code></pre> <p>\u8fd9\u65f6\u6765\u81ea\u7c7b A \u7684 _a \u5c31\u53ea\u6709\u4e00\u4efd\u4e86\uff0c\u4f46\u662f\u7c7b B \u548c\u7c7b C \u4e2d\u591a\u4e86\u4e24\u4e2a\u53d8\u91cf\uff0c\u8fd9\u4e24\u4e2a\u5c31\u662f\u865a\u57fa\u7c7b\u8868\u6307\u9488\uff0c\u6307\u5411\u5404\u81ea\u7684\u865a\u8868\uff0c\u8868\u4e2d\u5c31\u8bb0\u5f55\u4e86\u672c\u7c7b\u5230\u865a\u7ee7\u627f\u57fa\u7c7b\u7684\u504f\u79fb\u91cf\u3002</p> <p>\u6211\u4eec\u7528\u53ef\u4ee5\u67e5\u770b\u4e00\u4e0b\u5176\u6307\u5411\u7684\u5185\u5b58\u4f4d\u7f6e\uff1a</p> <p>\u8fd9\u662f\u5c0f\u7aef\u673a\uff0c\u6240\u4ee5\u53ef\u4ee5\u770b\u5230\u5185\u5b58\u4e2d\u5b58\u6709 <code>0x00 00 00 14</code> \u5373 20\uff0c\u6211\u4eec\u5c06\u7c7b B \u7684\u5f00\u59cb\u5730\u5740\u52a0\u4e0a 20 \u6b63\u597d\u662f\u7c7b A \u90e8\u5206\u7684\u5f00\u59cb\u5730\u5740\u3002\u5bf9\u4e8e\u7c7b C \u90e8\u5206\u4e5f\u662f\u76f8\u540c\u7684 \u52a0\u4e0a <code>0x00 00 00 0c</code> \u5373 12 \u4e5f\u80fd\u5f97\u5230\u7c7b A \u90e8\u5206\u7684\u5f00\u59cb\u5730\u5740\u3002\u8fd9\u6837\u5c31\u89e3\u51b3\u4e86\u6570\u636e\u5197\u4f59\u548c\u4e8c\u4e49\u6027\u7684\u95ee\u9898\u3002</p>"},{"location":"C%2B%2B/%E7%BB%A7%E6%89%BF%E5%A4%9A%E6%80%81/%E7%BB%A7%E6%89%BF/#_8","title":"\u865a\u57fa\u7c7b\u7684\u521d\u59cb\u5316","text":"<p>\u5728\u865a\u7ee7\u627f\u4e2d\uff0c\u865a\u57fa\u7c7b\u662f\u5728\u6700\u540e\u4e00\u4e2a\u6d3e\u751f\u7c7b\u4e2d\u6784\u9020\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u5982\u679c\u865a\u57fa\u7c7b\u4e2d\u6ca1\u6709\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\uff0c\u90a3\u4e48\u5c31\u8981\u5728\u6700\u540e\u7684\u6d3e\u751f\u7c7b\u4e2d\u7684\u521d\u59cb\u5316\u5217\u8868\u663e\u793a\u7684\u8c03\u7528\u865a\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570\uff0c\u6240\u4ee5\u5728\u865a\u57fa\u7c7b\u4e2d\u4efb\u4f55\u4e00\u4e2a\u9700\u8981\u5b9e\u4f8b\u5316\u7684\u6d3e\u751f\u7c7b\u4e2d\u90fd\u9700\u8981\u5c06\u865a\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570\u663e\u793a\u7684\u8c03\u7528\u51fa\u6765\u3002</p> <pre><code>class A\n{\npublic:\n    A(int a){}\n};\n\nclass B: virtual public A\n{\npublic:\n    B(int a):\n        A(a)\n    {}\n};\n\nclass C: virtual public A\n{\npublic:\n    C(int a):\n        A(a)\n    {}\n};\n\nclass D: public B,public C\n{\npublic: \n    D(int a):\n        A(a),\n        B(a),\n        C(a)\n    {}\n};\n\nvoid solve()\n{\n    D d(1);\n}\n</code></pre> <p>\u8fd9\u4e5f\u5f88\u597d\u7406\u89e3\uff0c\u56e0\u4e3a\u5b9e\u73b0\u865a\u7ee7\u627f\uff0c\u662f\u901a\u8fc7\u865a\u57fa\u7c7b\u8868\u8bb0\u5f55\u504f\u79fb\u91cf\u5f97\u5230\u7684\uff0c\u6211\u4e00\u5b9a\u5e0c\u671b\u504f\u79fb\u91cf\u90fd\u662f\u6b63\u6570\uff0c\u65b9\u4fbf\u8bb0\u5f55\uff0c\u6240\u4ee5\u5c31\u8981\u5c06\u865a\u57fa\u7c7b\u58f0\u660e\u5728\u6240\u6709\u7ee7\u627f\u7c7b\u7684\u540e\u9762\uff0c\u6240\u4ee5\u4e00\u5b9a\u662f\u6700\u540e\u6784\u9020\u865a\u57fa\u7c7b\u3002</p>"},{"location":"C%2B%2B/%E7%BB%A7%E6%89%BF%E5%A4%9A%E6%80%81/%E7%BB%A7%E6%89%BF/#_9","title":"\u865a\u7ee7\u627f\u6784\u9020\u51fd\u6570\u7684\u8c03\u7528","text":"<p>\u9996\u5148\u6211\u4eec\u8981\u77e5\u9053\uff0c\u6bcf\u4e2a\u865a\u57fa\u7c7b\u90fd\u53ea\u4f1a\u8c03\u7528\u4e00\u6b21\u6784\u9020\u51fd\u6570\uff0c\u56e0\u4e3aC++\u7f16\u8bd1\u7cfb\u7edf\u53ea\u6267\u884c\u6700\u540e\u7684\u6d3e\u751f\u7c7b\u5bf9\u865a\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570\u8c03\u7528\uff0c\u800c\u5ffd\u7565\u5176\u4ed6\u6d3e\u751f\u7c7b\u5bf9\u865a\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570\u8c03\u7528\u3002\u4ece\u800c\u907f\u514d\u5bf9\u57fa\u7c7b\u6570\u636e\u6210\u5458\u91cd\u590d\u521d\u59cb\u5316\u3002</p> <p>\u5e76\u4e14\u8c03\u7528\u987a\u5e8f\u670d\u4ece\u4ee5\u4e0b\u539f\u5219\uff1a</p> <ol> <li>\u865a\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570\u5728\u975e\u865a\u57fa\u7c7b\u4e4b\u524d\u8c03\u7528\u3002</li> <li>\u82e5\u540c\u4e00\u5c42\u6b21\u4e2d\u5305\u542b\u591a\u4e2a\u865a\u57fa\u7c7b\uff0c\u8fd9\u4e9b\u865a\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570\u6309\u5b83\u4eec\u58f0\u660e\u7684\u987a\u5e8f\u8c03\u7528\u3002</li> <li>\u82e5\u865a\u57fa\u7c7b\u7531\u975e\u865a\u57fa\u7c7b\u6d3e\u751f\u800c\u6765\uff0c\u5219\u4ecd\u7136\u6309\u7167\u5148\u8c03\u7528\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570\uff0c\u518d\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u6784\u9020\u51fd\u6570\u7684\u6267\u884c\u987a\u5e8f\u3002\u3000</li> </ol> <p>\u4ee5\u4e0b\u9762\u4ee3\u7801\u4e3a\u4f8b</p> <pre><code>class A\n{\npublic:\n    A()\n    {cout &lt;&lt; \"A con\\n\";}\n};\n\nclass B: virtual public A\n{\npublic:\n    B()\n    {cout &lt;&lt; \"B con\\n\";}\n};\n\nclass C: virtual public A\n{\npublic:\n    C()\n    {cout &lt;&lt; \"C con\\n\";}\n};\n\nclass D: public B,public C\n{\npublic: \n    D()\n    {cout &lt;&lt; \"D con\\n\";}\n};\n\nvoid solve()\n{\n    D d;\n}\n</code></pre> <p>\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a</p> <p>\u6790\u6784\u51fd\u6570\u7684\u8c03\u7528\u987a\u5e8f\u548c\u6784\u9020\u51fd\u6570\u7684\u8c03\u7528\u987a\u5e8f\u662f\u76f8\u53cd\u7684\u3002</p>"},{"location":"C%2B%2B/%E7%BB%A7%E6%89%BF%E5%A4%9A%E6%80%81/%E7%BB%A7%E6%89%BF/#_10","title":"\u7ec4\u5408\u548c\u7ee7\u627f","text":"<p>\u7ee7\u627f\u548c\u7ec4\u5408\u90fd\u80fd\u5b9e\u73b0\u4ee3\u7801\u7684\u590d\u7528\uff0c\u4f46\u662f\u53c8\u6709\u4e00\u4e9b\u4e0d\u540c\u3002</p> <p>1.\u7ee7\u627f\u548c\u7ec4\u5408\u65f6\u7c7b\u95f4\u7684\u903b\u8f91\u5173\u7cfb\u4e0d\u540c\uff1a</p> <ul> <li>public \u7ee7\u627f\u662f\u4e00\u79cd is-a \u7684\u5173\u7cfb\uff0c\u5373\u6bcf\u4e2a\u6d3e\u751f\u7c7b\u5bf9\u8c61\u90fd\u662f\u4e00\u4e2a\u57fa\u7c7b\u5bf9\u8c61\u3002\u3000</li> <li>\u7ec4\u5408\u662f\u4e00\u79cd has-a \u7684\u5173\u7cfb\u3002\u5373\u5f53 B \u7ec4\u5408 A \u540e\uff0c\u6bcf\u4e2a B \u7c7b\u5bf9\u8c61\u4e2d\u90fd\u5305\u542b A \u7c7b\u5bf9\u8c61\u3002</li> </ul> <p>2.\u7ee7\u627f\u548c\u7ec4\u5408\u65f6\u5bf9\u7c7b\u7684\u8bbf\u95ee\u6743\u9650\u4e0d\u540c\uff1a</p> <ul> <li>\u7ee7\u627f\u65f6\uff0c\u6d3e\u751f\u7c7b\u4e2d\u53ef\u4ee5\u8bbf\u95ee\u57fa\u7c7b\u4e2d\u7684\u4fdd\u62a4\u6210\u5458\u3002</li> <li>\u5f53 B \u7ec4\u5408 A \u540e\uff0cB\u7c7b\u53ea\u80fd\u8bbf\u95ee A \u7c7b\u4e2d\u7684\u516c\u5171\u6210\u5458\u3002</li> </ul>"},{"location":"DS/AVLTree/AVL/","title":"AVL","text":""},{"location":"DS/AVLTree/AVL/#_1","title":"\u57fa\u672c\u6982\u5ff5","text":"<p>\u5e73\u8861\u4e8c\u53c9\u641c\u7d22\u6811\uff1a\u7b80\u79f0\u5e73\u8861\u4e8c\u53c9\u6811\u3002\u7531\u524d\u82cf\u8054\u7684\u6570\u5b66\u5bb6 Adelse-Velskil \u548c Landis \u5728 1962 \u5e74\u63d0\u51fa\u7684\u9ad8\u5ea6\u5e73\u8861\u7684\u4e8c\u53c9\u6811\uff0c\u6839\u636e\u79d1\u5b66\u5bb6\u7684\u82f1\u6587\u540d\u4e5f\u79f0\u4e3a AVL \u6811\u3002</p> <p>\u6027\u8d28\uff1a</p> <ol> <li>\u5e73\u8861\u4e8c\u53c9\u6811\u53ef\u4ee5\u662f\u7a7a\u6811\u3002</li> <li>\u5982\u679c\u4e0d\u662f\u7a7a\u6811\uff0c\u4efb\u4f55\u4e00\u4e2a\u8282\u70b9\u7684\u5de6\u53f3\u5b50\u6811\u90fd\u662f\u5e73\u8861\u4e8c\u53c9\u6811\uff0c\u5e76\u4e14\u9ad8\u5ea6\u5dee\u7684\u7edd\u5bf9\u503c\u4e0d\u8d85\u8fc7 \\(1\\)\u3002</li> </ol> <p>\u4e3a\u4ec0\u4e48\u8981\u6709\u5e73\u8861\u4e8c\u53c9\u6811\uff1a\u9632\u6b62\u641c\u7d22\u4e8c\u53c9\u6811\u9000\u5316\u4e3a\u94fe\u8868\u3002</p> <p>\u5e73\u8861\u56e0\u5b50(Balance Factor)\uff0c\u5373\u5de6\u53f3\u4e24\u5b50\u6811\u7684\u9ad8\u5ea6\u5dee\uff1a</p> \\[ BF=h_{left}-h_{right} \\] <p>\u5e73\u8861\u4e8c\u53c9\u6811\u7684\u4efb\u4f55\u4e00\u8282\u70b9\u7684\u5e73\u8861\u56e0\u5b50\u53ea\u6709\u4e09\u4e2a\u53d6\u503c:\\(0,1,-1\\)\uff0c\u5982\u679c\u7edd\u5bf9\u503c\u5927\u4e8e\\(1\\)\uff0c\u8bf4\u660e\u8be5\u6811\u5931\u8861\uff0c\u5c31\u9700\u8981\u8fdb\u884c\u8c03\u6574\u3002</p>"},{"location":"DS/AVLTree/AVL/#_2","title":"\u5b9e\u73b0","text":""},{"location":"DS/AVLTree/AVL/#_3","title":"\u8282\u70b9\u7ed3\u6784","text":"<pre><code>struct treenode\n{\n    int _val;//\u952e\u503c\n    treenode* _parent;//\u7236\u8282\u70b9\n    treenode* _l, * _r;//\u5de6\u53f3\u5b50\u6811\u8282\u70b9\n    int _deepth;//\u6811\u9ad8\u5ea6\n    treenode(int val = 0) :_val(val), _deepth(1),_l(nullptr),_r(nullptr),_parent(nullptr) {}\n}; \n</code></pre>"},{"location":"DS/AVLTree/AVL/#_4","title":"\u57fa\u672c\u63a5\u53e3","text":"<pre><code>class AVLTree\n{\n    treenode* _root;//\u6839\u8282\u70b9\n    void _insert(treenode*&amp; , int );//\u63d2\u5165\n    treenode* _erase(treenode* , int);//\u5220\u9664\n    treenode* get_lmax(treenode* );//\u83b7\u53d6\u5de6\u5b50\u6811\u4e2d\u7684\u6700\u5927\u503c\n    treenode* LL_roate(treenode*);//\u5de6\u65cb\n    treenode* RR_roate(treenode*);//\u53f3\u65cb\n    treenode* LR_roate(treenode*);//\u5de6\u53f3\u65cb\n    treenode* RL_roate(treenode*);//\u53f3\u5de6\u65cb\n    treenode* _find(treenode* , int );//\u67e5\u627e\n    void _print(treenode* );//\u6253\u5370\u6811\u8282\u70b9\n\n    void updata_deepth(treenode* root) { //\u66f4\u65b0\u6811\u9ad8\u5ea6\n    root ? root-&gt;_deepth = max(get_deepth(root-&gt;_l),get_deepth(root-&gt;_r)) + 1 : 0; \n    }\n\n    int get_deepth(treenode* root){//\u83b7\u53d6\u6811\u9ad8\u5ea6\n    return root ? root-&gt;_deepth : 0; \n    }\n\n    int get_balance_factor(treenode* root) { //\u83b7\u53d6\u5e73\u8861\u56e0\u5b50\n    return root ? get_deepth(root-&gt;_l) - get_deepth(root-&gt;_r) : 0; \n    }\n\npublic:\n    void insert(int data);//\u63d2\u5165\n    void erase(int data);//\u5220\u9664\n    treenode* find(int data);//\u67e5\u627e\n    void print() { _print(_root); }//\u6253\u5370\n};\n</code></pre>"},{"location":"DS/AVLTree/AVL/#_5","title":"\u5931\u8861\u8c03\u6574","text":"<p>\u8981\u8c03\u6574\u5931\u8861\u7684 AVL \u6811\uff0c\u5c31\u8981\u627e\u5230\u6700\u5c0f\u4e0d\u5e73\u8861\u5b50\u6811\uff0c\u901a\u8fc7\u8c03\u6574\u4e0d\u5e73\u8861\u5b50\u6811\uff0c\u6765\u8c03\u6574\u5931\u8861\u7684AVL\u6811\u3002\u6700\u5c0f\u4e0d\u5e73\u8861\u5b50\u6811\u5c31\u662f\u9ad8\u5ea6\u6700\u5c0f\u7684\u5931\u8861\u6811\uff0c\u4ece\u63d2\u5165\u70b9\u5f00\u59cb\u5411\u4e0a\u9012\u5f52\uff0c\u7b2c\u4e00\u4e2a\u5e73\u8861\u56e0\u5b50\u7edd\u5bf9\u503c\u5927\u4e8e \\(1\\) \u7684\u8282\u70b9\u3002</p>"},{"location":"DS/AVLTree/AVL/#_6","title":"\u8c03\u6574\u65b9\u6cd5","text":"<p>\u901a\u8fc7\u65cb\u8f6c\u8c03\u6574\u4e0d\u5e73\u8861\u5b50\u6811\uff0c\u65cb\u8f6c\u7684\u7c7b\u578b\u6709\u56db\u79cd\u60c5\u51b5\uff1a \\(LL\uff0cLR\uff0cRR\uff0cRL\\)\uff0c\u5206\u522b\u5bf9\u5e94\u5931\u8861\u7684\u56db\u79cd\u60c5\u51b5\u3002</p> <ol> <li> <p>\u5de6\u5b50\u6811\u6df1\u5ea6\u9ad8\u4e8e\u53f3\u5b50\u6811\\((max \\left \\{ h_1,h_2\\right \\}-2=max\\left \\{ h_3,h_4\\right \\},\u5373\u5e73\u8861\u56e0\u5b50\u7b49\u4e8e2)\\) </p> <ul> <li>\u5de6\u5b50\u6811\u7684\u5de6\u5b50\u6811\u6df1\u5ea6\u9ad8\u4e8e\u5de6\u5b50\u6811\u7684\u53f3\u5b50\u6811\u6df1\u5ea6\\((h_1&gt;h_2,\u5de6\u5b50\u6811\u5e73\u8861\u56e0\u5b50\u4e3a1,RR)\\)</li> <li>\u5de6\u5b50\u6811\u7684\u53f3\u5b50\u6811\u6df1\u5ea6\u9ad8\u4e8e\u5de6\u5b50\u6811\u7684\u5de6\u5b50\u6811\u6df1\u5ea6\\((h_2&gt;h_1,\u5de6\u5b50\u6811\u5e73\u8861\u56e0\u5b50\u4e3a-1,LR)\\)</li> </ul> </li> <li> <p>\u53f3\u5b50\u6811\u6df1\u5ea6\u9ad8\u4e8e\u5de6\u5b50\u6811\\((max \\left \\{ h_3,h_4\\right \\}-2=max\\left \\{ h_1,h_2\\right \\},\u5373\u5e73\u8861\u56e0\u5b50\u7b49\u4e8e-2)\\)</p> <ul> <li>\u53f3\u5b50\u6811\u7684\u53f3\u5b50\u6811\u6df1\u5ea6\u9ad8\u4e8e\u53f3\u5b50\u6811\u7684\u5de6\u5b50\u6811\u6df1\u5ea6\\((h_4&gt;h_3,\u53f3\u5b50\u6811\u5e73\u8861\u56e0\u5b50\u4e3a-1,LL)\\)</li> <li>\u53f3\u5b50\u6811\u7684\u5de6\u5b50\u6811\u6df1\u5ea6\u9ad8\u4e8e\u53f3\u5b50\u6811\u7684\u53f3\u5b50\u6811\u6df1\u5ea6\\((h_3&gt;h_4,\u53f3\u5b50\u6811\u5e73\u8861\u56e0\u5b50\u4e3a1,RL)\\)</li> </ul> </li> </ol> <p>\u65cb\u8f6c\u7684\u76ee\u7684\u5c31\u662f\u51cf\u5c11\u9ad8\u5ea6\uff0c\u901a\u8fc7\u964d\u4f4e\u6574\u68f5\u6811\u7684\u9ad8\u5ea6\u6765\u5e73\u8861\u3002\u54ea\u8fb9\u7684\u6811\u9ad8\uff0c\u5c31\u628a\u90a3\u8fb9\u7684\u6811\u5411\u4e0a\u65cb\u8f6c\u3002</p>"},{"location":"DS/AVLTree/AVL/#ll","title":"\u5de6\u65cb (LL)","text":"<ul> <li>\u8ba9\u5176\u53f3\u5b50\u6811\u4ee3\u66ff\u8be5\u8282\u70b9</li> <li>\u5e76\u5c06\u5176\u53f3\u5b50\u6811\u7684\u5de6\u5b50\u6811(\u5982\u679c\u6709\u7684\u8bdd)\u4ee3\u66ff\u5176\u53f3\u5b50\u6811</li> <li>\u8ba9\u8be5\u8282\u70b9\u6210\u4e3a\u53f3\u5b50\u6811\u7684\u5de6\u5b50\u6811</li> </ul> <p>\u5c31\u662f\u8ba9\u53f3\u513f\u5b50\u5f53\u7239\u3002\u8fd9\u6837\u64cd\u4f5c\u903b\u8f91\u4e0a\u76f8\u5f53\u4e8e\u8ba9\u6574\u68f5\u6811\u5411\u5de6\u65cb\u8f6c\u4e86\u3002 \u4ee3\u7801\u5b9e\u73b0\u65f6\uff0c\u6ce8\u610f\u8981\u5c06\u7236\u8282\u70b9(\u5982\u679c\u6709\u7684\u8bdd)\u7684\u5b50\u6811(\u5de6\u5b50\u6811\u6216\u53f3\u5b50\u6811\uff0c\u8981\u5224\u65ad\u4e00\u4e0b)\u6539\u4e3a\u8be5\u8282\u70b9\u7684\u53f3\u5b50\u6811(\u53f3\u65cb\u4e5f\u540c\u7406)\u3002</p> <p>\u4ee3\u7801\u5b9e\u73b0</p> <pre><code>inline treenode* AVLTree::LL_roate(treenode* root)\n{\n    treenode* s = root-&gt;_r;//\u8bb0\u5f55\u53f3\u5b50\u6811\n\n    //\u8c03\u6574\u7236\u8282\u70b9\n    s-&gt;_parent = root-&gt;_parent;//\u6539\u53d8\u53f3\u5b50\u6811\u7684\u7236\u8282\u70b9\n    if (root-&gt;_parent)    //\u5982\u679c\u8be5\u8282\u70b9\u6709\u7236\u8282\u70b9\n    {\n        if (root-&gt;_parent-&gt;_l == root)//\u5224\u65ad\u8be5\u8282\u70b9\u662f\u7236\u8282\u70b9\u7684\u5de6\u5b50\u6811\u8fd8\u662f\u53f3\u5b50\u6811\n            root-&gt;_parent-&gt;_l = s;//\u5c06\u7236\u8282\u70b9\u7684\u5b50\u6811\u6539\u4e3a\u8be5\u8282\u70b9\u7684\u53f3\u5b50\u6811\n        else\n            root-&gt;_parent-&gt;_r = s;\n    }\n    root-&gt;_parent = s;//\u5c06\u8be5\u8282\u70b9\u7684\u7236\u8282\u70b9\u6539\u4e3a\u53f3\u5b50\u6811\uff0c\u8fd9\u4e2a\u4e00\u5b9a\u8981\u6700\u540e\u8c03\u6574\n\n    //\u8c03\u6574\u5b50\u6811\n    if (s-&gt;_l)//\u5982\u679c\u53f3\u5b50\u6811\u548c\u6709\u5de6\u5b50\u6811\n        s-&gt;_l-&gt;_parent = root;//\u5c31\u5c06\u53f3\u5b50\u6811\u7684\u5de6\u5b50\u6811\u7236\u8282\u70b9\u6539\u4e3a\u8be5\u8282\u70b9\n    root-&gt;_r = s-&gt;_l;//\u5c06\u53f3\u5b50\u6811\u7684\u5de6\u5b50\u6811\u7ed9\u8be5\u8282\u70b9\u7684\u53f3\u5b50\u6811\n    s-&gt;_l = root;//\u5c06\u53f3\u5b50\u6811\u7684\u5de6\u5b50\u6811\u6539\u4e3a\u8be5\u8282\u70b9\n\n    //\u8ddf\u66f4\u65b0\u6811\u9ad8\u5ea6\n    updata_deepth(root);//\u5fc5\u987b\u5148\u66f4\u65b0\u8be5\u8282\u70b9\n    updata_deepth(s);\n\n    return s;//\u8fd4\u56de\u8be5\u6811\u7684\u65b0\u7684\u6839\u8282\u70b9\n}\n</code></pre>"},{"location":"DS/AVLTree/AVL/#rr","title":"\u53f3\u65cb (RR)","text":"<p>  - \u8ba9\u5176\u5de6\u5b50\u6811\u4ee3\u66ff\u8be5\u8282\u70b9  - \u5e76\u5c06\u5176\u5de6\u5b50\u6811\u7684\u53f3\u5b50\u6811(\u5982\u679c\u6709\u7684\u8bdd)\u4ee3\u66ff\u5176\u5de6\u5b50\u6811  - \u8ba9\u8be5\u8282\u70b9\u6210\u4e3a\u5de6\u5b50\u6811\u7684\u53f3\u5b50\u6811</p> <p>\u5c31\u662f\u8ba9\u5de6\u513f\u5b50\u5f53\u7239\u3002\u8fd9\u6837\u7684\u64cd\u4f5c\u5728\u903b\u8f91\u4e0a\u76f8\u5f53\u4e8e\u5c06\u6574\u68f5\u6811\u5411\u53f3\u65cb\u8f6c\u4e86\u3002</p> <pre><code>inline treenode* AVLTree::RR_roate(treenode* root)\n{\n    treenode* s = root-&gt;_l;//\u8bb0\u5f55\u5de6\u5b50\u6811\n\n    //\u8c03\u6574\u7236\u8282\u70b9\n    s-&gt;_parent = root-&gt;_parent;//\u6539\u53d8\u5de6\u5b50\u6811\u7684\u7236\u8282\u70b9\n    if (root-&gt;_parent)//\u5982\u679c\u8be5\u8282\u70b9\u6709\u7236\u8282\u70b9\n    {\n        if (root-&gt;_parent-&gt;_l == root)//\u5224\u65ad\u8be5\u8282\u70b9\u662f\u7236\u8282\u70b9\u7684\u5de6\u5b50\u6811\u8fd8\u662f\u53f3\u5b50\u6811\n            root-&gt;_parent-&gt;_l = s;//\u5c06\u7236\u8282\u70b9\u7684\u5b50\u6811\u6539\u4e3a\u8be5\u8282\u70b9\u7684\u5de6\u5b50\u6811\n        else\n            root-&gt;_parent-&gt;_r = s;\n    }\n    root-&gt;_parent = s;//\u5c06\u8be5\u8282\u70b9\u7684\u7236\u8282\u70b9\u6539\u4e3a\u5de6\u5b50\u6811\n\n    //\u8c03\u6574\u5b50\u6811\n    if (s-&gt;_r)//\u5982\u679c\u5de6\u5b50\u6811\u6709\u53f3\u5b50\u6811\n        s-&gt;_r-&gt;_parent = root;//\u5c31\u5c06\u5de6\u5b50\u6811\u7684\u53f3\u5b50\u6811\u7684\u7236\u8282\u70b9\u6539\u4e3a\u8be5\u8282\u70b9\n    root-&gt;_l = s-&gt;_r;//\u5c06\u8be5\u8282\u70b9\u7684\u5de6\u5b50\u6811\u6539\u4e3a\u5de6\u5b50\u6811\u7684\u53f3\u5b50\u6811\n    s-&gt;_r = root;//\u5c06\u5de6\u5b50\u6811\u7684\u53f3\u5b50\u6811\u6539\u4e3a\u8be5\u8282\u70b9\n\n    //\u66f4\u65b0\u6811\u9ad8\u5ea6\n    updata_deepth(root);\n    updata_deepth(s);\n\n    return s;//\u8fd4\u56de\u8be5\u6811\u65b0\u7684\u6839\u8282\u70b9\n}\n</code></pre>"},{"location":"DS/AVLTree/AVL/#lr","title":"\u5de6\u53f3\u65cb (LR)","text":"<p>\u5f53\u5931\u8861\u662f\u7531\u4e8e\u5de6\u5b50\u6811\u7684\u53f3\u5b50\u6811\u5f15\u8d77\u65f6\uff0c\u5355\u7eaf\u7684\u53f3\u65cb\u4e0d\u80fd\u89e3\u51b3\u95ee\u9898\u3002\u5982\u4e0b\u56fe </p> <p>\u5982\u679c\u76f4\u63a5\u8fdb\u884c\u53f3\u65cb\uff0c\u7ed3\u679c\u5982\u4e0b,\u5e76\u6ca1\u6709\u4f7f\u4e8c\u53c9\u6811\u56de\u590d\u5e73\u8861\u3002 </p> <p>\u8fd9\u65f6\uff0c\u6211\u5c31\u5c31\u8981\u5148\u5bf9\u5de6\u5b50\u6811\u8fdb\u884c\u5de6\u65cb\u64cd\u4f5c\uff0c\u8ba9\u5de6\u5b50\u6811\u7684\u5de6\u5b50\u6811\u53d8\u4e3a\u5f15\u8d77\u5931\u8861\u7684\u5b50\u6811\uff0c\u518d\u8fdb\u884c\u53f3\u65cb\uff0c\u5c31\u53ef\u4ee5\u5c06\u4e8c\u53c9\u6811\u6062\u590d\u5e73\u8861\u3002 </p> <p>\u4ee3\u7801\u5b9e\u73b0</p> <pre><code>inline treenode* AVLTree::LR_roate(treenode* root)\n{\n    LL_roate(root-&gt;_l);//\u5de6\u65cb\u5de6\u5b50\u6811\n    return RR_roate(root);//\n}\n</code></pre>"},{"location":"DS/AVLTree/AVL/#rl","title":"\u53f3\u5de6\u65cb (RL)","text":"<p>\u4e8e\u5de6\u53f3\u65cb\u540c\u7406\uff0c\u5c31\u4e0d\u8fc7\u591a\u8d58\u8ff0\uff0c\u76f4\u63a5\u7ed9\u51fa\u4ee3\u7801\u3002</p> <pre><code>inline treenode* AVLTree::RL_roate(treenode* root)\n{\n    RR_roate(root-&gt;_r);\n    return LL_roate(root);\n}\n</code></pre>"},{"location":"DS/AVLTree/AVL/#_7","title":"\u529f\u80fd\u5b9e\u73b0","text":""},{"location":"DS/AVLTree/AVL/#_8","title":"\u63d2\u5165","text":"<p>\u63d2\u5165\u540c\u641c\u7d22\u4e8c\u53c9\u6811\u57fa\u672c\u76f8\u540c\uff0c\u4f46\u662f\u5728\u6bcf\u6b21\u63d2\u5165\u4e4b\u540e\u8981\u66f4\u65b0\u6811\u7684\u9ad8\u5ea6\uff0c\u5e76\u4e14\u68c0\u67e5\u6811\u662f\u5426\u5931\u8861\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5728\u9012\u5f52\u56de\u9000\u65f6\u627e\u5230\u6700\u5c0f\u4e0d\u5e73\u8861\u5b50\u6811\uff0c\u5e76\u4e14\u65cb\u8f6c\u8c03\u6574\u4ed6\u3002</p> <p>\u4ee3\u7801\u5b9e\u73b0 <pre><code>inline void AVLTree::insert(int data)\n{\n    if (!_root)//\u4e3a\u7a7a\u6811\u65f6\uff0c\u76f4\u63a5\u8d4b\u503c\u6539\u53d8\u6839\u8282\u70b9\n    {\n        _root = new treenode(data);\n        return;\n    }\n    _insert(_root, data);//\u4e0d\u4e3a\u7a7a\u5c31\u63d2\u5165\n}\ninline void AVLTree::_insert(treenode*&amp; root, int data)\n{\n    //\u63d2\u5165\n    //\u6309\u7167\u4e8c\u53c9\u641c\u7d22\u6811\u8fdb\u884c\u63d2\u5165\n    if (root-&gt;_val &lt; data)\n    {\n        if (root-&gt;_r)\n            _insert(root-&gt;_r, data);\n        else\n        {\n            root-&gt;_r = new treenode(data);\n            root-&gt;_r-&gt;_parent = root;\n        }\n    }\n    else\n    {\n        if (root-&gt;_l)\n            _insert(root-&gt;_l, data);\n        else\n        {\n            root-&gt;_l = new treenode(data);\n            root-&gt;_l-&gt;_parent = root;\n        }\n    }\n    //\u66f4\u65b0\u6df1\u5ea6\n    updata_deepth(root);\n    //\u5224\u65ad\u662f\u5426\u5931\u8861\n    if (get_balance_factor(root) == -2)\n    {\n        //LL\u578b\uff0c\u5de6\u65cb\u4e00\u6b21\n        //\u53f3\u5b50\u6811\u7684\u53f3\u5b50\u6811\u63d2\u5165\u5bfc\u81f4\u5931\u8861\n        if (get_balance_factor(root-&gt;_r) == -1)\n            root = LL_roate(root);\n        //RL\u578b,\u5148\u8ba9\u53f3\u5b50\u6811\u53f3\u65cb\u518d\u8ba9\u6839\u8282\u70b9\u5de6\u65cb\n        //\u53f3\u5b50\u6811\u7684\u5de6\u5b50\u6811\u63d2\u5165\u5bfc\u81f4\u5931\u8861\n        else if (get_balance_factor(root-&gt;_r) == 1)\n            root = RL_roate(root);\n    }\n    else if (get_balance_factor(root) == 2)\n    {\n        //RR\u578b\uff0c\u53f3\u65cb\u4e00\u6b21\n        //\u5de6\u5b50\u6811\u7684\u5de6\u5b50\u6811\u63d2\u5165\u5bfc\u81f4\u5931\u8861\n        if (get_balance_factor(root-&gt;_l) == 1)\n            root = RR_roate(root);\n        //LR\u578b\uff0c\u5148\u8ba9\u5de6\u5b50\u6811\u5de6\u65cb\u518d\u8ba9\u6839\u8282\u70b9\u53f3\u65cb\n        //\u5de6\u5b50\u6811\u7684\u53f3\u5b50\u6811\u5bfc\u81f4\u5931\u8861\n        else if (get_balance_factor(root-&gt;_l) == -1)\n            root = LR_roate(root);\n    }\n}\n</code></pre></p>"},{"location":"DS/AVLTree/AVL/#_9","title":"\u5220\u9664","text":"<p>\u5bf9\u4e8e\u5220\u9664\uff0c\u9700\u8981\u8003\u8651\u4e09\u79cd\u60c5\u51b5: 1. \u5220\u9664\u8282\u70b9\u4e3a\u53f6\u5b50\u8282\u70b9\uff1a\u76f4\u63a5\u5c06\u5220\u9664\u5373\u53ef 2. \u5220\u9664\u8282\u70b9\u6709\u4e00\u4e2a\u5b50\u6811\uff1a\u5c06\u8be5\u8282\u70b9\u5b50\u6811\u66ff\u4ee3\u8be5\u8282\u70b9\u7684\u4f4d\u7f6e 3. \u5220\u9664\u8282\u70b9\u6709\u4e24\u4e2a\u5b50\u6811\uff1a\u7528\u4e2d\u5e8f\u904d\u5386\u7684\u524d\u9a71\u6216\u540e\u7ee7\u4ee3\u66ff\u8be5\u8282\u70b9\u4f4d\u7f6e\uff0c\u7528\u9012\u5f52\u5c06\u8be5\u79cd\u60c5\u51b5\u8f6c\u5316\u4e3a\u524d\u4e24\u79cd\u60c5\u51b5(\u7ec6\u8282\u89c1\u4ee3\u7801)</p>"},{"location":"DS/AVLTree/AVL/#_10","title":"\u524d\u9a71\u548c\u540e\u7ee7","text":"<p>\u5220\u9664\u6709\u4e24\u4e2a\u5b50\u6811\u7684\u8282\u70b9\u65f6\uff0c\u8ba9\u5de6\u5b50\u6811\u7684\u6700\u5927\u503c(\u524d\u9a71)\u6216\u662f\u53f3\u5b50\u6811\u7684\u6700\u5c0f\u503c(\u540e\u7ee7)\u66ff\u4ee3\u8be5\u8282\u70b9\u4f4d\u7f6e\uff0c\u4f9d\u7136\u6ee1\u8db3\u641c\u7d22\u4e8c\u53c9\u6811\u3002 \u5b9e\u73b0\u65f6\uff0c\u5c06\u8be5\u8282\u70b9\u7684\u503c\u76f4\u63a5\u6539\u4e3a\u524d\u9a71(\u540e\u7ee7)\uff0c\u7136\u540e\u8981\u5220\u9664\u8282\u70b9\u5c31\u53d8\u4e3a\u524d\u9a71(\u540e\u7ee7)\uff0c\u518d\u9012\u5f52\u627e\u5230\u524d\u9a71(\u540e\u7ee7)\uff0c\u6700\u540e\u90fd\u4f1a\u8f6c\u5316\u6210\u524d\u4e24\u79cd\u60c5\u51b5\u3002</p> <p>\u5bfb\u627e\u524d\u9a71\u4ee3\u7801\u7684\u5b9e\u73b0(\u540e\u7ee7\u7c7b\u4f3c)</p> <pre><code>inline treenode* AVLTree::get_lmax(treenode* lroot)\n{\n    while (lroot-&gt;_r)\n        lroot = lroot-&gt;_r;\n    return lroot;\n}\n</code></pre> <p>\u4ee3\u7801\u5b9e\u73b0 <pre><code>inline void AVLTree::erase(int data)\n{\n    if (!_root)//\u7a7a\u6811\u4e0d\u80fd\u8fdb\u884c\u5220\u9664\n        return;\n    _root = _erase(_root, data);\n}\ninline treenode* AVLTree::_erase(treenode* root, int data)\n{\n    //1.\u5220\u9664\u8282\u70b9\n    if (root-&gt;_val &lt; data)\n        if (root-&gt;_r)\n            _erase(root-&gt;_r, data);\n        else if (root-&gt;_val &gt; data)\n            if (root-&gt;_l)\n                _erase(root-&gt;_l, data);\n            else\n            {\n                //\u5220\u9664\u6709\u4e09\u79cd\u60c5\u51b5\n                //1.\u5220\u9664\u8282\u70b9\u4e3a\u53f6\u5b50\u8282\u70b9 \n                //\u76f4\u63a5\u5220\u9664\n                if (!root-&gt;_l &amp;&amp; !root-&gt;_r)\n                {\n                    if (root-&gt;_parent)\n                    {\n                        if (root-&gt;_parent-&gt;_l == root)\n                            root-&gt;_parent-&gt;_l = nullptr;\n                        else\n                            root-&gt;_parent-&gt;_r = nullptr;\n                    }\n                    delete root;\n                    root = nullptr;\n                }\n                //2.\u5220\u9664\u8282\u70b9\u6709\u4e00\u4e2a\u5b50\u6811\n                //\u5c06\u8be5\u5b50\u6811\u4ee3\u66ff\u6389\u5220\u9664\u8282\u70b9\u7684\u4f4d\u7f6e\n                else if (!root-&gt;_l || !root-&gt;_r)\n                {\n                    if (root-&gt;_parent)\n                    {\n                        if (root-&gt;_parent-&gt;_l == root)\n                            root-&gt;_parent-&gt;_l = root-&gt;_l ? root-&gt;_l : root-&gt;_r;\n                        else\n                            root-&gt;_parent-&gt;_r = root-&gt;_l ? root-&gt;_l : root-&gt;_r;\n                    }\n                    treenode* s = root-&gt;_l ? root-&gt;_l : root-&gt;_r;\n                    s-&gt;_parent = root-&gt;_parent;\n                    delete root;\n                    root = s;\n                }\n                // 3.\u5220\u9664\u8282\u70b9\u6709\u4e24\u4e2a\u5b50\u6811\n                //\u7528\u4e2d\u5e8f\u904d\u5386\u7684\u524d\u9a71\u6216\u540e\u7ee7\u4ee3\u66ff\u8be5\u8282\u70b9\n                else\n                {\n                    treenode* lmax = get_lmax(root-&gt;_l);\n                    root-&gt;_val = lmax-&gt;_val;\n                    _erase(root-&gt;_l, lmax-&gt;_val);\n                }\n            }\n    //2.\u8c03\u6574\u9ad8\u5ea6\n    updata_deepth(root);\n    //3.\u8c03\u6574\u6700\u5c0f\u4e0d\u5e73\u8861\u5b50\u6811\n    if (get_balance_factor(root) == 2)\n    {\n        if (get_balance_factor(root-&gt;_l) == 1)\n            root = RR_roate(root);\n        else\n            root = LR_roate(root);\n    }\n    else if (get_balance_factor(root) == -2)\n    {\n        if (get_balance_factor(root) == -1)\n            root = LL_roate(root);\n        else\n            root = RL_roate(root);\n    }\n    return root;\n}\n</code></pre></p>"},{"location":"DS/AVLTree/AVL/#_11","title":"\u67e5\u627e","text":"<p>\u5f88\u7b80\u5355\uff0c\u8fd9\u91cc\u53ea\u7ed9\u51fa\u4ee3\u7801 <pre><code>inline treenode* AVLTree::find(int data)\n{\n    if (!_root)\n        return nullptr;\n    return _find(_root, data);\n}\ninline treenode* AVLTree::_find(treenode* root, int data)\n{\n    if (!root)\n        return nullptr;\n    if (data &lt; root-&gt;_val)\n        return _find(root-&gt;_l, data);\n    else if (data &gt; root-&gt;_val)\n        return _find(root-&gt;_r, data);\n    else\n        return root;\n}\n</code></pre></p>"},{"location":"DS/AVLTree/AVL/#_12","title":"\u603b\u7ed3","text":"<p>\u5e73\u8861\u4e8c\u53c9\u6811\u65cb\u8f6c\u65f6\uff0c\u4ea4\u6362\u7684\u53d8\u91cf\u5f88\u591a\uff0c\u8981\u65f6\u523b\u8bb0\u7740\u54ea\u4e9b\u53d8\u91cf\u5df2\u7ecf\u4ea4\u6362\uff0c\u54ea\u4e9b\u8fd8\u6ca1\u6709\uff0c\u5b9e\u73b0\u65f6\u8981\u4ed4\u7ec6\u4e0d\u7136\u5f88\u5bb9\u6613\u51fa\u73b0\u95ee\u9898\u3002</p>"},{"location":"DS/BIT/2_BIT/","title":"\u4e8c\u7ef4\u6811\u72b6\u6570\u7ec4","text":"<p>\u4e8c\u7ef4\u6811\u72b6\u6570\u7ec4\uff0c\u4e5f\u88ab\u79f0\u4f5c\u6811\u72b6\u6570\u7ec4\u5957\u6811\u72b6\u6570\u7ec4\uff0c\u7528\u6765\u7ef4\u62a4\u4e8c\u7ef4\u6570\u7ec4\u4e0a\u7684\u5355\u70b9\u4fee\u6539\u548c\u524d\u7f00\u4fe1\u606f\u95ee\u9898\u3002\u5176\u5b9e\u5c31\u662f\u4e00\u7ef4\u6811\u72b6\u6570\u7ec4\u4e0a\u7684\u6bcf\u4e2a\u8282\u70b9\u53d8\u6210\u4e86\u4e00\u4e2a\u4e00\u7ef4\u6811\u72b6\u6570\u7ec4\uff1a</p> <p>\u4e8c\u7ef4\u6811\u72b6\u6570\u7ec4\u53ef\u4ee5\u5b9e\u73b0\u5355\u70b9\u4fee\u6539\uff0c\u5b50\u77e9\u9635\u67e5\u8be2\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u7ef4\u62a4\u591a\u4e2a\u5dee\u5206\u6570\u7ec4\u6765\u5b9e\u73b0\u5b50\u77e9\u9635\u7684\u4fee\u6539\u548c\u67e5\u8be2\u3002</p>"},{"location":"DS/BIT/2_BIT/#_1","title":"\u5355\u70b9\u4fee\u6539","text":"<p>\u4fee\u6539\u4e00\u4e2a\u77e9\u9635\u7684\u503c\u540e\uff0c\u6211\u4eec\u8981\u5c06\u5176\u7236\u8282\u70b9\u90fd\u4fee\u6539\uff0c\u4f8b\u5982\u6211\u4eec\u8981\u4fee\u6539\u4e0a\u56fe\u7684 \\(f[2][2]\\) \u5143\u7d20\uff0c\u90a3\u4e48\u6211\u4eec\u540c\u65f6\u4e5f\u8981\u4fee\u6539 \\(f[2][5]\u3001f[5][2]\u3001f[5][5]\\) \uff0c\u8fd9\u4e9b\u8282\u70b9\uff0c\u5b9e\u73b0\u5982\u4e0b\uff1a</p> <pre><code>void update(int x, int y, int d)\n{\n    for (int i = x; i &lt;= n; i += lowbit(i))\n        for (int j = y; j &lt;= m; j += lowbit(j))\n            f[i][j] += d;\n}\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(\\log n\\log m)\\)</p>"},{"location":"DS/BIT/2_BIT/#_2","title":"\u5b50\u77e9\u9635\u67e5\u8be2","text":"<p>\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u6c42 \\(\\sum_{i=1}^{n}\\sum_{j=1}^{m}a[i][j]\\) \u7684\u503c\uff0c\u8981\u6211\u4eec\u8ba1\u7b97\u4e0b\u56fe\u4e2d\u9ed1\u8272\u77e9\u9635\u7684\u503c</p> <p>\u5f88\u660e\u663e\uff0c\u8ba1\u7b97\u9ed1\u8272\u77e9\u9635\u7684\u9762\u79ef\u6709\u4e0b\u9762\u7684\u516c\u5f0f\uff1a</p> \\[ \\sum_{i=x_2}^{x_1}\\sum_{j=y_2}^{y_1}a[i][j]=\\sum_{i=1}^{x_1}\\sum_{j=1}^{y_1}a[i][j]-\\sum_{i=1}^{x_2-1}\\sum_{j=1}^{y_1}a[i][j]-\\sum_{i=1}^{x_1}\\sum_{j=1}^{y_2-1}a[i][j]+\\sum_{i=1}^{x_2}\\sum_{j=1}^{y_2}a[i][j] \\] <p>\u6709\u4e86\u516c\u5f0f\u4ee3\u7801\u4e5f\u5c31\u5f88\u5bb9\u6613\u5199\u4e86\uff1a</p> <pre><code>int ask(int x, int y)\n{\n    int sum = 0;\n    for (int i = x; i &gt; 0; i -= lowbit(i))\n        for (int j = y; j &gt; 0; j -= lowbit(j))\n            sum += f[i][j];\n    return sum;\n}\nint ask(int x1, int y1, int x2, int y2)\n{\n    return ask(x1, y1) - ask(x1, y2 - 1) - ask(x2 - 1, y1) + ask(x2, y2);\n}\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(\\log n\\log m)\\)</p>"},{"location":"DS/BIT/2_BIT/#_3","title":"\u4e8c\u7ef4\u6811\u72b6\u6570\u7ec4\u8fdb\u9636","text":"<p>\u4e0a\u5e1d\u9020\u9898\u7684\u4e03\u5206\u949f \u8be5\u9898\u8981\u6211\u4eec\u5b9e\u73b0\u4e8c\u7ef4\u6811\u72b6\u6570\u7ec4\u7684\u5b50\u77e9\u9635\u4fee\u6539\u548c\u5b50\u77e9\u9635\u67e5\u8be2</p>"},{"location":"DS/BIT/2_BIT/#_4","title":"\u5b50\u77e9\u9635\u4fee\u6539","text":"<p>\u548c\u4e00\u7ef4\u7c7b\u4f3c\u7684\uff0c\u8fd9\u91cc\u4e5f\u8981\u7528\u5230\u5dee\u5206\u7684\u601d\u60f3\uff0c\u4f7f\u7528\u4e8c\u7ef4\u5dee\u5206\uff0c\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u4e8c\u7ef4\u5dee\u5206\u6570\u7ec4 \\(d[i][j]\\)\uff0c\u5b83\u4e0e\u539f\u77e9\u9635\u5143\u7d20 \\(a[i][j]\\) \u7684\u5173\u7cfb\u5982\u4e0b\uff1a</p> \\[ d[i][j]=a[i][j]-a[i][j-1]-a[i-1][j]+a[i-1][j-1]\\\\ \\] \\[ a[x][y]=\\sum_{i=1}^{x}\\sum_{j=1}^{y}d[i][j] \\] <p>\u73b0\u5728\uff0c\u5047\u8bbe\u6211\u4eec\u8981\u5728\u9876\u70b9\u4e3a \\((a,b)\u3001(c,d)\\) \u7684\u77e9\u9635\u5185\u7684\u6bcf\u4e2a\u5143\u7d20\u52a0\u4e0a \\(k\\) \uff0c\u5982\u4e0b\u56fe</p> <p>\u56e0\u4e3a\u6211\u4eec\u7ef4\u62a4\u7684\u662f\u5dee\u5206\u6570\u7ec4\uff0c\u6240\u4ee5\u6211\u5206\u522b\u4fee\u6539\u56db\u4e2a\u9876\u70b9\u5373\u53ef\u5b8c\u6210\u5bf9\u533a\u95f4\u7684\u4fee\u6539\uff0c\u5b9e\u73b0\u5982\u4e0b\uff1a</p> <pre><code>void update(int x, int y, int d)\n{\n    for (int i = x; i &lt;= n; i += lowbit(i))\n        for (int j = y; j &lt;= m; j += lowbit(j))\n            f[i][j] += d;\n}\nvoid update(int x1, int y1, int x2, int y2, int k)\n{\n    update(x1, y1, k), update(x1, y2 + 1, -k),\n        update(x2 + 1, y1, -k), update(x2 + 1, y2 + 1, k);\n}\n</code></pre>"},{"location":"DS/BIT/2_BIT/#_5","title":"\u5b50\u77e9\u9635\u67e5\u8be2","text":"<p>\u4e0e\u4e00\u7ef4\u6570\u7ec4\u7c7b\u4f3c\u7684\uff0c\u6211\u4eec\u6c42\u4e00\u4e2a\u5b50\u77e9\u9635\u7684\u548c\u6709\u4e0b\u9762\u7684\u5f0f\u5b50\uff1a</p> \\[ \\sum_{i=x_2}^{x_1}\\sum_{j=y_2}^{y_1}a[i][j]=\\sum_{i=1}^{x_1}\\sum_{j=1}^{y_1}a[i][j]-\\sum_{i=1}^{x_2-1}\\sum_{j=1}^{y_1}a[i][j]-\\sum_{i=1}^{x_1}\\sum_{j=1}^{y_2-1}a[i][j]+\\sum_{i=1}^{x_2}\\sum_{j=1}^{y_2}a[i][j] \\] <p>\u95ee\u9898\u5c31\u8f6c\u6362\u4e3a\u8ba1\u7b97 \\(\\sum_{i=1}^{n}\\sum_{j=1}^{m}a[i][j]\\) \uff0c\u4e0e\u63a8\u4e00\u7ef4\u6570\u7ec4\u533a\u95f4\u67e5\u8be2\u7c7b\u4f3c\uff0c\u6211\u4eec\u5229\u7528\u539f\u6570\u7ec4\u7684\u4e0e\u5dee\u5206\u6570\u7ec4\u4e4b\u95f4\u7684\u5173\u7cfb\u8fdb\u884c\u53d8\u6362\uff0c\u4e0b\u9762\u662f\u63a8\u5bfc\u8fc7\u7a0b\uff1a</p> \\[ \\begin{align*}  &amp;\\sum_{i=1}^{n}\\sum_{j=1}^{m}a[i][j]\\\\ = &amp;\\sum_{i=1}^{n}\\sum_{j=1}^{m}\\sum_{k=1}^{i}\\sum_{l=1}^{j}d[k][l]\\\\  =&amp;\\sum_{i=1}^{n}\\sum_{j=1}^{m}d[i][j]\\times (n-i+1)\\times (m-j+1)\\\\ =&amp;(n+1)(m+1)\\sum_{i=1}^{n}\\sum_{j=1}^{m}d[i][j]-(m+1)\\sum_{i=1}^{n}\\sum_{j=1}^{m}d[i][j]\\times i\\\\ &amp;(n+1)\\sum_{i=1}^{n}\\sum_{j=1}^{m}d[i][j]\\times j+\\sum_{i=1}^{n}\\sum_{j=1}^{m}d[i][j]\\times i\\times j \\end{align*} \\] <p>\u6211\u4eec\u53ef\u4ee5\u7528\u56db\u4e2a\u4e8c\u7ef4\u6811\u72b6\u6570\u7ec4\u6765\u5206\u522b\u7ef4\u62a4\u4e0a\u9762\u56db\u4e2a\u4e8c\u7ef4\u524d\u7f00\u548c\uff0c\u4e0b\u9762\u662f\u5b9e\u73b0\uff1a</p> <pre><code>int ask(int x, int y)\n{\n    int sum = 0;\n    for (int i = x; i &gt; 0; i -= lowbit(i))\n        for (int j = y; j &gt; 0; j -= lowbit(j))\n        {\n            sum += (x + 1) * (y + 1) * f[0][i][j] - \n                (y + 1) * f[1][i][j] - (x + 1) * f[2][i][j] + f[3][i][j];\n        }\n    return sum;\n}\n\nint ask(int x1, int y1, int x2, int y2)\n{\n    return ask(x2, y2) - ask(x1 - 1, y2) - ask(x2, y1 - 1) + ask(x1 - 1, y1 - 1);\n}\n</code></pre> 2_BIT <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nconst int MAX = 1e3 + 100;\n\ninline int lowbit(int x) { return x &amp; -x; }\n\n// n\u4ee3\u8868\u4e8c\u7ef4\u6570\u7ec4\u7684\u884c\uff0cm\u4ee3\u8868\u4e8c\u7ef4\u6811\u72b6\u6570\u7ec4\u7684\u5217\n// f[]\u6570\u7ec4\u4ee3\u8868\u7ef4\u62a4\u7684\u6570\u7ec4\nint n, m;\nint f[MAX][MAX];\n\n// \u57fa\u7840\u4e8c\u7ef4\u6811\u72b6\u6570\u7ec4\n// \u652f\u6301\u5355\u70b9\u4fee\u6539\uff0c\u5b50\u77e9\u9635\u67e5\u8be2\nvoid update(int x, int y, int d)\n{\n    for (int i = x; i &lt;= n; i += lowbit(i))\n        for (int j = y; j &lt;= m; j += lowbit(j))\n            f[i][j] += d;\n}\n\n// \u4e8c\u7ef4\u524d\u7f00\u548c\u67e5\u8be2\nint ask(int x, int y)\n{\n    int sum = 0;\n    for (int i = x; i &gt; 0; i -= lowbit(i))\n        for (int j = y; j &gt; 0; j -= lowbit(j))\n            sum += f[i][j];\n    return sum;\n}\n// \u5b50\u77e9\u9635\u67e5\u8be2\nint ask(int x1, int y1, int x2, int y2)\n{\n    return ask(x1, y1) - ask(x1, y2 - 1) - ask(x2 - 1, y1) + ask(x2, y2);\n}\n\n// 4*\u5dee\u5206\u6570\u7ec4+\u4e8c\u7ef4\u6811\u72b6\u6570\u7ec4\n// \u652f\u6301\u5b50\u77e9\u9635\u4fee\u6539\uff0c\u5b50\u77e9\u9635\u67e5\u8be2\nint f2[4][MAX][MAX];\n// \u5b50\u77e9\u9635\u4fee\u6539\nvoid update(int x, int y, int d)\n{\n    for (int i = x; i &lt;= n; i += lowbit(i))\n        for (int j = y; j &lt;= m; j += lowbit(j))\n            f2[0][i][j] += d, f2[1][i][j] += d * x,\n                f2[2][i][j] += y * d, f2[3][i][j] += x * y * d;\n}\n// \u7ef4\u62a4\u5b50\u77e9\u9635\u548c\nvoid update(int x1, int y1, int x2, int y2, int k)\n{\n    update(x1, y1, k), update(x1, y2 + 1, -k),\n        update(x2 + 1, y1, -k), update(x2 + 1, y2 + 1, k);\n}\n\n// \u524d\u7f00\u548c\u67e5\u8be2\nint ask(int x, int y)\n{\n    int sum = 0;\n    for (int i = x; i &gt; 0; i -= lowbit(i))\n        for (int j = y; j &gt; 0; j -= lowbit(j))\n            sum += (x + 1) * (y + 1) * f2[0][i][j] - (y + 1) * f2[1][i][j] - (x + 1) * f2[2][i][j] + f2[3][i][j];\n    return sum;\n}\n// \u67e5\u8be2\u5b50\u77e9\u9635\u548c\nint ask(int x1, int y1, int x2, int y2)\n{\n    return ask(x2, y2) - ask(x1 - 1, y2) - ask(x2, y1 - 1) + ask(x1 - 1, y1 - 1);\n}\n</code></pre>"},{"location":"DS/BIT/BIT/","title":"\u6811\u72b6\u6570\u7ec4","text":""},{"location":"DS/BIT/BIT/#_2","title":"\u5b9a\u4e49","text":"<p>\u6811\u72b6\u6570\u7ec4\u662f\u5229\u7528\u6570\u7684\u4e8c\u8fdb\u5236\u7279\u5f81\u8fdb\u884c\u68c0\u7d22\u7684\u4e00\u79cd\u6811\u72b6\u7684\u7ed3\u6784\u3002\u5b83\u7528\u4e8e\u7ef4\u62a4\u524d\u7f00\u548c\u7684\u6570\u636e\u7ed3\u6784\uff0c\u652f\u6301\u5355\u70b9\u4fee\u6539\u3001\u533a\u95f4\u67e5\u8be2\uff1b\u533a\u95f4\u4fee\u6539\u3001\u533a\u95f4\u67e5\u8be2\u7b49\u4e00\u7cfb\u5217\u64cd\u4f5c\u3002 \u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u7684\u5143\u7d20\u8981\u6ee1\u8db3\u7ed3\u5408\u5f8b\u548c\u53ef\u5dee\u5206\u7684\u6027\u8d28\u3002</p>"},{"location":"DS/BIT/BIT/#_3","title":"\u539f\u7406","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4 \\(\\{a_1,a_2\\dots ,a_8 \\}\\) \uff0c\u6211\u4eec\u5982\u4f55\u5feb\u901f\u7684\u6c42\u5176\u524d\u7f00\u548c\u5462\uff1f \u4e00\u822c\u6211\u4eec\u6c42\u524d\u7f00\u548c\u5c31\u662f\u7d2f\u52a0\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662f\\(O(n)\\)\uff0c\u4e00\u79cd\u5bb9\u6613\u60f3\u5230\u7684\u5206\u6cbb\u7684\u4f18\u5316\u7b56\u7565\u662f\uff0c\u5bf9\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u4e24\u4e24\u6c42\u548c\u5e76\u4e14\u5b58\u5230\u65b0\u7684\u6570\u7ec4\u4e2d\uff0c\u4e00\u76f4\u8fd9\u6837\u8ba1\u7b97\u4e0b\u53bb\u76f4\u5230\u65b0\u6570\u7ec4\u4e2d\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\uff0c\u5982\u4e0b\uff1a</p> <p>\u8fd9\u6837\u5c31\u4f18\u5316\u6210\u7ebf\u6bb5\u6811\u4e86\uff0c\u6c42\u524d\u7f00\u548c\u3001\u4fee\u6539\u5143\u7d20\u503c\u7684\u590d\u6742\u5ea6\u5c31\u90fd\u662f\\(O(\\log n)\\)\u4e86\uff0c\u4f46\u662f\u5bf9\u4e8e\u6c42\u524d\u7f00\u548c\u6709\u5f88\u591a\u5143\u7d20\u662f\u591a\u4f59\u7684\uff0c\u5982\uff1a\u6211\u4eec\u8981\u6c42\\(a_1\\)\u5230\\(a_4\\)\u7684\u524d\u7f00\u548c\uff0c\u53ea\u9700\u8981\u7528\u5230\\(a_4\\)\u7684\u7236\u8282\u70b9\uff0c\u5e76\u4e0d\u9700\u8981`\\(a_4\\)\u5176\u672c\u8eab\u3002\u6211\u4eec\u5c06\u7c7b\u4f3c\u7684\u8282\u70b9\u90fd\u5220\u6389\uff0c\u5c31\u5f97\u5230\u6811\u72b6\u6570\u7ec4\uff1a</p> <p>\u56fe\u4e2d\u9ed1\u8272\u8282\u70b9\u90fd\u662f\u88ab\u5220\u9664\u7684\u8282\u70b9\uff0c\u8fd9\u6837\u7a7a\u95f4\u590d\u6742\u5ea6\u5c31\u4f18\u5316\u4e3a\\(O(n)\\)\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5c06\u8282\u70b9\u503c\u5b58\u5230\u4e00\u4e2a\u6570\u7ec4\u4e2d\u3002\u4f46\u662f\u95ee\u9898\u6765\u4e86\uff0c\u6211\u4eec\u8be5\u600e\u4e48\u5728\u6570\u7ec4\u4e2d\u6b63\u786e\u5feb\u901f\u7684\u6c42\u524d\u7f00\u548c\u5462\uff1f\u8fd9\u5c31\u8981\u7528\u5230\u5927\u540d\u9f0e\u9f0e\u7684\\(lowbit\\)\u51fd\u6570\u4e86</p>"},{"location":"DS/BIT/BIT/#lowbit","title":"lowbit \u51fd\u6570","text":"<p>\u6211\u4eec\u5c06\u6bcf\u4e2a\u8282\u70b9\u4e0b\u6807\u5bf9\u5e94\u7684\u4e8c\u8fdb\u5236\u5f62\u5f0f\u5199\u51fa\u6765\uff0c\u5c31\u80fd\u770b\u51fa\u4e00\u4e9b\u89c4\u5f8b\uff1a</p> <ul> <li>\u6bcf\u4e2a\u8282\u70b9\u8986\u76d6\u7684\u957f\u5ea6\u662f\u5176\u4e8c\u8fdb\u5236\u8868\u793a\u4e0b\u7684\u6700\u4f4e\u4f4d \\(1\\) \u53ca\u5176\u540e\u9762\u7684 \\(0\\) \u6784\u6210\u7684\u6570\u503c</li> <li>\u6bcf\u4e2a\u8282\u70b9\u7684\u7236\u8282\u70b9\u7684\u4e0b\u6807\u5c31\u662f\u5728\u5176\u4e8c\u8fdb\u5236\u7684\u6700\u4f4e\u4f4d \\(1\\) \u52a0\u4e0a \\(1\\) \u3002</li> </ul> <p>\u90a3\u4e48\u5b9e\u73b0\u6811\u72b6\u6570\u7ec4\u7684\u5c31\u5f52\u7ed3\u5230\u4e00\u4e2a\u5173\u952e\u95ee\u9898\uff1a\u5982\u4f55\u5feb\u901f\u627e\u5230\u4e00\u4e2a\u6570\u4e8c\u8fdb\u5236\u8868\u793a\u4e0b\u6700\u4f4e\u4f4d\\(1\\)\u53ca\u5176\u540e\u9762\u7684\\(0\\)\u6784\u6210\u7684\u6570\u503c\u3002\u8fd9\u4e5f\u5c31\u662f\\(lowbit\\)\u51fd\u6570\u7684\u529f\u80fd\u3002</p> <p> </p> <p>\u6211\u4eec\u4e3e\u4e2a\u4f8b\u5b50\uff1a\u6c42 \\(lowbit(10)\\)</p> <p>\u6211\u4eec\u5148\u5c06 \\(10\\) \u7684\u4e8c\u8fdb\u5236\u4f4d\u5199\u51fa\u6765 \\((1010)_2\\) \uff0c\u5728\u5bf9\u5176\u6309\u4f4d\u53d6\u53cd\u5f97\u5230 \\((0101)_2\\) \uff0c\u518d\u52a0\u4e0a \\(1\\) \uff0c\u5c31\u5f97\u5230 \\((0110)_2\\) \uff0c\u6211\u4eec\u5bf9\u6bd4\u4e24\u4e2a\u4e8c\u8fdb\u5236\u6570\uff0c\u53d1\u73b0\u9664\u4e86\u6700\u4f4e\u4f4d \\(1\\) \u53ca\u5176\u540e\u9762\u7684 \\(0\\) \uff0c\u4e24\u4e2a\u6570\u5b57\u5176\u4ed6\u4f4d\u4e0a\u7684\u6570\u5b8c\u5168\u4e0d\u540c\uff0c\u6211\u5c06\u4e24\u4e2a\u6570\u8fdb\u884c\u6309\u4f4d\u4e0e&amp;\u8fd0\u7b97\uff0c\u5c31\u5f97\u5230 \\(lowbit\\) \u503c\u4e86\u3002</p> <p>\u6211\u4eec\u518d\u601d\u8003\uff0c\u6309\u4f4d\u53d6\u53cd\u518d\u52a0 \\(1\\) \uff0c\u8fd9\u4e0d\u5c31\u662f\u8d1f\u6570\u8865\u7801\u7684\u8fd0\u7b97\u8fc7\u7a0b\u5417\uff0c\u6240\u4ee5\u6211\u4eec\u76f4\u63a5\u5c06\u8be5\u6570\u53d6\u8d1f\u518d\u6309\u4f4d\u4e0e\u5373\u53ef\u5f97\u5230 \\(lowbit\\) \u7684\u503c\uff0c\u4e0b\u9762\u662f\u4ee3\u7801\uff1a</p> <pre><code>inline int lowbit(int x) \n{\n    return x &amp; -x;\n}\n</code></pre> <p>\u6240\u4ee5\u8282\u70b9 \\(x\\) \u8986\u76d6\u7684\u957f\u5ea6\u5c31\u662f\u5176 \\(lowbit(x)\\) \u7684\u503c\uff0c\u5176\u7236\u8282\u70b9\u4e0b\u6807\u5c31\u662f \\(x+lowbit(x)\\) \u3002</p>"},{"location":"DS/BIT/BIT/#_4","title":"\u5b9e\u73b0","text":""},{"location":"DS/BIT/BIT/#_5","title":"\u5355\u70b9\u4fee\u6539\uff0c\u533a\u95f4\u67e5\u8be2","text":"<p>\u3010\u6a21\u677f\u3011\u6811\u72b6\u6570\u7ec4 1</p> <p>\u6700\u7b80\u5355\u7684\u6811\u72b6\u6570\u7ec4\u53ef\u4ee5\u5728\\(O(\\log n)\\)\u7684\u590d\u6742\u5ea6\u5b9e\u73b0\u8fd9\u4e24\u79cd\u64cd\u4f5c</p>"},{"location":"DS/BIT/BIT/#_6","title":"\u5355\u70b9\u4fee\u6539","text":"<p>\u6211\u4eec\u4fee\u6539\u67d0\u4e00\u4f4d\u7f6e\u7684\u503c\uff0c\u5c31\u5c06\u8986\u76d6\u5176\u7684\u7236\u8282\u70b9\u7684\u503c\u90fd\u8fdb\u884c\u4fee\u6539\uff0c\u5c06\u8282\u70b9\\(x\\)\u52a0\u4e0a\\(d\\)\u7684\u5b9e\u73b0\u5982\u4e0b\uff1a</p> <pre><code>inline void update(int x, int d) \n{\n    for (; x &lt;= n; x += lowbit(x))\n        f[x] += d;\n}\n</code></pre>"},{"location":"DS/BIT/BIT/#_7","title":"\u533a\u95f4\u67e5\u8be2","text":"<p>\u6211\u4eec\u8981\u6c42\u533a\u95f4\\([l,r]\\)\u7684\u548c\uff0c\u5176\u5b9e\u5c31\u662f\\(sum(r)-sum(l-1)\\)\uff0c\\(sum(x)\\)\u4ee3\u8868\u4e0b\u6807\u4ece\\(1\\)\u5230\\(x\\)\u7684\u524d\u7f00\u548c\uff0c\u67e5\u8be2\u67d0\u4e2a\u70b9\u7684\u524d\u7f00\u548c\u5c31\u662f\u6811\u72b6\u6570\u7ec4\u64c5\u957f\u7684\uff0c\u5c31\u662f\u4ece\u8fd9\u4e2a\u8282\u70b9\u5f00\u59cb\uff0c\u5411\u5750\u4e0a\u627e\u5230\u4e0a\u4e00\u4e2a\u8282\u70b9\uff0c\u5e76\u52a0\u4e0a\u5176\u8282\u70b9\u7684\u503c\uff0c\u53ef\u4ee5\u53d1\u73b0\u5411\u5de6\u4e0a\u627e\u4e0a\u4e00\u4e2a\u8282\u70b9\uff0c\u53ea\u9700\u8981\u5c06\u4e0b\u6807\u51cf\u53bb\u5f53\u524d\u4e0b\u6807\u7684\\(lowbit\\)\u503c\uff0c\u4e0b\u9762\u662f\u5b9e\u73b0\u4ee3\u7801\uff1a</p> <pre><code>inline int ask(int x) \n{\n    int sum = 0;\n    for (; x &gt;= 1; x -= lowbit(x))\n        sum += f[x];\n    return sum;\n}\n//\u6c42\u533a\u95f4[l,r]\u7684\u548c\n//ask(r)-ask(l-1);\n</code></pre>"},{"location":"DS/BIT/BIT/#_8","title":"\u533a\u95f4\u4fee\u6539\uff0c\u5355\u70b9\u67e5\u8be2","text":"<p>\u3010\u6a21\u677f\u3011\u6811\u72b6\u6570\u7ec4 2</p>"},{"location":"DS/BIT/BIT/#_9","title":"\u533a\u95f4\u4fee\u6539","text":"<p>\u6211\u4eec\u53ea\u9700\u4e00\u4e2a\u7b80\u5355\u800c\u5de7\u5999\u7684\u64cd\u4f5c\uff0c\u5c31\u80fd\u5229\u7528\u6811\u72b6\u6570\u7ec4\u9ad8\u6548\u7684\u5b9e\u73b0\u533a\u95f4\u4fee\u6539\uff0c\u8fd9\u4e2a\u64cd\u4f5c\u5c31\u662f\u5dee\u5206\u6570\u7ec4\uff0c\u6211\u4eec\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u539f\u6570\u7ec4\u7684\u5dee\u5206\u6570\u7ec4\uff0c\u8fd9\u6837\u6211\u5f53\u6211\u4eec\u8981\u4fee\u6539\u67d0\u4e2a\u533a\u95f4\u7684\u503c\u65f6\uff0c\u53ea\u9700\u8981\u4fee\u6539\u4e24\u4e2a\u7aef\u70b9\u5373\u53ef\u3002</p> <pre><code>void update(int x,int d)\n{\n    for(int i=x;i&lt;=n;i+=lowbit(i))\n        f[i]+=d;\n}\nvoid change(int x,int y,int k)\n{\n    update(x,k);\n    update(y+1,-k);\n}\n</code></pre>"},{"location":"DS/BIT/BIT/#_10","title":"\u5355\u70b9\u67e5\u8be2","text":"<p>\u4f17\u6240\u5468\u77e5\uff0c\u5dee\u5206\u7684\u9006\u8fd0\u7b97\u662f\u6c42\u524d\u7f00\u548c\uff0c\u6811\u72b6\u6570\u7ec4\u8ba1\u7b97\u7684\u5c31\u662f\u524d\u7f00\u548c\uff0c\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u5dee\u5206\u6570\u7ec4\uff0c\u90a3\u4e48\u6811\u72b6\u6570\u7ec4\u8ba1\u7b97\u5f97\u5230\u5c31\u662f\u5355\u70b9\u7684\u5143\u7d20\u503c\uff0c\u5373 \\(ask(x)=a[x]\\) \uff0c\u6240\u4ee5\u5355\u70b9\u67e5\u8be2\u548c\u4e0a\u9762\u7684\u67e5\u8be2\u5b9e\u73b0\u76f8\u540c\uff1a</p> <pre><code>int ask(int x)\n{\n    int sum=0;\n    for(int i=x;i&gt;=1;i-=lowbit(i))\n        sum+=f[i];\n    return sum;\n}\n</code></pre>"},{"location":"DS/BIT/BIT/#_11","title":"\u533a\u95f4\u4fee\u6539\uff0c\u533a\u95f4\u67e5\u8be2","text":"<p>\u3010\u6a21\u677f\u3011\u7ebf\u6bb5\u6811 1</p>"},{"location":"DS/BIT/BIT/#_12","title":"\u533a\u95f4\u67e5\u8be2","text":"<p>\u6211\u4eec\u8981\u5229\u7528\u6811\u72b6\u6570\u7ec4\u6c42\u533a\u95f4\u548c\uff0c\u9996\u5148\u8981\u6c42\u524d\u7f00\u548c\\(sum(k)\\)\uff0c\u8fd9\u91cc\u6211\u4eec\u5b9a\u4e49\u5dee\u5206\u6570\u7ec4\\(d\\)\uff0c\u5b83\u548c\u539f\u6570\u7ec4\u7684\u5173\u7cfb\u662f\\(a[k]=d[1]+d[2]+\\cdots+d[k]\\)\uff0c\\(d[k]=a[k]-a[k-1]\\)\uff0c\u4e0b\u9762\u63a8\u5bfc\u524d\u7f00\u548c\u4e0e\u5dee\u5206\u6570\u7ec4\u7684\u5173\u7cfb\uff1a</p> \\[ \\begin{align*} &amp;a_1+a_2+\\cdots + a_k\\\\ ~\\\\ =&amp;d_1+(d_1+d_2)+\\cdots +(d_1+d_2+\\cdots +d_k)\\\\ ~\\\\ =&amp;kd_1+(k-1)d_2+\\cdots +(k-(k-1))d_k\\\\ ~\\\\ =&amp;k(d_1+d_2+\\cdots +d_l)-(d_2+2d_3+\\cdots +(k-1)d_k)\\\\ ~\\\\ =&amp;k\\sum_{i=1}^{k} d_i-\\sum_{i=1}^{k}(i-1)d_i \\end{align*} \\] <p>\u516c\u5f0f\u6700\u540e\u4e00\u884c\u662f\u6c42\u4e24\u4e2a\u524d\u7f00\u548c\uff0c\u53ef\u4ee5\u7528\u4e24\u4e2a\u6811\u72b6\u6570\u7ec4\u5206\u522b\u6765\u7ef4\u62a4\uff0c\u8fd9\u6837\u5c31\u53ef\u8ba1\u7b97\u51fa\u524d\u7f00\u548c\\(sum(x)\\)\uff0c\u533a\u95f4\u548c\u4e5f\u5c31\u5f88\u597d\u8ba1\u7b97\u4e86\uff0c\u4e0b\u9762\u662f\u5b9e\u73b0\uff1a</p> <pre><code>int ask1(int x)\n{ \n    int sum = 0; \n    for (; x &gt; 0; x -= lowbit(x))\n        sum += f1[x];\n    return sum; \n}\nint ask2(int x)\n{ \n    int sum = 0; \n    for (; x &gt; 0; x -= lowbit(x))\n        sum += f2[x]; \n    return sum; \n}\nint ask(int l, int r) \n{\n    return r * ask1(r) - ask2(r) - (l - 1) * ask1(l - 1) + ask2(l - 1);\n}\n</code></pre>"},{"location":"DS/BIT/BIT/#_13","title":"\u533a\u95f4\u4fee\u6539","text":"<p>\u533a\u95f4\u4fee\u6539\u65f6\uff0c\u4e24\u4e2a\u6570\u7ec4\u8981\u540c\u65f6\u4fee\u6539\uff0c\u5b9e\u73b0\u65b9\u5f0f\u548c\u4e0a\u9762\u76f8\u540c\u3002</p> <p>\u7ef4\u62a4\\(\\sum_{i=1}^{k}(i-1)d_i\\)\u65f6\uff0c\u5bf9\\(k\\)\u4f4d\u7f6e\u589e\u52a0\\(d\\)\u65f6\uff0c\\(f[k]\\)\u53d8\u4e3a\\((k - 1)(d_k+d)\\)\uff0c\u5c06\u5176\u62c6\u5f00\u5f97\u5230\uff0c\\((k-1)d_k+(k-1)d\\)\uff0c\u6240\u4ee5\u5728\u4fee\u6539\u540e\u8005\u65f6\uff0c\u6211\u4eec\u8981\u4fee\u6539\u7684\u503c\u53d8\u4e3a\\((i-1)d\\)\uff0c\u4e0b\u9762\u65f6\u5177\u4f53\u5b9e\u73b0:</p> <pre><code>void update1(int x, int d) \n{ \n    for (; x &lt;= n; x += lowbit(x))\n        f1[x] += d; \n}\nvoid update2(int x, int d) \n{ \n    for (; x &lt;= n; x += lowbit(x))\n        f2[x] += d; \n}\nvoid change(int l, int r, int d)\n{\n    update1(l, d), update1(r + 1, -d);\n    update2(l, (l - 1) * d), update2(r + 1, -r * d);\n}\n</code></pre> BIT <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nconst int MAX = 1e6 + 100;\n\ninline int lowbit(int x)\n{\n    return x &amp; -x;\n}\n\n// n\u4ee3\u8868\u7ef4\u62a4\u7684\u6570\u7ec4\u957f\u5ea6\n// f[]\u6570\u7ec4\u4ee3\u8868\u7ef4\u62a4\u7684\u6570\u7ec4\nint n;\nint f[MAX];\n\n// =====================================================================\n// \u57fa\u7840\u6811\u72b6\u6570\u7ec4\n// \u652f\u6301\u5355\u70b9\u4fee\u6539\uff0c\u533a\u95f4\u67e5\u8be2\n\n// \u5355\u70b9\u4fee\u6539\ninline void update(int x, int d)\n{\n    for (; x &lt;= n; x += lowbit(x))\n        f[x] += d;\n}\n\n// \u67e5\u8be2\u524d\u7f00[1,x]\u7684\u548c\ninline int ask(int x)\n{\n    int sum = 0;\n    for (; x &gt; 0; x -= lowbit(x))\n        sum += f[x];\n    return sum;\n}\n\n// \u6c42\u533a\u95f4[l,r]\u7684\u548c\ninline int ask(int l, int r)\n{\n    return ask(r) - ask(l - 1);\n}\n\n// =====================================================================\n// \u5dee\u5206+\u6811\u72b6\u6570\u7ec4\n// \u652f\u6301\u533a\u95f4\u4fee\u6539\uff0c\u5355\u70b9\u67e5\u8be2\n\n// \u5bf9\u5dee\u5206\u6570\u7ec4\u5355\u70b9\u4fee\u6539\ninline void update(int x, int d)\n{\n    for (; x &lt;= n; x += lowbit(x))\n        f[x] += d;\n}\n\n// \u533a\u95f4\u4fee\u6539\uff0c\u5373\u4fee\u6539\u5dee\u5206\u6570\u7ec4\u7684\u4e24\u4e2a\u7aef\u70b9\n// \u5728\u533a\u95f4[l,r]\u4e0a\u52a0\u4e0ak\ninline void change(int l, int r, int k)\n{\n    update(l, k);\n    update(r + 1, -k);\n}\n\n// \u5355\u70b9\u67e5\u8be2\uff0c\u5373\u6c42\u5dee\u5206\u6570\u7ec4\u524d\u7f00\u548c\ninline int ask(int x)\n{\n    int sum = 0;\n    for (int i = x; i &gt; 0; i -= lowbit(i))\n        sum += f[i];\n    return sum;\n}\n\n// =====================================================================\n// 2*\u5dee\u5206\u6570\u7ec4+\u6570\u7ec4\u6570\u7ec4\n// \u652f\u6301\u533a\u95f4\u4fee\u6539\uff0c\u533a\u95f4\u67e5\u8be2\n\n// \u7ef4\u62a4\u4e24\u4e2a\u5dee\u5206\u6570\u7ec4\nint f1[MAX], f2[MAX];\n\n// \u533a\u95f4\u67e5\u8be2\n//  \u5bf9\u4e24\u4e2a\u5dee\u5206\u6570\u7ec4\u6c42\u524d\u7f00\u548c\ninline int ask1(int x)\n{\n    int sum = 0;\n    for (; x &gt; 0; x -= lowbit(x))\n        sum += f1[x];\n    return sum;\n}\ninline int ask2(int x)\n{\n    int sum = 0;\n    for (; x &gt; 0; x -= lowbit(x))\n        sum += f2[x];\n    return sum;\n}\n\n// \u533a\u95f4\u67e5\u8be2\n//ask(l,r) = sum(r) - sum(l-1)\ninline int ask(int l, int r)\n{\n    return r * ask1(r) - ask2(r) - ((l - 1) * ask1(l - 1) - ask2(l - 1));\n}\n\n// \u533a\u95f4\u4fee\u6539\n// \u5bf9\u4e24\u4e2a\u5dee\u5206\u6570\u7ec4\u505a\u4fee\u6539\nvoid update1(int x, int d)\n{\n    for (; x &lt;= n; x += lowbit(x))\n        f1[x] += d;\n}\nvoid update2(int x, int d)\n{\n    for (; x &lt;= n; x += lowbit(x))\n        f2[x] += d;\n}\n//\u4fee\u6539\u533a\u95f4[l,r]\nvoid change(int l, int r, int d)\n{\n    update1(l, d), update1(r + 1, -d);\n    update2(l, (l - 1) * d), update2(r + 1, -r * d);\n}\n</code></pre>"},{"location":"DS/BIT/BIT/#_14","title":"\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u533a\u95f4\u6700\u503c","text":"<p>\u4ee5\u524d\u6811\u72b6\u6570\u7ec4\u8282\u70b9\u503c\u662f\\([x-lowbit(x)+1,x]\\)\u533a\u95f4\u7684\u5143\u7d20\u548c\uff0c\u8fd9\u91cc\u6811\u72b6\u6570\u7ec4\u8282\u70b9\u503c\u5c31\u6539\u4e3a\u5b58\u653e\\([x-lowbit(x)+1,x]\\)\u533a\u95f4\u7684\u6700\u5927\u503c\u3002 \u5728\u4fee\u6539\u533a\u95f4\u6700\u503c\u65f6\uff0c\u8981\u66f4\u65b0\u6811\u72b6\u6570\u7ec4\u4e0a\u6240\u6709\u88ab\u5176\u5f71\u54cd\u7684\u8282\u70b9\uff0c\u5373\u6240\u6709\u4e0e\u5176\u76f4\u63a5\u76f8\u8fde\u7684\u8282\u70b9\uff0c\u5176\u7236\u8282\u70b9\u548c\u5b50\u8282\u70b9\u3002</p> <p>\u5728\u67e5\u8be2\u65f6\u5206\u4e24\u79cd\u60c5\u51b5\uff0c\u5982\u679c\u5f53\u524d\u8282\u70b9\u8986\u76d6\u7684\u8303\u56f4\uff0c\u8d85\u8fc7\u4e86\u6211\u4eec\u7684\u67e5\u8be2\u8303\u56f4\uff0c\u5c31\u7528\u539f\u6570\u7ec4\u5bf9\u5e94\u4e0b\u6807\u7684\u503c\u53bb\u66f4\u65b0\u7b54\u6848\uff0c\u5e76\u4e14\u5411\u524d\u9012\u63a8\uff1b\u5982\u679c\u6ca1\u6709\u8d85\u8fc7\u6211\u4eec\u7684\u67e5\u8be2\u8303\u56f4\uff0c\u5c31\u76f4\u63a5\u7528\u5f53\u524d\u8282\u70b9\u7684\u503c\u53bb\u66f4\u65b0\u7b54\u6848\u3002</p> RMQ <pre><code>/*\n\u4ee5\u9898\u76eeI Hate It\u4e3a\u4f8b\u7ed9\u51fa\u6811\u72b6\u6570\u7ec4\u5982\u7406RMQ\u95ee\u9898\u7684\u6a21\u677f\nhttps://acm.hdu.edu.cn/showproblem.php?pid=1754\n*/\n\n#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n#define MAX int(2e5+7)\ntypedef long long ll;\n\nint f[MAX],a[MAX], n, m;\ninline int lowbit(int x) {return x &amp; -x;}\n\n// \u5355\u70b9\u4fee\u6539\nvoid update(int x, int d) { \n    while (x &lt;= n) {\n        f[x] = max(d,a[x]);\n        // \u7528\u5f53\u524d\u8282\u70b9\u7684\u5b50\u8282\u70b9\u66f4\u65b0\u5f53\u524d\u8282\u70b9\n        for (int i = 1; i &lt; lowbit(x); i &lt;&lt;= 1)\n            f[x] = max(f[x], f[x - i]);\n        x += lowbit(x);\n    }\n}\n\n// \u67e5\u8be2\u533a\u95f4\u6700\u503c\nint ask(int l,int r) {\n    int res = 0;\n    while (l &lt;= r) {\n        // \u5982\u679c\u5f53\u524d\u8282\u70b9\u7ef4\u62a4\u7684\u533a\u95f4\u8d85\u8fc7\u67e5\u8be2\u533a\u95f4\uff0c\u5c31\u7528\u539f\u6570\u7ec4\u8be5\u4f4d\u7f6e\u7684\u503c\u4fee\u6539\u7b54\u6848\n        if (lowbit(r) &gt; r - l + 1)\n            res = max(res, a[r]),--r;\n        // \u6ca1\u8d85\u8fc7\u5c31\u76f4\u63a5\u7528\u5f53\u524d\u8282\u70b9\u7684\u533a\u95f4\u4fee\u6539\u7b54\u6848\n        else \n            res = max(res, f[r]),r -= lowbit(r);\n    }\n    return res;\n}\n\n\nvoid solve() {\n    while (cin &gt;&gt; n &gt;&gt; m) {\n        for (int i = 1; i &lt;= n; ++i) {\n            cin &gt;&gt; a[i];\n            update(i, a[i]);\n        }\n        for (int i = 0; i &lt; m; ++i) {\n            char op;\n            int x, y;\n            cin &gt;&gt; op &gt;&gt; x &gt;&gt; y;\n            if (op == 'Q')cout &lt;&lt; ask(x, y) &lt;&lt; '\\n';\n            else a[x] = y, update(x, y);\n        }\n    }\n}\n\nint main() {\n    ios::sync_with_stdio(false); //int T;\n    //for (cin &gt;&gt; T; T--;) \n    solve();\n    return 0;\n}\n</code></pre>"},{"location":"DS/BIT/BIT/#_15","title":"\u4e60\u9898","text":"\u9898\u76ee \u96be\u5ea6 \u77e5\u8bc6 P1908 \u666e\u53ca/\u63d0\u9ad8- \u9006\u5e8f\u5bf9\u6a21\u677f P1774 \u666e\u53ca/\u63d0\u9ad8- \u9006\u5e8f\u5bf9 P4479 \u7701\u9009/NOI- \u79bb\u6563\u5316+\u6811\u72b6\u6570\u7ec4 No Pain No Game \u79bb\u7ebf+\u6811\u72b6\u6570\u7ec4 I Hate It \u6811\u72b6\u6570\u7ec4\u7ef4\u62a4RMQ P1966 \u63d0\u9ad8+/\u7701\u9009- \u6392\u5e8f+\u6811\u72b6\u6570\u7ec4 P3605 \u63d0\u9ad8+/\u7701\u9009- DFS+\u6811\u72b6\u6570\u7ec4 LC.100112 \u56f0\u96be \u6811\u72b6\u6570\u7ec4\u4f18\u5316DP LC.2736 \u56f0\u96be \u4e8c\u7ef4\u504f\u5e8f\u95ee\u9898 <p>\u53c2\u8003\u6587\u7ae0\uff1a OI Wiki \u300a\u7b97\u6cd5\u7ade\u8d5b-\u4e0a\u518c\u300b-\u7f57\u6c38\u519b B\u7ad9\u3014manim | \u7b97\u6cd5 | \u6570\u636e\u7ed3\u6784\u3015 \u5b8c\u5168\u7406\u89e3\u5e76\u6df1\u5165\u5e94\u7528\u6811\u72b6\u6570\u7ec4</p>"},{"location":"DS/BTree/BTree/","title":"B \u6811","text":""},{"location":"DS/BTree/BTree/#_1","title":"\u6982\u5ff5","text":"<p>\u4e00\u822c\u7684\u4e8c\u53c9\u67e5\u627e\u6811\u6bcf\u4e2a\u8282\u70b9\u53ea\u80fd\u5bb9\u7eb3\u4e00\u4e2a\u6570\u636e\uff0c\u5bfc\u81f4\u6811\u7684\u9ad8\u5ea6\u5f88\u9ad8\uff0c\u903b\u8f91\u4e0a\u6328\u7740\u7684\u8282\u70b9\u6570\u636e\u53ef\u80fd\u79bb\u5f97\u5f88\u8fdc\u3002</p> <p>\u8003\u8651\u5728\u78c1\u76d8\u4e2d\u5b58\u50a8\u6570\u636e\u7684\u60c5\u51b5\uff0c\u4e0e\u5185\u5b58\u76f8\u6bd4\uff0c\u8bfb\u5199\u78c1\u76d8\u6709\u4ee5\u4e0b\u4e0d\u540c\u70b9\uff1a</p> <ol> <li>\u8bfb\u5199\u78c1\u76d8\u7684\u901f\u5ea6\u76f8\u6bd4\u5185\u5b58\u8bfb\u5199\u6162\u5f88\u591a\u3002</li> <li>\u6bcf\u6b21\u8bfb\u5199\u78c1\u76d8\u7684\u5355\u4f4d\u8981\u6bd4\u8bfb\u5199\u5185\u5b58\u7684\u6700\u5c0f\u5355\u4f4d\u5927\u5f88\u591a\u3002</li> </ol> <p>\u7531\u4e8e\u8bfb\u5199\u78c1\u76d8\u7684\u8fd9\u4e2a\u7279\u70b9\uff0c\u56e0\u6b64\u5bf9\u5e94\u7684\u6570\u636e\u7ed3\u6784\u5e94\u8be5\u5c3d\u91cf\u7684\u6ee1\u8db3\u300c\u5c40\u90e8\u6027\u539f\u7406\u300d\uff1a\u300c\u5f53\u4e00\u4e2a\u6570\u636e\u88ab\u7528\u5230\u65f6\uff0c\u5176\u9644\u8fd1\u7684\u6570\u636e\u4e5f\u901a\u5e38\u4f1a\u9a6c\u4e0a\u88ab\u4f7f\u7528\u300d\uff0c\u4e3a\u4e86\u6ee1\u8db3\u5c40\u90e8\u6027\u539f\u7406\uff0c \u6240\u4ee5\u5e94\u8be5\u5c06\u903b\u8f91\u4e0a\u76f8\u90bb\u7684\u6570\u636e\u5728\u7269\u7406\u4e0a\u4e5f\u5c3d\u91cf\u5b58\u50a8\u5728\u4e00\u8d77\u3002\u8fd9\u6837\u624d\u80fd\u51cf\u5c11\u8bfb\u5199\u78c1\u76d8\u7684\u6570\u91cf\u3002</p> <p>\u6240\u4ee5\uff0c\u5bf9\u6bd4\u8d77\u4e00\u4e2a\u8282\u70b9\u53ea\u80fd\u5b58\u50a8\u4e00\u4e2a\u6570\u636e\u7684 BST \u7c7b\u6570\u636e\u7ed3\u6784\u6765\uff0c\u8981\u6c42\u8fd9\u79cd\u6570\u636e\u7ed3\u6784\u5728\u5f62\u72b6\u4e0a\u66f4\u300c\u80d6\u300d\u3001\u66f4\u52a0\u300c\u6241\u5e73\u300d\uff0c\u5373\uff1a\u6bcf\u4e2a\u8282\u70b9\u80fd\u5bb9\u7eb3\u66f4\u591a\u7684\u6570\u636e\uff0c \u8fd9\u6837\u5c31\u80fd\u964d\u4f4e\u6811\u7684\u9ad8\u5ea6\uff0c\u540c\u65f6\u8ba9\u903b\u8f91\u4e0a\u76f8\u90bb\u7684\u6570\u636e\u90fd\u80fd\u5c3d\u91cf\u5b58\u50a8\u5728\u7269\u7406\u4e0a\u4e5f\u76f8\u90bb\u7684\u786c\u76d8\u7a7a\u95f4\u4e0a\uff0c\u51cf\u5c11\u78c1\u76d8\u8bfb\u5199\u3002</p> <p>\\(B-Tree\\) \u662f\u4e00\u79cd\u591a\u8def\u67e5\u627e\u7684\u5e73\u8861\u6811\u3002\u4e00\u4e2a \\(m\\) \u9636\u7684 \\(B-Tree\\) \u4ed6\u7684\u4e00\u4e2a\u8282\u70b9\u4e2d\u7531 \\(m\\) \u4e2a\u5b50\u8282\u70b9\u548c \\(m - 1\\) \u4e2a\u6570\u636e\u7ec4\u6210\uff0c\u4e14\u6bcf\u4e2a\u8282\u70b9\u4e2d\u6570\u636e\u6709\u5e8f\u6392\u5217\uff0c\u5982\u4e0b\u56fe\u662f\u4e00\u4e2a \\(3\\) \u9636\u7684 \\(B-Tree\\)\uff1a</p> <p>\u4e00\u68f5 \\(B-Tree\\) \u8981\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\uff1a</p> <ul> <li>\u6bcf\u4e2a\u8282\u70b9\u6700\u591a\u6709 \\(m\\) \u4e2a\u5b50\u8282\u70b9\u3002</li> <li>\u6bcf\u4e2a\u975e\u53f6\u5b50\u8282\u70b9\uff08\u9664\u6839\u8282\u70b9\u5916\uff09\uff0c\u81f3\u5c11\u8981\u6709 \\(\\left \\lfloor \\frac{m}{2}  \\right \\rfloor\\) \u4e2a\u6570\u636e\u3002</li> <li>\u6709 \\(k\\) \u4e2a\u5b50\u8282\u70b9\u7684\u8282\u70b9\uff0c\u6709 \\(k-1\\) \u4e2a\u6570\u636e\u5143\u7d20\uff0c\u4e14\u5143\u7d20\u6709\u5e8f\u6392\u5217\u3002</li> <li>\u6240\u6709\u7684\u53f6\u5b50\u8282\u70b9\u90fd\u5728\u540c\u4e00\u5c42\u3002</li> </ul>"},{"location":"DS/BTree/BTree/#_2","title":"\u5b9e\u73b0","text":""},{"location":"DS/BTree/BTree/#_3","title":"\u6210\u5458\u53d8\u91cf","text":"<p>\u5148\u6765\u770b\u6811\u8282\u70b9\u7684\u6210\u5458\u53d8\u91cf\u3002\u4e00\u4e2a \\(m\\) \u9636\u7684 \\(B\\) \u6811\u7684\u8282\u70b9\u4e2d\u6700\u591a\u6709 \\(m\\) \u4e2a\u513f\u5b50\uff0c\u6700\u591a\u6709 \\(m - 1\\) \u4e2a\u6570\u636e\uff0c\u8fd9\u91cc\u6211\u4eec\u5c06\u5b58\u5173\u952e\u5b57\u7684\u6570\u7ec4\u591a\u5f00\u4e00\u4e2a\u7a7a\u95f4\uff0c\u65b9\u4fbf\u540e\u9762\u505a\u8282\u70b9\u5206\u88c2\u3002</p> <pre><code>// Tp \u6570\u636e\u7c7b\u578b\uff0cOrd B\u6811\u7684\u9636\u6570\ntemplate&lt;class Tp,int Ord&gt;\nstruct _b_tree_node\n{\n    using node = _b_tree_node&lt;Tp,Ord&gt;;\n\n    Tp      _keys[Ord];                 // \u5b58\u653e\u8282\u70b9\u6570\u636e\u3002\n    node*   _son[Ord + 1] = { 0 };      // \u5b58\u653e\u5b50\u8282\u70b9\u5730\u5740\u3002\n    // _keys \u548c _son \u90fd\u6709\u591a\u5f00\u4e00\u4e2a\u7a7a\u95f4\uff0c\u540e\u9762\u4ecb\u7ecd\u63d2\u5165\u65f6\u89e3\u91ca\u539f\u56e0\u3002\n    node*   _fa = nullptr;              // \u8bb0\u5f55\u7236\u8282\u70b9\n    int     _sz = 0;                    // \u5f53\u524d\u8282\u70b9\u6570\u636e\u4e2a\u6570\n\n    /* \u5176\u4ed6\u5b9e\u73b0 */\n};\n</code></pre> <p>\\(B\\) \u6811\u7684\u6210\u5458\u53d8\u91cf\u5f88\u7b80\u5355\uff0c\u6839\u8282\u70b9 <code>_m_root</code>\uff0c\u8fd9\u91cc\u5199\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u5185\u5b58\u6c60\uff0c\u63d0\u9ad8\u70b9\u6548\u7387\uff1a</p> <pre><code>template&lt;class Tp,int Ord&gt;\nclass B_Tree\n{\nprivate:\n    using node = _b_tree_node&lt;Tp,Ord&gt;;\n\n    node* _m_root = nullptr;    // B-Tree \u7684\u6839\u8282\u70b9\n    // \u7b80\u5355\u5b9e\u73b0\u4e00\u4e2a\u5185\u5b58\u6c60\uff0c\u63d0\u9ad8\u6548\u7387\u3002\n    node* mem_pool;\n    int cnt = 0;    // \u8bb0\u5f55\u5df2\u5206\u914d\u7684\u5185\u5b58\u5757\u4e2a\u6570\n\n    /* \u5176\u4ed6\u5b9e\u73b0 */\n\n};\n</code></pre>"},{"location":"DS/BTree/BTree/#_4","title":"\u67e5\u627e","text":"<p>\u6bcf\u5c42\u6570\u636e\u90fd\u662f\u6709\u5e8f\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u6bcf\u4e00\u5c42\u90fd\u8fdb\u884c\u4e8c\u5206\u67e5\u627e\uff0c\u5982\u679c\u6ca1\u627e\u5230\u5c31\u9012\u5f52\u8fdb\u884c\u4e0b\u4e00\u5c42\u67e5\u627e\uff0c\u76f4\u5230\u627e\u5230\u6216\u65e0\u6cd5\u9012\u5f52\u4f4d\u7f6e\u3002\u51fd\u6570\u7684\u8fd4\u56de\u503c\u5c31\u662f\u67e5\u627e\u5230\u7684\u8282\u70b9\u548c\u5143\u7d20\u5728\u8282\u70b9\u4e2d\u7684\u4e0b\u6807\u3002</p> <pre><code>// \u627e\u5230 key \u5bf9\u5e94\u7684\u8282\u70b9\u548c\u5bf9\u5e94\u4f4d\u7f6e\nstd::pair&lt;node*,int&gt; B_Tree::_m_find(const Tp&amp; __k) noexcept\n{\n    node* fa = nullptr;\n    node* cur = _m_root;\n    while(cur)\n    {\n        // \u4e8c\u5206\n        int __p;    \n        __p = std::lower_bound(cur-&gt;_keys,cur-&gt;_keys + cur-&gt;_sz,__k) - cur-&gt;_keys;\n        // \u627e\u5230\u5c31\u76f4\u63a5\u8fd4\u56de\n        if(cur-&gt;_keys[__p] == __k)return std::make_pair(cur,__p);\n\n        // \u5426\u5219\u8fdb\u5165\u4e0b\u4e00\u5c42\uff0c\u76f4\u5230\u5230\u4e86\u53f6\u5b50\u8282\u70b9\u3002\n        fa = cur;\n        cur = cur-&gt;_son[__p];\n    }\n    // \u641c\u5b8c\u53f6\u5b50\u8282\u70b9\u4ee5\u540e\u8fd8\u6ca1\u627e\u5230\uff0c\u5c31\u8fd4\u56de\u53f6\u5b50\u8282\u70b9\u548c -1\n    return std::make_pair(fa,-1);\n}\n</code></pre> <p>\u8fd9\u91cc\u672a\u627e\u5230\u5c31\u8fd4\u56de\u53f6\u5b50\u8282\u70b9\uff0c\u662f\u4e3a\u4e86\u65b9\u4fbf\u63d2\u5165\u3002</p>"},{"location":"DS/BTree/BTree/#_5","title":"\u63d2\u5165","text":"<p>\u4e3a\u4e86\u7ef4\u62a4\u6811\u7684\u5e73\u8861\uff0c\u6211\u4eec\u53ea\u80fd\u5728 \\(B\\) \u6811\u7684\u53f6\u5b50\u8282\u70b9\u8fdb\u884c\u63d2\u5165\uff0c\u6240\u4ee5\u5411\u4e00\u68f5 \\(B\\) \u6811\u63d2\u5165\u7684\u65f6\u5019\u4f1a\u6709\u4ee5\u4e0b\u4e09\u79cd\u60c5\u51b5\uff1a</p> <ol> <li>\u6811\u4e3a\u7a7a\u3002</li> <li>\u8981\u63d2\u5165\u7684\u53f6\u5b50\u8282\u70b9\u6ca1\u6709\u6ee1\u3002</li> <li>\u8981\u63d2\u5165\u7684\u53f6\u5b50\u8282\u70b9\u6ee1\u4e86\u3002</li> </ol> <ul> <li>\u6811\u4e3a\u7a7a\uff1a</li> </ul> <p>\u5f53\u6211\u4eec\u5411\u4e00\u68f5\u7a7a\u6811\u63d2\u5165\u65f6\uff0c\u5c31\u8981\u65b0\u5efa\u6839\u8282\u70b9\uff0c\u5c06\u6570\u636e\u63d2\u5165\u5373\u53ef\u3002</p> <ul> <li>\u8981\u63d2\u5165\u7684\u53f6\u5b50\u8282\u70b9\u6ca1\u6709\u6ee1\uff1a</li> </ul> <p>\u76f4\u63a5\u5c06\u6570\u636e\u63d2\u5165\u5373\u53ef\uff0c\u4e3a\u4e86\u7ef4\u62a4\u8282\u70b9\u4e2d\u6570\u636e\u7684\u6709\u5e8f\u6027\uff0c\u6240\u4ee5\u6211\u4eec\u4f1a\u79fb\u52a8\u6570\u636e\u5143\u7d20\u3002</p> <pre><code>// \u5411\u5f53\u524d\u8282\u70b9\u4e2d\u63d2\u5165\u6570\u636e __k \u548c __s\nvoid _m_insert(const Tp&amp; __k,node* __s)\n{\n    int i;\n    for(i = _sz - 1;i &gt;= 0;--i)\n    {\n        if(__k &lt; _keys[i])\n        {\n            std::swap(_keys[i],_keys[i + 1]);\n            // \u5bf9\u5e94\u5b50\u8282\u70b9\u4e5f\u8981\u79fb\u52a8\n            std::swap(_son[i + 1],_son[i + 2]);\n        }\n        else break;\n    }\n    _keys[i + 1] = __k;\n    _son[i + 2] = __s;\n    // \u5c06\u5b50\u8282\u70b9 __s \u7684\u7236\u6539\u4e3a\u8c03\u7528\u8282\u70b9\n    if(__s) __s-&gt;_fa = this;\n    _sz++;\n}\n</code></pre> <ul> <li>\u8981\u63d2\u5165\u7684\u53f6\u5b50\u8282\u70b9\u6ee1\u4e86\uff1a</li> </ul> <p>\u5f53\u6211\u4eec\u5411\u4e00\u4e2a\u5df2\u7ecf\u6ee1\u7684\u8282\u70b9\u63d2\u5165\u65f6\uff0c\u5c31\u8981\u8fdb\u884c\u8282\u70b9\u5206\u88c2\u3002\u8282\u70b9\u5206\u88c2\u7684\u601d\u8def\u5c31\u662f\u627e\u5230\u8282\u70b9\u539f\u6570\u636e\u548c\u65b0\u6570\u636e\u7684\u4e2d\u4f4d\u6570\uff0c\u5c06\u4e2d\u4f4d\u6570\u79fb\u5230\u7236\u8282\u70b9\u4e2d\uff0c\u8ba9\u5c0f\u4e8e\u4e2d\u4f4d\u6570\u7684\u6570\u636e\u7559\u5728\u539f\u8282\u70b9\uff0c\u5927\u4e8e\u4e2d\u4f4d\u6570\u7684\u6570\u636e\u79fb\u5230\u65b0\u8282\u70b9\u4e2d\u3002\u6211\u4eec\u5728\u5b9a\u4e49\u65f6\uff0c\u7ed9 <code>_keys</code> \u6570\u7ec4\u591a\u5f00\u4e86\u4e00\u4e2a\u7a7a\u95f4\uff0c\u5c31\u662f\u4e3a\u4e86\u5728\u63d2\u5165\u5b8c\u6570\u636e\u540e\uff0c\u518d\u786e\u5b9a\u4e2d\u4f4d\u6570\u548c\u79fb\u52a8\u6570\u636e\uff0c\u8fd9\u6837\u5b9e\u73b0\u8d77\u6765\u6bd4\u8f83\u65b9\u4fbf\u3002</p> <pre><code>// \u5c06\u5f53\u524d\u8282\u70b9\u7684\u6570\u636e\u5206\u88c2\u4e00\u534a\u5230 _bro_node \u4e2d\nTp _m_split(node*&amp; _bro_node)\n{\n    // \u627e\u5230\u4e2d\u4f4d\u6570\n    int _mid = _sz &gt;&gt; 1;\n\n    // \u5927\u4e8e\u4e2d\u4f4d\u6570\u7684\u79fb\u52a8\u5230\u65b0\u7684\u8282\u70b9\u4e2d\n    // \u79fb\u52a8\u65f6\u6ce8\u610f\u8981\u5c06\u5b50\u8282\u70b9\u4e5f\u79fb\u52a8\u8d70\n    _bro_node-&gt;_son[0] = _son[_mid + 1];\n    if(_son[_mid + 1])\n        _son[_mid + 1]-&gt;_fa = _bro_node;\n    _son[_mid + 1] = nullptr;\n    for(int i = _mid + 1;i &lt; _sz;++i)\n    {\n        _bro_node-&gt;_m_insert(_keys[i],_son[i + 1]);\n        _son[i + 1] = nullptr;\n    }\n    // \u8282\u70b9\u6570\u636e\u6570\u91cf\u51cf\u5c11\u4e00\u534a\n    _sz &gt;&gt;= 1; \n    return std::move(_keys[_sz]);\n}\n</code></pre> <p>\u79fb\u52a8\u65f6\u8981\u5c06\u5b50\u8282\u70b9\u4e5f\u4e00\u8d77\u79fb\u52a8\uff0c</p> <p>\u5c06\u4e2d\u4f4d\u6570\u63d2\u5165\u5230\u7236\u8282\u70b9\u540e\uff0c\u53ef\u80fd\u4f1a\u5f15\u8d77\u7236\u8282\u70b9\u7684\u5206\u88c2\uff0c\u7236\u8282\u70b9\u5206\u88c2\u53c8\u4f1a\u5f15\u8d77\u5b83\u7684\u7236\u8282\u70b9\u5206\u88c2\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff0c\u5982\u679c\u5230\u6839\u8282\u70b9\uff0c\u6ca1\u6709\u7236\u8282\u70b9\u4e86\uff0c\u5c31\u8981\u521b\u5efa\u65b0\u7684\u6839\u4f5c\u4e3a\u5206\u88c2\u51fa\u7684\u4e24\u4e2a\u8282\u70b9\u7684\u7236\u8282\u70b9\u3002\u4e0b\u9762\u662f\u63d2\u5165\u7684\u5b9e\u73b0\uff1a</p> <pre><code>// \u5411\u6811\u4e2d\u63d2\u5165\u6570\u636e __k\nvoid _m_insert_key(const Tp&amp; __k)\n{\n    // \u7a7a\u6811\u521b\u5efa\u6839\u8282\u70b9\n    if(_m_root == nullptr)\n    {\n        _m_root = &amp;mem_pool[cnt++];\n        _m_root-&gt;_keys[0] = __k;\n        _m_root-&gt;_sz = 1;\n        return;\n    }\n\n    // \u67e5\u627e\u6811\u4e2d\u662f\u5426\u5df2\u7ecf\u5b58\u5728\u8be5\u6570\u636e\n    std::pair&lt;node*,int&gt; ret = _m_find(__k);\n    if(ret.second &gt;= 0) // \u5df2\u7ecf\u6709\u5c31\u4e0d\u518d\u63d2\u5165\n        return;\n\n    // \u5982\u679c ret.second == -1\uff0c_m_find \u4f1a\u8fd4\u56de\u627e\u5230\u7684\u53f6\u5b50\u8282\u70b9\u3002\n    // \u63d2\u5165\n    node* cur = ret.first;  // \u4ece\u53f6\u5b50\u8282\u70b9\u5f00\u59cb\n    node* bro = nullptr;    // \u8bb0\u5f55\u5206\u88c2\u51fa\u7684\u5144\u5f1f\u8282\u70b9\n    Tp n_val = __k;         // \u5f53\u524d\u8981\u63d2\u5165\u7684\u6570\u636e\n    while(true)\n    {\n        // \u5411 cur \u4e2d\u63d2\u5165 n_val \u548c\u4e0a\u4e00\u5c42\u5206\u88c2\u51fa\u7684\u8282\u70b9 bro\n        cur-&gt;_m_insert(n_val,bro);\n\n        // \u8282\u70b9\u6ca1\u6709\u6ee1\uff0c\u76f4\u63a5\u7ed3\u675f\n        if(!cur-&gt;_is_full())return;\n\n        // \u8282\u70b9\u6ee1\u4e86\uff0c\u5206\u88c2\u5144\u5f1f\u8282\u70b9 bro\n        bro = &amp;mem_pool[cnt++];\n        n_val = cur-&gt;_m_split(bro);\n\n        // cur \u6ca1\u6709\u7236\uff0c\u8bf4\u660e\u6839\u8282\u70b9\u6ee1\u4e86\uff0c\u521b\u5efa\u65b0\u6839\n        if(!cur-&gt;_fa)   \n        {\n            _m_root = &amp;mem_pool[cnt++];\n            cur-&gt;_fa = _m_root;\n            bro-&gt;_fa = _m_root;\n            _m_root-&gt;_keys[0] = std::move(n_val);\n            _m_root-&gt;_son[0] = cur;\n            _m_root-&gt;_son[1] = bro;\n            _m_root-&gt;_sz = 1;\n            return;\n        }\n        // \u8df3\u5230\u4e0a\u4e00\u5c42\uff0c\u5c06\u4e2d\u4f4d\u6570\u63d2\u5165\u5230\u7236\u8282\u70b9\u4e2d\n        cur = cur-&gt;_fa;\n    }\n}\n</code></pre>"},{"location":"DS/BTree/BTree/#_6","title":"\u5220\u9664","text":"<p>\u5220\u9664\u7684\u601d\u8def\u662f\u8981\u5c3d\u91cf\u501f\u5143\u7d20\uff0c\u5f53\u8282\u70b9\u4e2d\u5143\u7d20\u7684\u4e2a\u6570\u5c11\u4e8e \\(\\left \\lfloor \\frac{m}{2}  \\right \\rfloor\\) \u65f6\uff0c\u8981\u5411\u7236\u8282\u70b9\u501f\u6570\u636e\uff0c\u7236\u8282\u70b9\u6570\u636e\u4e0d\u591f\u5c31\u8981\u5411\u5144\u5f1f\u8282\u70b9\u501f\u6570\u636e\uff0c\u76f4\u5230\u6574\u68f5\u6811\u90fd\u501f\u4e0d\u5230\u65f6\uff0c\u624d\u5f00\u59cb\u5220\u9664\u8282\u70b9\uff0c\u8fd9\u91cc\u5220\u9664\u8282\u70b9\u7c7b\u4f3c\u521b\u5efa\u8282\u70b9\u7684\u9006\u8fc7\u7a0b\uff0c\u5c31\u662f\u5c06\u6839\u8282\u70b9\u548c\u6839\u7684\u5de6\u53f3\u5b50\u8282\u70b9\u5408\u5e76\u3002</p> B-Tree <pre><code>template&lt;class Tp,int Ord&gt;\nstruct _b_tree_node\n{\n    using node = _b_tree_node&lt;Tp,Ord&gt;;\n    // \u591a\u5f00\u4e00\u4e2a\u7a7a\u95f4\uff0c\u65b9\u4fbf\u63d2\u5165\u540e\u8fdb\u884c\u5206\u88c2\n    Tp _keys[Ord];\n    node* _son[Ord + 1] = { 0 };\n    node* _fa = nullptr;\n    int _sz = 0;    // key \u7684\u4e2a\u6570\n\n\n    // \u8fd4\u56de\u63d2\u5165\u540e\u662f\u5426\u6ee1\u4e86\n    bool _is_full() const noexcept\n    { return _sz == Ord;}\n\n    // \u5411\u8282\u70b9\u4e2d\u63d2\u5165\n    void _m_insert(const Tp&amp; __k,node* __s)\n    {\n        int i;\n        for(i = _sz - 1;i &gt;= 0;--i)\n        {\n            if(__k &lt; _keys[i])\n            {\n                std::swap(_keys[i],_keys[i + 1]);\n                std::swap(_son[i + 1],_son[i + 2]);\n            }\n            else break;\n        }\n        _keys[i + 1] = __k;\n        _son[i + 2] = __s;\n        if(__s) __s-&gt;_fa = this;\n        _sz++;\n    }\n\n    // \u5206\u88c2\u8282\u70b9\n    Tp _m_split(node*&amp; _bro_node) \n    {\n        int _mid = _sz &gt;&gt; 1;\n        _bro_node-&gt;_son[0] = _son[_mid + 1];\n        if(_son[_mid + 1])\n            _son[_mid + 1]-&gt;_fa = _bro_node;\n        _son[_mid + 1] = nullptr;\n        for(int i = _mid + 1;i &lt; _sz;++i)\n        {\n            _bro_node-&gt;_m_insert(_keys[i],_son[i + 1]);\n            _son[i + 1] = nullptr;\n        }\n        _sz &gt;&gt;= 1; \n        return std::move(_keys[_sz]);\n    }\n};\n\nconst int MAX = 200000;\n\n/**\n * @brief B-\u6811\n * @tparam Tp \u5143\u7d20\u7c7b\u578b\n * @tparam Ord B-\u6811\u7684\u9636\uff0c\u9636\u81f3\u5c11\u4e3a 3\u3002\n */\ntemplate&lt;class Tp,int Ord&gt;\nclass B_Tree\n{\nprivate:\n    static_assert(Ord &gt; 2,\" B-Tree's Order must greater than 2. \");\n\n    using node = _b_tree_node&lt;Tp,Ord&gt;;\n    using self = B_Tree&lt;Tp,Ord&gt;;\n\n    node* _m_root = nullptr;\n    // \u7b80\u5355\u5b9e\u73b0\u4e00\u4e2a\u5185\u5b58\u6c60\uff0c\u63d0\u9ad8\u6548\u7387\u3002\n    node* mem_pool;\n    int cnt = 0;\n\n    // \u627e\u5230 key \u5bf9\u5e94\u7684\u8282\u70b9\u548c\u5bf9\u5e94\u4f4d\u7f6e\n    std::pair&lt;node*,int&gt; _m_find(const Tp&amp; __k) noexcept\n    {\n        node* fa = nullptr;\n        node* cur = _m_root;\n        while(cur)\n        {\n            int __p;\n            __p = std::lower_bound(cur-&gt;_keys,cur-&gt;_keys + cur-&gt;_sz,__k) - cur-&gt;_keys;\n            if(cur-&gt;_keys[__p] == __k)return std::make_pair(cur,__p);\n            // for(__p =  0;__p &lt; cur-&gt;_sz ;++__p)\n            // {\n            //     if(__k &lt; cur-&gt;_keys[__p])break;\n            //     if(__k == cur-&gt;_keys[__p])return std::make_pair(cur,__p);\n            // }\n            fa = cur;\n            cur = cur-&gt;_son[__p];\n        }\n        // \u5230\u53f6\u5b50\u8282\u70b9\u8fd4\u56de \u53f6\u5b50 \u548c -1\n        return std::make_pair(fa,-1);\n    }\n\n\n    void _m_insert_key(const Tp&amp; __k)\n    {\n        // \u7a7a\u6811\u521b\u5efa\u6839\u8282\u70b9\n        if(_m_root == nullptr)\n        {\n            _m_root = &amp;mem_pool[cnt++];\n            _m_root-&gt;_keys[0] = __k;\n            _m_root-&gt;_sz = 1;\n            return;\n        }\n\n        std::pair&lt;node*,int&gt; ret = _m_find(__k);\n        if(ret.second &gt;= 0) // \u5df2\u7ecf\u6709\u5c31\u4e0d\u518d\u63d2\u5165\n        {\n            std::cerr &lt;&lt; \"B tree already has this keyword!\" &lt;&lt; std::endl;\n            return;\n        }\n\n        // \u63d2\u5165\n        node* cur = ret.first;\n        node* bro = nullptr;\n        Tp n_val = __k;\n        while(true)\n        {\n            cur-&gt;_m_insert(n_val,bro);\n\n            // \u8282\u70b9\u6ca1\u6709\u6ee1\uff0c\u76f4\u63a5\u7ed3\u675f\n            if(!cur-&gt;_is_full())return;\n\n            // \u5206\u88c2\u5144\u5f1f\u8282\u70b9\n            bro = &amp;mem_pool[cnt++];\n            n_val = cur-&gt;_m_split(bro);\n            if(!cur-&gt;_fa)   // \u6839\u8282\u70b9\u6ee1\u4e86\uff0c\u521b\u5efa\u65b0\u6839\n            {\n                _m_root = &amp;mem_pool[cnt++];\n                cur-&gt;_fa = _m_root;\n                bro-&gt;_fa = _m_root;\n                _m_root-&gt;_keys[0] = std::move(n_val);\n                _m_root-&gt;_son[0] = cur;\n                _m_root-&gt;_son[1] = bro;\n                _m_root-&gt;_sz = 1;\n                return;\n            }\n            // \u8df3\u5230\u4e0a\u4e00\u5c42\uff0c\u5c06\u4e2d\u4f4d\u6570\u63d2\u5165\u5230\u7236\u8282\u70b9\u4e2d\n            cur = cur-&gt;_fa;\n        }\n    }\n\n    // \u4e2d\u5e8f\u7684\u65b9\u5f0f\u904d\u5386\u6574\u4e2a\u6570\u7ec4\n    template&lt;class _Fun&gt;\n    void _m_dfs_(node* _it,_Fun _op) const\n    {\n        if(!_it) return;\n        for(int i = 0;i &lt;= _it-&gt;_sz;++i)\n        {\n            _m_dfs_(_it-&gt;_son[i],_op);\n            if(i &lt; _it-&gt;_sz) _op(_it-&gt;_keys[i]);\n        }\n    }\n\n\npublic:\n    B_Tree()\n        :mem_pool(new node[MAX])\n    { }\n\n    B_Tree(const self&amp; _ot)\n        :mem_pool(new node[MAX])\n    {\n        _ot.for_each([this](const Tp&amp; _ot_e) mutable {\n            this-&gt;insert(_ot_e);\n        });\n    }\n\n    B_Tree(self&amp;&amp; _ot)\n    {\n        this-&gt;_m_root = _ot._m_root;\n        this-&gt;mem_pool = _ot.mem_pool;\n        this-&gt;cnt = _ot.cnt;\n        _ot._m_root = nullptr;\n        _ot.mem_pool = nullptr;\n        _ot.cnt = 0;\n    }\n\n    // \u67e5\u627e key\n    Tp* find(const Tp&amp; key) noexcept\n    {\n        std::pair&lt;node*,int&gt; _ret = _m_find(key);\n        return (_ret.second &gt;= 0)?(_ret.first-&gt;_keys + _ret.second):nullptr; \n    }\n\n    void insert(const Tp&amp; key)\n    { _m_insert_key(key); }\n\n\n    template&lt;class _Fun&gt;\n    void for_each(_Fun _op) const\n    { _m_dfs_(_m_root,_op); }\n\n    ~B_Tree()\n    { delete[] mem_pool;}\n\n};\n</code></pre>"},{"location":"DS/Block/Block/","title":"\u5206\u5757","text":""},{"location":"DS/Block/Block/#_2","title":"\u5f15\u5165","text":"<p>\u5176\u5b9e\uff0c\u5206\u5757\u662f\u4e00\u79cd\u601d\u60f3\uff0c\u800c\u4e0d\u662f\u4e00\u79cd\u6570\u636e\u7ed3\u6784\u3002 \u5206\u5757\u7684\u57fa\u672c\u601d\u60f3\u662f\uff0c\u901a\u8fc7\u5bf9\u539f\u6570\u636e\u7684\u9002\u5f53\u5212\u5206\uff0c\u5e76\u5728\u5212\u5206\u540e\u7684\u6bcf\u4e00\u4e2a\u5757\u4e0a\u9884\u5904\u7406\u90e8\u5206\u4fe1\u606f\uff0c\u4ece\u800c\u8f83\u4e00\u822c\u7684\u66b4\u529b\u7b97\u6cd5\u53d6\u5f97\u66f4\u4f18\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u3002                                           \u2014\u2014 OI Wiki</p> <p>\u9762\u5bf9\u533a\u95f4\u95ee\u9898\uff0c\u6709\u6811\u72b6\u6570\u7ec4\uff0c\u7ebf\u6bb5\u6811\u7b49\u7b97\u6cd5\u3002\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a\\(n\\)\u7684\u6570\u7ec4\uff0c\u505a\\(m\\)\u6b21\u533a\u95f4\u4fee\u6539\u548c\u533a\u95f4\u67e5\u8be2\u3002\u5206\u5757\u7b97\u6cd5\u53ef\u4ee5\u7528\\(O(m\\sqrt n)\\)\u7684\u590d\u6742\u5ea6\u5b9e\u73b0\u64cd\u4f5c\uff0c\u6bd4\u6811\u72b6\u6570\u7ec4\u548c\u7ebf\u6bb5\u6811\u6162\uff0c\u4f46\u662f\u5bb9\u6613\u7406\u89e3\u3002</p>"},{"location":"DS/Block/Block/#_3","title":"\u5206\u5757\u7b97\u6cd5\u601d\u8def","text":"<p>\u6211\u4eec\u90fd\u77e5\u9053\u7ebf\u6bb5\u6811\u662f\u4e00\u9897\u9ad8\u5ea6\u4e3a\\(\\log n\\)\u7684\u4e8c\u53c9\u6811\uff0c\u800c\u5206\u5757\u6570\u7ec4\u53ef\u4ee5\u770b\u4f5c\u662f\u4e00\u4e2a\u9ad8\u5ea6\u4e3a\\(3\\)\u7684\u6811\uff1a</p> <p>\u6211\u4eec\u4ee5\u6700\u5178\u578b\u7684\u533a\u95f4\u64cd\u4f5c\u533a\u95f4\u548c\u4e3a\u4f8b\uff1aP3372</p> <p>\u6211\u4eec\u5c06\u6574\u4e2a\u6570\u7ec4\u5206\u4e3a\\(t\\)\u5757\uff0c\u6bcf\u5757\u957f\u5ea6\u4e3a\\(block\\)\uff0c\\(st[i]\\)\u8868\u793a\u7b2c\\(i\\)\u5757\u7684\u5f00\u59cb\u4f4d\u7f6e\uff0c\\(ed[i]\\)\u8868\u793a\u7b2c\\(i\\)\u5757\u7684\u7ed3\u675f\u4f4d\u7f6e\uff0c\\(add[i]\\)\u8868\u793a\u5bf9\u7b2c\\(i\\)\u4e2a\u5757\u6574\u4e2a\u52a0\u7684\u6570\uff0c\\(pos[i]\\)\u8868\u793a\u7b2c\\(i\\)\u4e2a\u5143\u7d20\u6240\u5728\u7684\u5757\uff0c\\(sun[i]\\)\u8868\u793a\u7b2c\\(i\\)\u5757\u7684\u533a\u95f4\u548c\u3002</p> <p>\\(block\\) \u53d6 \\(\\sqrt n\\) \u65f6\u6709\u6bd4\u8f83\u597d\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u4e4b\u540e\u4f1a\u5177\u4f53\u5206\u6790\u3002\u6211\u4eec\u5bf9\u4e0a\u8ff0\u53d8\u91cf\u8fdb\u884c\u7b80\u5355\u7684\u521d\u59cb\u5316\uff0c\u5373\u5b9e\u73b0\u5bf9\u6570\u7ec4\u7684\u5206\u5757\u3002</p> <pre><code>void init()\n{\n    block = sqrt(n);                        //\u5757\u5927\u5c0f\n    t = (n + block - 1) / block;            //\u5757\u7684\u4e2a\u6570 \n    for (int i = 1; i &lt;= n; ++i)\n    {\n        pos[i] = (i + block - 1) / block;   //\u7b2ci\u4e2a\u5143\u7d20\u6240\u5728\u5757\n        sum[pos[i]] += a[i];                //sum\u7ef4\u62a4\u533a\u95f4\u548c\n    }\n    for (int i = 1; i &lt;= t; ++i)\n    {\n        ed[i] = i * block;\n        st[i] = (i - 1) * block + 1;\n        add[i] = 0;\n    }\n    ed[t] = n;                              //\u6700\u540e\u4e00\u4e2a\u5757\u53ef\u80fd\u4e0d\u662f\u6574\u5757\n}\n</code></pre> <p>\u5206\u5757\u7684\u533a\u95f4\u548c\uff0c\u533a\u95f4\u4fee\u6539\u90fd\u975e\u5e38\u7b80\u5355\uff0c\u6211\u4eec\u80fd\u64cd\u4f5c\u7684\u53ea\u6709\u6574\u5757\u548c\u5757\u5185\u7684\u4e2a\u522b\u5143\u7d20\u3002\u5bf9\u6574\u5757\u7684\u4fee\u6539\u76f4\u63a5\u4fee\u6539\\(add\\)\u6570\u7ec4\u5373\u53ef\uff0c\u5bf9\u5757\u5185\u4e2a\u522b\u5143\u7d20\u7684\u4fee\u6539\u66b4\u529b\u5373\u53ef\u3002</p> <p><pre><code>// \u533a\u95f4\u4fee\u6539\nvoid update(int l, int r, ll d)\n{\n    int p = pos[l], q = pos[r];\n    // \u4fee\u6539\u533a\u95f4\u5728\u540c\u4e00\u4e2a\u5757\u5185\n    if (p == q)\n    {\n        sum[p] += (r - l + 1) * d;\n        for (int i = l; i &lt;= r; ++i)\n            a[i] += d;\n    }\n    else\n    {\n        // \u4fee\u6539\u6574\u5757\n        for (int i = p + 1; i &lt;= q - 1; ++i)\n            add[i] += d;  //\u6574\u5757\u589e\u52a0\u4e86d\n        // \u4fee\u6539\u5de6\u8fb9\u591a\u4f59\u90e8\u5206\n        for (int i = l; i &lt;= ed[p]; ++i)\n            a[i] += d,sum[p] += d;\n        // \u4fee\u6539\u53f3\u8fb9\u591a\u4f59\u90e8\u5206\n        for (int i = st[q]; i &lt;= r; ++i)\n            a[i] += d,sum[q] += d;\n    }\n}\n</code></pre> \u533a\u95f4\u67e5\u8be2\u540c\u7406\uff0c\u64cd\u4f5c\u6574\u5757\u548c\u8fb9\u754c\u7684\u5757\u5185\u5143\u7d20\u5373\u53ef\u3002</p>"},{"location":"DS/Block/Block/#_4","title":"\u65f6\u95f4\u590d\u6742\u5ea6\u5206\u6790","text":"<p>\u7ebf\u6bb5\u6811\u4e00\u6b21\u64cd\u4f5c\u7684\u590d\u6742\u5ea6\u662f\u6811\u7684\u9ad8\u5ea6\uff0c\u800c\u5206\u5757\u4e00\u6b21\u64cd\u4f5c\u7684\u590d\u6742\u5ea6\u53d6\u51b3\u4e8e\u5757\u7684\u5927\u5c0f\uff0c\u6211\u4eec\u53ef\u4ee5\u5199\u51fa\u4e00\u6b21\u64cd\u4f5c\u8fdb\u884c\u7684\u8fd0\u7b97\u6b21\u6570\u4e3a\\(n/block+\\Theta(block)\\)\uff0c\u5f53\\(block\\)\u53d6\\(\\sqrt n\\)\u662f\u8fbe\u5230\u6700\u5c0f\u503c\u3002</p>"},{"location":"DS/Block/Block/#_5","title":"\u57fa\u7840\u83ab\u961f","text":"<p>\u83ab\u961f\u7b97\u6cd5=\u79bb\u7ebf+\u5206\u5757+\u66b4\u529b</p> <p>\u5728\u7ebf\u7b97\u6cd5\u662f\u4ea4\u4e92\u5f0f\u7684\uff0c\u4e00\u95ee\u4e00\u7b54\uff0c\u524d\u9762\u7684\u7b54\u6848\u4f1a\u5e94\u7528\u4e8e\u540e\u9762\u7684\u7b54\u6848\u7684\u8be2\u95ee\u7684\uff0c\u88ab\u79f0\u4f5c\u5f3a\u5236\u5728\u7ebf\uff1b\u79bb\u7ebf\u7b97\u6cd5\u5219\u662f\u4e00\u6b21\u8bfb\u53d6\u6240\u6709\u7684\u67e5\u8be2\uff0c\u7136\u540e\u4e00\u8d77\u56de\u7b54\u3002\u56e0\u4e3a\u79bb\u7ebf\u7b97\u6cd5\u56e0\u4e3a\u6709\u6761\u4ef6\u8003\u8651\u6240\u6709\u67e5\u8be2\uff0c\u6240\u4ee5\u80fd\u591f\u5f97\u5230\u6548\u7387\u66f4\u9ad8\u7684\u7b97\u6cd5\u3002</p> <p>\u57fa\u7840\u7684\u83ab\u961f\u7b97\u6cd5\u662f\u4e00\u79cd\u79bb\u7ebf\u7b97\u6cd5\uff0c\u4ed6\u5e38\u7528\u4e8e\u4e0d\u4fee\u6539\u53ea\u67e5\u8be2\u7684\u533a\u95f4\u95ee\u9898\u3002\u590d\u6742\u5ea6\u4e3a\\(O(n\\sqrt{n})\\)\uff0c\u6548\u7387\u6ca1\u6709\u7ebf\u6bb5\u6811\uff0c\u6811\u72b6\u6570\u7ec4\u9ad8\uff0c\u4f46\u662f\u6613\u4e8e\u7406\u89e3\u7f16\u7801\u7b80\u5355\u3002</p> <p>\u6211\u4eec\u4ee5\u4e00\u9053\u533a\u95f4\u4e0d\u540c\u503c\u4e2a\u6570\u7684\u9898\u76ee\u4e3a\u4f8b\uff1aP1972HH\u7684\u9879\u94fe</p>"},{"location":"DS/Block/Block/#_6","title":"\u66b4\u529b\u6cd5","text":"<p>\u6211\u4eec\u7528\u6ed1\u52a8\u7a97\u53e3\u7684\u601d\u60f3\uff0c\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u628a\u6bcf\u4e2a\u67e5\u8be2\\([l_i,r_i]\\)\u770b\u4f5c\u4e00\u4e2a\u7a97\u53e3\uff0c\u6211\u4eec\u8981\u505a\u7684\u5c31\u662f\u5bf9\u4e8e\u6bcf\u4e00\u6b21\u67e5\u8be2\u5c31\u5c06\u5f53\u524d\u7684\u7a97\u53e3\\([L,R]\\)\u79fb\u52a8\u5230\u5bf9\u5e94\u67e5\u8be2\u7684\u4f4d\u7f6e\u3002</p> <p>\u5bf9\u4e8e\u8be5\u9898\u6211\u4eec\u7528\\(cnt[]\\)\u6570\u7ec4\u8bb0\u5f55\u5f53\u524d\u7a97\u53e3\u4e2d\u6bcf\u4e2a\u6570\u51fa\u73b0\u7684\u4e2a\u6570\u3002</p> <p>\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u5f53\\(L\\)\u6307\u9488\u5411\u53f3\u626b\u8fc7\u7684\u4f4d\u7f6e\uff0c\u5c31\u628a\u4ed6\u51fa\u73b0\u7684\u6b21\u6570\\(cnt[x_L]-1\\)\uff0c\\(R\\)\u6307\u9488\u5411\u53f3\u626b\u8fc7\u7684\u4f4d\u7f6e\uff0c\u5c31\u628a\u4ed6\u51fa\u73b0\u7684\u6b21\u6570\\(cnt[x_R]+1\\)\uff1b\u5411\u5de6\u626b\u8fc7\u65f6\uff0c\u4e0e\u4e0a\u8ff0\u60c5\u51b5\u76f8\u53cd\u3002</p> <p>\u5f53\\(cnt[x]\\)\u4ece\\(0\\)\u53d8\u4e3a\\(1\\)\u7684\u65f6\u5019\u8bf4\u660e\u6ed1\u52a8\u7a97\u53e3\u591a\u4e86\u4e00\u4e2a\u65b0\u7684\u6570\u5b57\uff0c\u6211\u4eec\u5c31\u8981\u7ed9\u7b54\u6848\\(ans\\)\u52a0\\(1\\)\uff0c\u5982\u679c\\(cnt[x]\\)\u4ece\\(1\\)\u53d8\u4e3a\\(0\\)\u8bf4\u660e\u7a97\u53e3\u5185\u5c11\u4e86\u4e00\u4e2a\u6570\u5b57\u5c31\u8981\u7ed9\u7b54\u6848\\(ans\\)\u51cf\\(1\\)\u3002</p>"},{"location":"DS/Block/Block/#_7","title":"\u8fc7\u7a0b","text":"<p>\u521d\u59cb\u65f6\u6211\u4eec\u7ef4\u62a4\u7684\u6ed1\u52a8\u7a97\u53e3\u6ca1\u6709\u5143\u7d20</p> <p>\u5982\u679c\u6211\u4eec\u4e0b\u4e00\u4e2a\u8981\u67e5\u8be2\u5bfb\u7684\u533a\u95f4\u662f\\([4,7]\\)\uff0c\u6211\u4eec\u8fd9\u65f6\u5c31\u8981\u79fb\u52a8\u6ed1\u52a8\u7a97\u53e3\u7684\u5de6\u53f3\u7aef\u70b9</p>"},{"location":"DS/Block/Block/#_8","title":"\u79fb\u52a8\u5de6\u7aef\u70b9","text":"<p>\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\\(cnt[5],cnt[7],cnt[8]\\)\u90fd\u5bf9\u5e94\u51cf\\(1\\)</p>"},{"location":"DS/Block/Block/#_9","title":"\u79fb\u52a8\u53f3\u7aef\u70b9","text":"<p>\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\\(cnt[5],cnt[7],cnt[8],cnt[6],cnt[2],cnt[1],cnt[4]\\)\u90fd\u52a0\\(1\\)</p> <p>\u5728\u8fd9\u4e24\u4e2a\u8fc7\u7a0b\u4e2d\u66f4\u65b0\u4e0d\u65ad\\(ans\\)\u7684\u503c\uff0c\u79fb\u52a8\u5b8c\u6210\u503c\\(ans\\)\u5c31\u662f\u5bf9\u5e94\u67e5\u8be2\u7684\u7b54\u6848\u3002</p>"},{"location":"DS/Block/Block/#_10","title":"\u7edf\u8ba1\u591a\u4e2a\u533a\u95f4","text":"<p>\u6309\u7167\u4e0a\u9762\u7684\u8fc7\u7a0b\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u6bcf\u6b21\u67e5\u8be2\u65f6\uff0c\u79fb\u52a8\\(L,R\\)\u6307\u9488\u5373\u53ef\u3002</p> <p>\u4f46\u662f\u8fd9\u6837\u505a\uff0c\u5728\u4e00\u4e9b\u60c5\u51b5\u4e0b\u590d\u6742\u5ea6\u975e\u5e38\u9ad8\uff0c\u6bd4\u5982\u7b2c\u4e00\u4e2a\u67e5\u8be2\u7684\u533a\u95f4\u65f6\\([1,1]\\)\uff0c\u4e0b\u4e00\u4e2a\u67e5\u8be2\u662f\\([n,n]\\)\uff0c\u8fd9\u6837\u5de6\u53f3\u6307\u9488\u90fd\u9700\u8981\u626b\u8fc7\u6574\u4e2a\u6570\u7ec4\uff0c\u8fd9\u6837\u5faa\u73af\u5f80\u590d\u7684\u8be2\u95ee\uff0c\u590d\u6742\u5ea6\u662f\\(O(n^2m)\\)\u3002</p> <p>\u83ab\u961f\u7b97\u6cd5\u5c31\u662f\u5bf9\u66b4\u529b\u6cd5\u7684\u8fd9\u4e2a\u95ee\u9898\u8fdb\u884c\u4f18\u5316</p>"},{"location":"DS/Block/Block/#_11","title":"\u83ab\u961f\u7b97\u6cd5","text":""},{"location":"DS/Block/Block/#_12","title":"\u66b4\u529b\u6cd5\u7684\u51e0\u4f55\u89e3\u91ca","text":"<p>\u6211\u4eec\u5c06\u533a\u95f4\\([L,R]\\)\u7684\u5de6\u53f3\u7aef\u70b9\u770b\u6210\u4e00\u4e2a\u70b9\u7684\u6a2a\u7eb5\u5750\u6807\u3002</p> <p>\u90a3\u4e48\u6211\u4eec\u5728\u4ece\u4e00\u4e2a\u533a\u95f4\u79fb\u52a8\u5230\u53e6\u4e00\u4e2a\u533a\u95f4\u65f6\uff0c\u5176\u5b9e\u5c31\u662f\u4ece\u4e00\u4e2a\u70b9\u79fb\u52a8\u5230\u53e6\u4e00\u4e2a\u70b9\uff0c\u5bf9\u5e94\u7684\u82b1\u8d39\u5c31\u662f\u4e24\u70b9\u95f4\u7684\u66fc\u54c8\u987f\u8ddd\u79bb</p> <p>\u6211\u4eec\u5c06\u6240\u4ee5\u7684\u67e5\u8be2\u90fd\u62bd\u8c61\u6210\u70b9\uff0c\u653e\u5230\u5750\u6807\u8f74\u91cc\u89c2\u5bdf\uff0c\u4e0a\u9762\u7684\u95ee\u9898\u5176\u5b9e\u8f6c\u5316\u4e3a\u6211\u4eec\u4ece\u539f\u70b9\u5f00\u59cb\uff0c\u6211\u4eec\u8981\u4e0d\u91cd\u4e0d\u6f0f\u7684\u8d70\u5b8c\u8fd9\u4e9b\u70b9\uff0c\u8d70\u5230\u4e00\u4e2a\u70b9\u5c31\u8bb0\u5f55\u4e00\u4e2a\u70b9\u7684\u7b54\u6848\u3002</p> <p>\u90a3\u4e48\u6211\u5bf9\u7b97\u6cd5\u7684\u4f18\u5316\u5c31\u662f\uff0c\u5982\u4f55\u80fd\u7528\u5c3d\u53ef\u80fd\u77ed\u7684\u66fc\u54c8\u987f\u8ddd\u79bb\uff0c\u53bb\u5b8c\u6210\u4e0a\u8ff0\u4efb\u52a1\uff0c\u5373\u6c42\u54c8\u5bc6\u987f\u6700\u77ed\u8def\u5f84\u95ee\u9898\uff0c\u8fd9\u662f\\(NP\\)\u95ee\u9898\uff0c\u6ca1\u6709\u591a\u9879\u5f0f\u590d\u6742\u5ea6\u7684\u89e3\u6cd5\u3002</p> <p>\u6211\u4eec\u8981\u505a\u7684\u5c31\u662f\u627e\u5230\u4e00\u4e2a\u8f83\u4f18\u89e3\u3002</p> <p>\u53ef\u4ee5\u770b\u51fa\uff0c\u8fd9\u4e2a\u95ee\u9898\u5982\u679c\u662f\u5728\u7ebf\u67e5\u8be2\u7684\u8bdd\uff0c\u8bbf\u95ee\u6bcf\u4e2a\u8282\u70b9\u7684\u987a\u5e8f\u662f\u968f\u673a\u7684</p> <p>\u8bbf\u95ee\u65f6\u53ef\u80fd\u4f1a\u4e00\u4f1a\u513f\u4e0a\u4e00\u4f1a\u513f\u4e0b\uff0c\u4e00\u4f1a\u513f\u5de6\u4e00\u4f1a\u513f\u53f3\uff0c\u8d70\u5f88\u591a\u91cd\u590d\u7684\u8def\uff0c\u5bfc\u81f4\u65f6\u95f4\u590d\u6742\u5ea6\u5f88\u9ad8\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u8981\u79bb\u7ebf\u5904\u7406\u8fd9\u4e9b\u67e5\u8be2\uff0c\u79bb\u7ebf\u65f6\u53ef\u4ee5\u4ee5\u4e00\u4e2a\u66f4\u597d\u7684\u987a\u5e8f\u53bb\u5904\u7406\u5b83\u4eec\u3002</p>"},{"location":"DS/Block/Block/#_13","title":"\u6734\u7d20\u4f18\u5316","text":"<p>\u6211\u4eec\u5bf9\u533a\u95f4\u4e00\u822c\u7684\u6392\u5e8f\u65b9\u5f0f\u5c31\u662f\u6309\u5de6\u7aef\u70b9\u8fdb\u884c\u6392\u5e8f\uff0c\u5de6\u7aef\u70b9\u76f8\u540c\u5c31\u6309\u53f3\u7aef\u70b9\u6392\u3002\u8fd9\u6837\u53ef\u4ee5\u51cf\u5c11\u6a2a\u5750\u6807\u7684\u91cd\u590d\u79fb\u52a8</p> <p>\u4f46\u662f\u8fd9\u6837\u4ece\u5750\u6807\u7684\u632f\u8361\u5e45\u5ea6\u53f3\u5f88\u5927\uff0c\u590d\u6742\u5ea6\u8fd8\u662f\u5f88\u79bb\u8c31\u3002</p>"},{"location":"DS/Block/Block/#_14","title":"\u83ab\u961f\u7b97\u6cd5","text":"<p>\u83ab\u961f\u7684\u6392\u5e8f\u65b9\u5f0f\u662f\u5148\u628a\u6570\u7ec4\u4e0b\u6807\u533a\u95f4\u5206\u5757\uff0c\u5de6\u7aef\u70b9\u6309\u5176\u6240\u5728\u7684\u5757\u6392\uff0c\u5de6\u7aef\u70b9\u6240\u5728\u5757\u76f8\u540c\uff0c\u6309\u53f3\u7aef\u70b9\u6392\u3002</p> <p>\u8fd9\u6837\u867d\u7136\u5de6\u53f3\u4ecd\u7136\u6709\u9707\u8361\uff0c\u4f46\u662f\u9707\u8361\u5e45\u5ea6\u88ab\u4fdd\u6301\u518d\u6765\\(\\sqrt{n}\\)\u5185\uff0c\u662f\u53ef\u4ee5\u63a5\u53d7\u7684\u3002</p> <p>\u8fd8\u6709\u4e00\u70b9\u53ef\u4ee5\u4f18\u5316\u3002\u6211\u4eec\u5f88\u5bb9\u6613\u53ef\u4ee5\u53d1\u73b0\uff0c\u5728\u5757\u95f4\u79fb\u52a8\u65f6\uff0c\u4e5f\u6709\u53ef\u80fd\u4f1a\u6709\u5f88\u5927\u7684\u9707\u52a8\uff0c\u6240\u4ee5\u5728\u6392\u5e8f\u65f6\u53ef\u4ee5\u4f7f\u7528\u5947\u5076\u6027\u6392\u5e8f\uff0c\u8ba9\u5947\u6570\u5757\u548c\u5076\u6570\u5757\u91c7\u7528\u76f8\u53cd\u7684\u5bf9\u53f3\u7aef\u70b9\u7684\u6392\u5e8f\u3002</p> <p>\u83ab\u961f\u7b97\u6cd5\u7684\u6838\u5fc3\u601d\u60f3\u5c31\u662f\u5206\u5757\uff0c\u4ed6\u628a\u9707\u8361\u9650\u5236\u5728\u4e86\\(\\sqrt{n}\\)\uff0c\u7f29\u77ed\u4e86\u8def\u5f84\u957f\u5ea6\uff0c\u63d0\u9ad8\u4e86\u6548\u7387\u3002</p>"},{"location":"DS/Block/Block/#_15","title":"\u5757\u5927\u5c0f\u5212\u5206","text":"<p>\u5757\u7684\u5927\u5c0f\u5bf9\u83ab\u961f\u7b97\u6cd5\u7684\u6548\u7387\u6709\u5f88\u5927\u7684\u5f71\u54cd\uff0c\u6709\u4e9b\u9898\u76ee\u53ea\u6709\u6b63\u786e\u5212\u5206\u5757\u7684\u5927\u5c0f\u624d\u80fd\u901a\u8fc7\u3002</p> <p>\u4e0b\u9762\u6211\u4eec\u8bbe\u6570\u7ec4\u957f\u5ea6\u4e3a\\(n\\)\uff0c\u67e5\u8be2\\(m\\)\u6b21\uff0c\u5757\u957f\u4e3a\\(t\\)</p> <p>\u90a3\u4e48\u603b\u5171\u5757\u7684\u4e2a\u6570\u5c31\u662f\\(\\frac{n}{t}\\)\uff0c\u6bcf\u4e2a\u5757\u90fd\u8981\u904d\u5386\u6574\u4e2a\u6570\u7ec4\u957f\u5ea6\uff0c\u79fb\u52a8\u6b21\u6570\u4e3a\\(\\frac{n^2}{t}\\)\uff0c\u6bcf\u6b21\u79fb\u52a8\u6709\u5de6\u53f3\u7684\u9707\u8361\uff0c\u4f46\u5e45\u5ea6\u4e0d\u8d85\u8fc7\\(t\\)\uff0c\u6240\u4ee5\u79fb\u52a8\u8ddd\u79bb\u518d\u52a0\u4e0a\\(mt\\)\u3002\u53ef\u4ee5\u63a8\u51fa\u6700\u540e\u590d\u6742\u5ea6\u4e3a:</p> \\[ O(\\frac{n^2}{t} + mt) \\] <p>\u8fd9\u4e2a\u51fd\u6570\u5f62\u5f0f\u5f88\u719f\u6089\uff0c\u5bf9\u52fe\u51fd\u6570\uff08\u5f62\u5982\uff1a\\(f(x)=ax+\\frac{b}{x}\\)\u7684\u51fd\u6570\uff0c\u5f53\\(x=\\sqrt{\\frac{b}{a}}\\)\u65f6\u53d6\u6781\u503c\uff09\uff0c\u6240\u4ee5\u5f53\\(t=\\frac{n}{\\sqrt{m}}\\)\u65f6\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u6700\u4f18\u7684\uff0c\u662f\\(O(n\\sqrt{m})\\)\u3002</p> <p>\u53c2\u8003\u6587\u7ae0\uff1a</p> <p>Oi-Wiki \u666e\u901a\u83ab\u961f\u7b97\u6cd5</p> <p>\u767e\u5ea6\u767e\u79d1-\u5bf9\u52fe\u51fd\u6570</p> <p>\u300a\u7b97\u6cd5\u7ade\u8d5b\u300b\u4e0a\u518c - \u7f57\u6c38\u519b</p>"},{"location":"DS/Block/Problems/","title":"Exercise","text":"\u9898\u76ee \u96be\u5ea6 \u77e5\u8bc6 P2801 \u63d0\u9ad8+/\u7701\u9009\u2212 \u533a\u95f4k\u5927\u503c P3203 \u7701\u9009/NOI\u2212 \u5206\u5757\u5355\u70b9\u4fee\u6539\uff0c\u5355\u70b9\u67e5\u8be2 \u533a\u95f4\u4e0e\u7edd\u5bf9\u503c \u83ab\u961f+\u6811\u72b6\u6570\u7ec4"},{"location":"DS/HTable/HTable/","title":"\u54c8\u5e0c\u8868","text":""},{"location":"DS/HTable/HTable/#_2","title":"\u5b9a\u4e49","text":"<p>\u54c8\u5e0c\u8868\u53c8\u79f0\u6563\u5217\u8868\uff0c\u54c8\u5e0c\u8868\u4e2d\u5b58\u50a8\u7684\u662f\u4e00\u4e9b\u952e\u503c\u5bf9 \\(key-value\\) \uff0c\u6bcf\u4e2a \\(key\\) \u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2a\u54c8\u5e0c\u51fd\u6570 \\(f\\) \uff0c\u5f97\u5230 \\(value\\) \u7684\u5b58\u50a8\u5730\u5740\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5173\u952e\u5b57 \\(key\\) \u901a\u8fc7\u54c8\u5e0c\u8868\u5feb\u901f\u5f97\u5230\u5176\u5bf9\u5e94\u7684\\(value\\)\uff0c\u5373 \\(value=hash(key)\\)\u3002</p> <p>\u7c7b\u4f3c\u6570\u7ec4\u7684\u4e0b\u6807\u8bbf\u95ee\uff0c\\(value=arr[index]\\)\u3002</p> <p>\u4e0d\u540c\u7684\u662f\u54c8\u5e0c\u8868\u4e2d\u7684 \\(key\\) \u4e0d\u4e00\u5b9a\u662f\u4e0b\u6807\u7d22\u5f15\uff0c\u53ef\u4ee5\u662f\u5b57\u7b26\u4e32\uff0c\u7c7b\u7b49\u7b49\u3002\u53ea\u8981\u6211\u4eec\u80fd\u6784\u9020\u51fa\u5bf9\u5e94\u7684\u54c8\u5e0c\u51fd\u6570 \\(f\\) \u4f7f\u6bcf\u4e2a\u5173\u952e\u5b57\u80fd\u6620\u5c04\u5230\u552f\u4e00\u4e00\u4e2a\u5b58\u50a8\u7a7a\u95f4\u4e0a\u3002</p> <p>\u5728\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u6bcf\u4e2a \\(key\\) \u503c\u80fd\u6620\u5c04\u5230\u7684\u5730\u5740\u662f\u4e0d\u4e00\u6837\u7684\u3002\u4f46\u662f\u73b0\u5b9e\u4e2d\u5e38\u5e38\u4f1a\u51fa\u73b0 \\(f(k_1)=f(k_2)\\) \u7684\u60c5\u51b5\uff0c\u8fd9\u88ab\u53eb\u505a\u51b2\u7a81</p>"},{"location":"DS/HTable/HTable/#_3","title":"\u54c8\u5e0c\u51fd\u6570","text":"<p>\u54c8\u5e0c\u8868\u7684\u6838\u5fc3\u5c31\u662f\u54c8\u5e0c\u51fd\u6570\uff0c\u4e00\u4e2a\u597d\u7684\u54c8\u5e0c\u51fd\u6570\u80fd\u6709\u6548\u63d0\u9ad8\u54c8\u5e0c\u8868\u7684\u6548\u7387\u3002</p> <p>\u4e00\u4e2a\u597d\u7684\u54c8\u5e0c\u51fd\u6570\u6709\u4ee5\u4e0b\u7279\u70b9\uff1a - \u51b2\u7a81\u5c11 - \u8ba1\u7b97\u65f6\u95f4\u590d\u6742\u5ea6\u4f4e - \u6563\u5217\u5730\u5740\u5206\u5e03\u5747\u5300</p> <p>\u5e38\u89c1\u7684\u54c8\u5e0c\u51fd\u6570\u6709 - \u76f4\u63a5\u5b9a\u503c\u6cd5\uff1a\u5c31\u662f\u53d6\\(key\\)\u7684\u4e00\u4e2a\u7ebf\u4e0b\u51fd\u6570\u4e3a\u6563\u5217\u5730\u5740\u3002 - \u9664\u7559\u4f59\u6570\u6cd5\uff1a\u8bbe\u5b9a\u4e00\u4e2a\u6a21\u6570\\(mod\\)\uff0c\u5bf9\\(key\\)\u53d6\u4f59\u6570\uff0c\u5b58\u5230\u5bf9\u5e94\u4e0b\u6807\u7684\u5730\u5740\u4e2d\u3002 - \u5e73\u65b9\u53d6\u4e2d\u6cd5\uff1a\u53d6\\(key\\)\u7684\u5e73\u65b9\u540e\u4e2d\u95f4\u7684\u51e0\u4f4d\u6570\u4e3a\u6563\u5217\u5730\u5740\u3002</p>"},{"location":"DS/HTable/HTable/#_4","title":"\u51b2\u7a81\u5904\u7406","text":"<p>\u65e0\u8bba\u662f\u600e\u6837\u7684\u54c8\u5e0c\u51fd\u6570\uff0c\u603b\u4f1a\u51fa\u73b0\u51b2\u7a81\uff0c\u90a3\u4e48\u5982\u4f55\u5904\u7406\u51b2\u7a81\u5c31\u5f88\u91cd\u8981\u4e86\u3002</p> <p>\u4e00\u822c\u5904\u7406\u51b2\u7a81\u6709\u4e24\u79cd\u65b9\u6cd5 - \u5f00\u6563\u5217 - \u95ed\u6563\u5217</p>"},{"location":"DS/HTable/HTable/#_5","title":"\u5f00\u6563\u5217","text":"<p>\u5f00\u6563\u5217\u7684\u601d\u8def\u662f\u5728\u6bcf\u4e2a\u5730\u5740\u5904\u7ef4\u62a4\u4e00\u4e2a\u94fe\u8868\uff0c\u6bcf\u5f53\u9047\u5230\u51b2\u7a81\u65f6\u5c31\u5c06\u952e\u503c\u52a0\u5230\u94fe\u8868\u4e2d\u3002</p> <p>\u67e5\u627e\u65f6\uff0c\u5c31\u904d\u5386\u5bf9\u5e94\u5730\u5740\u5904\u7684\u94fe\u8868\uff0c\u5bf9\u5176\u4e2d\u7684\u6bcf\u4e2a\u6570\u636e\u6bd4\u8f83\u5176\u952e\u503c\u4e0e\u67e5\u8be2\u7684\u952e\u503c\u662f\u5426\u4e00\u81f4\u3002</p>"},{"location":"DS/HTable/HTable/#_6","title":"\u95ed\u6563\u5217","text":"<p>\u95ed\u6563\u5217\u7684\u601d\u8def\u662f\u5f53\u67d0\u4e2a\u5b58\u50a8\u4f4d\u7f6e\u51fa\u73b0\u51b2\u7a81\u65f6\uff0c\u5c31\u6309\u7167\u4e00\u5b9a\u65b9\u6cd5\u5bfb\u627e\u4e00\u4e2a\u6ca1\u6709\u51b2\u7a81\u7684\u5730\u65b9\uff0c\u518d\u5b58\u503c\u3002</p> <p>\u5982\u7ebf\u6027\u63a2\u6d4b\u6cd5\u5982\u679c\u5728\\(d\\)\u5904\u53d1\u751f\u51b2\u7a81\uff0c\u5c31\u4f9d\u6b21\u68c0\u67e5\\(d + 1\uff0cd + 2\\dots\\)</p>"},{"location":"DS/HTable/HTable/#_7","title":"\u7ade\u8d5b\u4e2d\u7684\u4f7f\u7528","text":"<p>\u4e00\u822c\u54c8\u5e0c\u8868\u5728\u5404\u4e2a\u8bed\u8a00\u7684\u5e93\u4e2d\u90fd\u6709\u5bf9\u5e94\u7684\u5b9e\u73b0\uff0c\u5982\\(c++\\)\u4e2d\u7684\\(map\uff0cunordered\\_ map\\)\uff08\\(map\\)\u662f\u7528\u7ea2\u9ed1\u6811\u5b9e\u73b0\u7684\uff0c\u4e5f\u80fd\u5b9e\u73b0\u54c8\u5e0c\u8868\u7684\u529f\u80fd\uff0c\u4f46\u662f\u4f1a\u591a\u4e00\u4e2a\\(\\log n\\)\u6392\u5e8f\u7684\u590d\u6742\u5ea6\uff09\uff0c\\(Python\\)\u4e2d\u7684\u5b57\u5178\\(dict()\\)\u3002</p> <p>\u6240\u4ee5\u5728\u7ade\u8d5b\u4e2d\u4e00\u822c\u76f4\u63a5\u8c03\u5e93\u3002</p> <p>\u53c2\u8003\u6587\u7ae0\uff1a</p> <p>\u300a\u5927\u8bdd\u6570\u636e\u7ed3\u6784\u300b Oi Wiki - \u54c8\u5e0c\u8868</p>"},{"location":"DS/HTable/Problems/","title":"Exercise","text":"\u9898\u76ee \u96be\u5ea6 \u77e5\u8bc6 LC.187 \u4e2d\u7b49 \u54c8\u5e0c\u8868 LC.1 \u7b80\u5355 \u54c8\u5e0c\u8868\u4f18\u5316\u679a\u4e3e"},{"location":"DS/Heap/BinHp/","title":"\u4e8c\u53c9\u5806","text":""},{"location":"DS/Heap/BinHp/#_2","title":"\u5b9a\u4e49","text":"<p>\u4e8c\u53c9\u5806\u662f\u4e00\u4e2a\u53ef\u4ee5\u88ab\u770b\u505a\u4e00\u68f5\u6811\uff08\u5b8c\u5168\u4e8c\u53c9\u6811\uff09\u7684\u6570\u7ec4\u5bf9\u8c61\u3002\u5e76\u4e14\u5806\u603b\u662f\u6ee1\u8db3\u4e0b\u9762\u4e24\u6761\u6027\u8d28\uff1a - \u5806\u4e2d\u67d0\u4e2a\u8282\u70b9\u7684\u503c\u603b\u662f\u4e0d\u5927\u4e8e\u6216\u4e0d\u5c0f\u4e8e\u5176\u7236\u8282\u70b9\u7684\u503c - \u5806\u603b\u662f\u4e00\u68f5\u5b8c\u5168\u4e8c\u53c9\u6811</p>"},{"location":"DS/Heap/BinHp/#_3","title":"\u903b\u8f91\u7ed3\u6784&amp;\u7269\u7406\u7ed3\u6784","text":"<p>\u6839\u636e\u8282\u70b9\u7684\u6807\u53f7\u548c\u4e0b\u6807\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u51fa\u4e00\u5b9a\u7684\u89c4\u5f8b\uff0c\u8fd9\u6837\u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4\u7684\u4e0b\u6807\\(i\\)\uff0c\u6211\u4eec\u53ef\u4ee5\u5f88\u5bb9\u6613\u7684\u7684\u8ba1\u7b97\u5f97\u5230\u5b83\u7684\u7236\u8282\u70b9\u548c\u5de6\u53f3\u5b69\u5b50\uff1a</p> \\[ left=2i\\\\ \\] \\[ right=2i+1\\\\ \\] \\[ parent=\\left \\lfloor \\frac{i}{2} \\right \\rfloor \\] <p>\u672c\u6587\u5b9e\u73b0\u7684\u5806\u90fd\u662f\u4ee5\u4e0b\u6807\u4ece\\(1\\)\u5f00\u59cb\u6765\u5b9e\u73b0\u7684\uff0c\u4ece\\(0\\)\u5f00\u59cb\u5927\u540c\u5c0f\u5f02\u3002</p>"},{"location":"DS/Heap/BinHp/#_4","title":"\u5806\u7684\u5206\u7c7b","text":"<p>\u6839\u636e\u5806\u4e0d\u540c\u7684\u5806\u5e8f\u6027\u53ef\u4ee5\u5c06\u5806\u5206\u4e3a\u5927\u5806\u548c\u5c0f\u5806 \u5728\u5927\u5806\u4e2d\uff0c\u5806\u6ee1\u8db3\u6700\u5927\u5806\u6027\u8d28\uff0c\u5373\u9664\u4e86\u6839\u4ee5\u5916\u7684\u6240\u6709\u8282\u70b9\\(i\\)\u90fd\u8981\u6ee1\u8db3\uff1a</p> \\[ a[parent(i)]\\ge a[i] \\] <p>\u5728\u5c0f\u5806\u4e2d\uff0c\u5806\u6ee1\u8db3\u6700\u5c0f\u5806\u6027\u8d28\uff0c\u5373\u9664\u4e86\u6839\u4ee5\u5916\u7684\u6240\u6709\u8282\u70b9\\(i\\)\u90fd\u8981\u6ee1\u8db3\uff1a</p> \\[ a[parent(i)]\\le a[i] \\]"},{"location":"DS/Heap/BinHp/#_5","title":"\u5806\u7684\u5b9e\u73b0","text":""},{"location":"DS/Heap/BinHp/#_6","title":"\u5efa\u5806","text":"<p>\u5efa\u5806\u9700\u8981\u4f9d\u9760\u5411\u4e0b\u8c03\u6574\u7b97\u6cd5\u6765\u5b9e\u73b0</p>"},{"location":"DS/Heap/BinHp/#_7","title":"\u5411\u4e0b\u8c03\u6574\u7b97\u6cd5","text":"<p>\u5411\u4e0b\u8c03\u6574\u7b97\u6cd5\u6210\u7acb\u7684\u524d\u63d0\u662f\uff0c\u5de6\u53f3\u5b50\u6811\u90fd\u6ee1\u8db3\u5927\u5806\uff08\u5c0f\u5806\uff09\u7684\u6027\u8d28\u8be5\u7b97\u6cd5\u7684\u8f93\u5165\u662f\u6570\u7ec4\\(arr\\)\u548c\u53ef\u80fd\u4e0d\u6ee1\u8db3\u5927\u5806\uff08\u5c0f\u5806\uff09\u6027\u8d28\u7684\u8282\u70b9\\(i\\)\uff0c\u7b97\u6cd5\u901a\u8fc7\u8ba9\\(arr[i]\\)\u7684\u503c\u5728\u5927\u5806\u4e2d\u9010\u7ea7\u4e0b\u964d\uff0c\u4ece\u800c\u4f7f\u5f97\u4ee5\\(i\\)\u4e3a\u6839\u8282\u70b9\u7684\u5806\uff0c\u91cd\u5199\u9075\u5faa\u5927\u5806\u7684\u6027\u8d28\u3002\u4e0b\u9762\u662f\u5411\u4e0b\u8c03\u6574\u7b97\u6cd5\u7684\u8fd0\u884c\u8fc7\u7a0b\uff1a</p> <p>\u8fd9\u91cc\u4ee5\u5b9e\u73b0\u5927\u5806\u4e3a\u4f8b\uff0c\u901a\u8fc7\u4e0e\u5de6\u53f3\u5b50\u8282\u70b9\u4e2d\u7684\u8f83\u5927\u503c\u503c\u8fdb\u884c\u6bd4\u8f83\uff0c\u6765\u5224\u65ad\u662f\u5426\u6ee1\u8db3\u5806\u5e8f\u6027\uff0c\u4e0d\u6ee1\u8db3\u5bf9\u5e8f\u6027\u5c31\u5c06\u6839\u8282\u70b9\u7684\u503c\u4e0e\u5b50\u8282\u70b9\u8fdb\u884c\u4ea4\u6362\u3002\u91cd\u590d\u6b64\u8fc7\u7a0b\uff0c\u76f4\u5230\u6ee1\u8db3\u5bf9\u5e8f\u6027\u6216\u5230\u8fbe\u53f6\u5b50\u8282\u70b9\u5c31\u505c\u6b62\u7b97\u6cd5\u3002</p> <pre><code>void Heap::AdjustDown(int* arr,int i,int n) {\n\u00a0 \u00a0 int maxc = i &lt;&lt; 1;//\u627e\u5230\u5b50\u8282\u70b9\n\u00a0 \u00a0 while (maxc &lt;= n) {\n\u00a0 \u00a0 \u00a0 \u00a0 //\u9009\u51fa\u4e24\u4e2a\u5b50\u8282\u70b9\u4e2d\u5927\u7684\u90a3\u4e00\u4e2a\n\u00a0 \u00a0 \u00a0 \u00a0 if ((maxc | 1) &lt;= n &amp;&amp; arr[maxc] &lt; arr[maxc | 1])\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 maxc |= 1;\n\u00a0 \u00a0 \u00a0 \u00a0 //\u4e0d\u6ee1\u8db3\u5927\u5806\u6027\u8d28\uff0c\u5c31\u5c06\u4e8c\u8005\u4ea4\u6362\n\u00a0 \u00a0 \u00a0 \u00a0 if (arr[i] &lt; arr[maxc]) {\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 swap(arr[i], arr[maxc]);\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 i = maxc, maxc = i &lt;&lt; 1;\n\u00a0 \u00a0 \u00a0 \u00a0 }\n\u00a0 \u00a0 \u00a0 \u00a0 else break;\n\u00a0 \u00a0 }\n}\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(\\log n)\\)\u3002</p>"},{"location":"DS/Heap/BinHp/#_8","title":"\u5efa\u5806\u601d\u8def","text":"<p>\u660e\u767d\u7684\u5411\u4e0b\u8c03\u6574\u7b97\u6cd5\u6211\u4eec\u5c31\u53ef\u4ee5\u8fdb\u884c\u5efa\u5806\u4e86\u3002</p> <p>\u5177\u4f53\u601d\u8def\u662f\u7528\u81ea\u5e95\u5411\u4e0a\u7684\u65b9\u6cd5\uff0c\u5229\u7528\u5411\u4e0b\u8c03\u6574\u7b97\u6cd5\uff0c\u628a\u4e00\u4e2a\u65e0\u5e8f\u7684\u6ee1\u4e8c\u53c9\u6811\u8f6c\u5316\u4e3a\u5927\u5806\uff08\u5c0f\u5806\uff09\u3002</p> <p>\u6811\u4e2d\u6bcf\u4e00\u4e2a\u53f6\u8282\u70b9\u90fd\u53ef\u4ee5\u770b\u6210\u53ea\u5305\u542b\u4e00\u4e2a\u5143\u7d20\u7684\u5927\u5806\uff08\u5c0f\u5806\uff09\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4ece\u6700\u540e\u4e00\u4e2a\u975e\u53f6\u5b50\u8282\u70b9\u5f00\u59cb\u5230\u6839\u8282\u70b9\u90fd\u8c03\u7528\u4e00\u6b21\u5411\u4e0b\u8c03\u6574\u7b97\u6cd5\uff0c\u5373\u53ef\u3002</p> <p>\u4e0b\u9762\u662f\u5efa\u5806\u7684\u8fc7\u7a0b\uff1a</p> <p><pre><code>void Heap::BuildHeap(int* arr,int n){\n    for(int i=n&gt;&gt;1;i&gt;=1;--i)\n        AdjustDown(arr,i,n);\n}\n</code></pre> \u5efa\u5806\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(n)\\)\uff0c\u8bc1\u660e\u89c1\u7b97\u6cd5\u5bfc\u8bba\u7b2c\u4e09\u7248\\(P88\\)</p>"},{"location":"DS/Heap/BinHp/#_9","title":"\u63d2\u5165","text":"<p>\u5b9e\u73b0\u63d2\u5165\u64cd\u4f5c\u9700\u8981\u5411\u4e0b\u8c03\u6574\u7b97\u6cd5\u3002</p>"},{"location":"DS/Heap/BinHp/#_10","title":"\u5411\u4e0b\u8c03\u6574\u7b97\u6cd5","text":"<p>\u548c\u5411\u4e0b\u8c03\u6574\u7b97\u6cd5\u4e00\u6837\uff0c\u5411\u4e0a\u8c03\u6574\u7b97\u6cd5\u6210\u7acb\u7684\u524d\u63d0\u662f\u5de6\u53f3\u5b50\u6811\u90fd\u6ee1\u8db3\u5927\u5806\uff08\u5c0f\u5806\uff09\u7684\u6027\u8d28\uff0c\u7b97\u6cd5\u7684\u8f93\u5165\u540c\u6837\u662f\u6570\u7ec4  \\(arr\\) \u548c\u4e0b\u6807\\(i\\)\uff0c\u4e0e\u5411\u4e0b\u8c03\u6574\u7b97\u6cd5\u4e0d\u540c\u7684\u662f\uff0c\u5411\u4e0a\u8c03\u6574\u7b97\u6cd5\u662f\u901a\u8fc7\u8ba9\\(arr[i]\\)\u7684\u503c\u5728\u5927\u5806\u4e2d\u201c\u9010\u7ea7\u4e0a\u5347\u201d\uff0c\u4ece\u800c\u4f7f\u5f97\u4ee5\\(i\\)\u4e3a\u6839\u8282\u70b9\u7684\u5b50\u6811\u91cd\u65b0\u9075\u5faa\u5927\u5806\u7684\u6027\u8d28\u3002</p> <p>\u56e0\u4e3a\u4e0e\u5411\u4e0a\u8c03\u6574\u7b97\u6cd5\u7c7b\u4f3c\uff0c\u8fd9\u91cc\u76f4\u63a5\u7ed9\u51fa\u5b9e\u73b0\uff1a</p> <p><pre><code>void PriorityQueue::AdjustUp(int i) {\n\u00a0 \u00a0 //\u627e\u7236\u8282\u70b9\n\u00a0 \u00a0 int p = i &gt;&gt; 1;\n\u00a0 \u00a0 //\u8fd0\u884c\u5230\u6839\u8282\u70b9\u4e3a\u6b62\n\u00a0 \u00a0 while (i &gt; 1) {\n\u00a0 \u00a0 \u00a0 \u00a0 //\u4e0d\u6ee1\u8db3\u5927\u5806\u6027\u8d28\u5c31\u5c31\u6362\u5176\u503c\n\u00a0 \u00a0 \u00a0 \u00a0 if (arr[i] &gt; arr[p]) {\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 swap(arr[p], arr[i]);\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 i = p, p = i &gt;&gt; 1;\n\u00a0 \u00a0 \u00a0 \u00a0 }\n\u00a0 \u00a0 \u00a0 \u00a0 else break;\n\u00a0 \u00a0 }\n}\n</code></pre> \u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(\\log n)\\)\u3002</p> <p>\u4e86\u89e3\u4e86\u5411\u4e0a\u8c03\u6574\u7b97\u6cd5\u63d2\u5165\u5c31\u975e\u5e38\u7b80\u5355\u4e86\uff0c\u5c31\u662f\u5728\u5806\u7684\u672b\u5c3e\u52a0\u4e0a\u8981\u63d2\u5165\u7684\u6570\u5b57\uff0c\u7136\u540e\u5bf9\u5176\u8c03\u7528\u5411\u4e0a\u8c03\u6574\u7b97\u6cd5\uff0c\u627e\u5230\u5176\u6ee1\u8db3\u5806\u6027\u8d28\u7684\u4f4d\u7f6e\u3002 <pre><code>void PriorityQueue::push(int x) {\n\u00a0 \u00a0 arr.push_back(x);\n\u00a0 \u00a0 n++;\n\u00a0 \u00a0 AdjustUp(n);\n}\n</code></pre> \u65f6\u95f4\u590d\u6742\u5ea6\\(O(\\log n)\\)</p>"},{"location":"DS/Heap/BinHp/#_11","title":"\u5220\u9664","text":"<p>\u5806\u53ea\u80fd\u5220\u9664\u5806\u9876\u5143\u7d20\u3002</p> <p>\u5220\u9664\u7684\u8fc7\u7a0b\u662f\uff0c\u5148\u5c06\u6839\u8282\u70b9\u4e0e\u672b\u5c3e\u5143\u7d20\u4f4d\u7f6e\u4ea4\u6362\uff0c\u7136\u540e\u5220\u9664\u672b\u5c3e\u5143\u7d20\uff0c\u5728\u5bf9\u6839\u8282\u70b9\u8c03\u7528\u5411\u4e0b\u8c03\u6574\u7b97\u6cd5\u5373\u53ef\u3002</p> <p><pre><code>int PriorityQueue::pop() {\n\u00a0 \u00a0 if (n == 0) {\n\u00a0 \u00a0 \u00a0 \u00a0 cout &lt;&lt; \"heap underflow\\n\";\n\u00a0 \u00a0 \u00a0 \u00a0 exit(-1);\n\u00a0 \u00a0 }\n\u00a0 \u00a0 int maxres = arr[1];\n\u00a0 \u00a0 swap(arr[1], arr[n]);\n\u00a0 \u00a0 arr.pop_back();\n    n--;\n\u00a0 \u00a0 AdjustDown(1);\n\u00a0 \u00a0 return maxres;\n}\n</code></pre> \u65f6\u95f4\u590d\u6742\u5ea6\\(O(\\log n)\\)</p>"},{"location":"DS/Heap/BinHp/#_12","title":"\u5806\u7684\u5e94\u7528","text":""},{"location":"DS/Heap/BinHp/#_13","title":"\u5806\u6392\u5e8f","text":"<p>\u6392\u5e8f\u5f00\u59cb\u524d\uff0c\u6211\u4eec\u9996\u5148\u8981\u5c06\u8f93\u5165\u7684\u6570\u7ec4 \\(arr\\) \u6839\u636e\u8981\u6392\u7684\u987a\u5e8f\u5efa\u7acb\u5806\uff0c\u8fd9\u91cc\u4ee5\u5347\u5e8f\u4e3a\u4f8b\uff0c\u5efa\u5927\u5806\u3002</p> <p>\u5806\u4e2d\u7684\u6570\u636e\u8d77\u521d\u6709 \\(n\\) \u4e2a\u5143\u7d20\uff08\u5373\u6570\u7ec4\u5143\u7d20\u4e2a\u6570\uff09\uff0c\u6bcf\u6b21\u6211\u4eec\u5c06\u6839\u8282\u70b9 \\(arr[n]\\) \u4e0e \\(arr[1]\\) \u4ea4\u6362\uff0c\u7136\u540e\u53bb\u6389\u8282\u70b9 \\(n\\) \uff0c\u518d\u5bf9\u6839\u8282\u70b9\u8c03\u7528\u5411\u4e0b\u8c03\u6574\u7b97\u6cd5\uff0c\u8fd9\u6837\u5c31\u5728 \\([1,n-1]\\) \u7684\u8303\u56f4\u5185\u53f3\u6784\u9020\u4e86\u4e00\u4e2a\u65b0\u7684\u5927\u5806\uff0c\u540c\u65f6\u5b8c\u6210\u4e86\u4e00\u4e2a\u5143\u7d20\u7684\u6392\u5e8f\u3002\u5806\u6392\u5e8f\u5c31\u662f\u4e0d\u65ad\u91cd\u590d\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u76f4\u5230\u5806\u4e2d\u53ea\u5269\u4e00\u4e2a\u5143\u7d20\u65f6\uff0c\u5c31\u5c06\u6574\u4e2a\u6570\u7ec4\u6392\u597d\u5e8f\u4e86\u3002</p> <p>\u4e0b\u9762\u662f\u6392\u5e8f\u4e00\u4e2a\u5143\u7d20\u7684\u8fc7\u7a0b\uff1a</p> <p><pre><code>void Heap::HeapSort(int* arr,int n){\n    //\u5efa\u5806\n    //\u65f6\u95f4\u590d\u6742\u5ea6O(n)\n    BuildHeap(arr,n);\n    //\u6392\u5e8f\n    //\u65f6\u95f4\u590d\u6742\u5ea6O(nlogn)\n    for(int i=n;i&gt;1;--i){\n        swap(arr[1],arr[i]);\n        AdjustDown(arr,1,i-1);\n    }\n}\n</code></pre> \u65f6\u95f4\u590d\u6742\u5ea6\u4e3a: \\(O(n\\log n)\\)</p>"},{"location":"DS/Heap/BinHp/#_14","title":"\u4f18\u5148\u961f\u5217","text":"<p>\u8fd9\u91cc\u5bf9\u5806\u8fdb\u884c\u7b80\u5355\u7684\u5b9e\u73b0\uff0c\u5728\u89e3\u9898\u65f6\u4e0d\u9700\u8981\u81ea\u5df1\u624b\u5199\uff0c\u76f4\u63a5\u8c03\u7528\\(STL\\)\u5e93\u4e2d\u7684\u4f18\u5148\u961f\u5217 \\(priority\\_queue&lt;typename&gt;\\) \u5373\u53ef\u3002</p> <p>\u548c\u5806\u4e00\u6837\uff0c\u4f18\u5148\u961f\u5217\u4e5f\u6709\u4e24\u79cd\u5f62\u5f0f\uff1a\u6700\u5927\u4f18\u5148\u961f\u5217\u548c\u6700\u5c0f\u4f18\u5148\u961f\u5217\u3002\u8fd9\u91cc\u6211\u4eec\u5148\u5173\u6ce8\u5982\u4f55\u57fa\u4e8e\u5927\u5806\u5b9e\u73b0\u6700\u5927\u4f18\u5148\u961f\u5217\u3002\u6700\u5927\u4f18\u5148\u961f\u5217\u652f\u6301\u4ee5\u4e0b\u64cd\u4f5c\uff1a</p> <pre><code>class PriorityQueue {\n\u00a0 \u00a0 vector&lt;int&gt; arr{ 0 };\n\u00a0 \u00a0 int n = 0;//\u5143\u7d20\u4e2a\u6570\n\u00a0 \u00a0 void AdjustDown(int i);//\u5411\u4e0b\u8c03\u6574\u7b97\u6cd5\n\u00a0 \u00a0 void AdjustUp(int i);//\u5411\u4e0a\u8c03\u6574\u7b97\u6cd5\npublic:\n\u00a0 \u00a0 void push(int x);//\u63d2\u5165\u503cx\n\u00a0 \u00a0 int pop();//\u5220\u9664\u5e76\u8fd4\u56de\u6700\u5927\u503c\n\u00a0 \u00a0 int top();//\u8fd4\u56de\u6700\u5927\u503c\uff0c\u5373\u5806\u9876\u5143\u7d20\n\u00a0 \u00a0 int size() { return n; }//\u8fd4\u56de\u5143\u7d20\u4e2a\u6570\n\u00a0 \u00a0 void clear() { n = 0; arr.resize(1); }//\u6e05\u7a7a\u961f\u5217\n};\n</code></pre>"},{"location":"DS/Heap/Problems/","title":"Exercise","text":"\u9898\u76ee \u96be\u5ea6 \u77e5\u8bc6 LC.1438 \u4e2d\u7b49 \u4e8c\u53c9\u5806 LC.2762 \u4e2d\u7b49 \u4e8c\u53c9\u5806 SP16254 \u666e\u53ca+/\u63d0\u9ad8 \u7ef4\u62a4\u4e24\u4e2a\u5806"},{"location":"DS/SegTr/JRYSegTr/","title":"\u5409\u5982\u4e00\u7ebf\u6bb5\u6811","text":""},{"location":"DS/SegTr/JRYSegTr/#_1","title":"\u533a\u95f4\u6700\u503c\u64cd\u4f5c","text":"<p>Gorgeous Sequence</p> <p>\u6709\u4e00\u4e2a\u957f\u5ea6\u4e3a \\(n\\) \u7684\u5e8f\u5217 \\(a\\) \u3002\u6211\u4eec\u4f7f\u7528 \\(a_i\\) \u6765\u8868\u793a\u6b64\u5e8f\u5217\u4e2d\u7684 \\(i -th\\) \u5143\u7d20\u3002\u5e94\u5bf9\u6b64\u5e8f\u5217\u6267\u884c\u4ee5\u4e0b\u4e09\u79cd\u7c7b\u578b\u7684\u64cd\u4f5c\u3002</p> <p>\\(0\\ \\ x\\  \\ y\\  \\ t\\) \uff1a \u5bf9\u4e8e\u6bcf\u4e2a \\(x\u2264i\u2264y\\) \uff0c\u6211\u4eec\u4f7f\u7528 \\(min(a_i,t)\\) \u6765\u66ff\u6362\u539f\u6765\u7684 \\(a_i\\) \u7684\u503c\u3002</p> <p>\\(1\\ \\ x\\ \\ y\\) \uff1a \u6253\u5370 \\(a_i\\) \u7684\u6700\u5927\u503c \\(x\u2264i\u2264y\\) .</p> <p>\\(2\\  \\ x\\  \\ y\\) \uff1a \u6253\u5370 \\(a_i\\) \u7684\u603b\u548c \\(x\u2264i\u2264y\\) .</p> <p>\u7ebf\u6bb5\u6811\u89e3\u9898\uff0c\u89e3\u9898\u8981\u7528\u5230 \\(Lazy-Tag\\) \u6807\u8bb0\u6765\u5b9e\u73b0\u9ad8\u6548\u7684\u4fee\u6539\u3002\u5982\u4f55\u8bbe\u8ba1\u6807\u8bb0\u5c31\u662f\u89e3\u9898\u7684\u5173\u952e\u3002\u5409\u5982\u4e00\u5728\u5176\u8bba\u6587\u4e2d\u63d0\u5230\u7684\u89e3\u51b3\u65b9\u6cd5\u5b9a\u4e49\u7684\u56db\u4e2a\u6807\u8bb0\uff0c\u5de7\u5999\u7684\u5c06\u533a\u95f4\u6700\u503c\u548c\u533a\u95f4\u548c\u7ed3\u5408\u8d77\u6765\u3002</p> <p>\u5bf9\u4e8e\u7ebf\u6bb5\u6811\u7684\u6bcf\u4e2a\u8282\u70b9\uff0c\u6211\u4eec\u5b9a\u4e49\u56db\u4e2a\u6807\u8bb0\uff1b\u533a\u95f4\u548c \\(sum\\)\u3001\u533a\u95f4\u6700\u5927\u503c \\(ma\\)\uff0c\u533a\u95f4\u4e25\u683c\u6b21\u5927\u503c \\(se\\)\uff0c\u6700\u5927\u503c\u4e2a\u6570 \\(cnt\\) \u3002</p> <p>\u5f53\u6211\u4eec\u8981\u7528 \\(min(a_i,x)\\)\u5bf9\u533a\u95f4\\([l,r]\\)\u8fdb\u884c\u4fee\u6539\u65f6\uff0c\u5728\u7ebf\u6bb5\u6811\u4e0a\u5b9a\u4f4d\u5230\u5bf9\u5e94\u533a\u95f4\u540e\uff0c\u6709\u4ee5\u4e0b\u4e09\u79cd\u60c5\u51b5\uff1a</p> <ul> <li>\u5f53 \\(ma\\le x\\) \u65f6\uff0c\u8fd9\u6b21\u4fee\u6539\u4e0d\u5f71\u54cd\u8282\u70b9\uff0c\u4e0d\u8fdb\u884c\u4fee\u6539\u3002</li> <li>\u5f53 \\(se&lt; x&lt;ma\\) \u65f6\uff0c\u8fd9\u6b21\u4fee\u6539\u503c\u5f71\u54cd\u6700\u5927\u503c\uff0c\u66f4\u65b0 \\(sum=sum-cnt\\times(ma -x)\\)\uff0c\u5e76\u4e14\u4fee\u6539\u6700\u5927\u503c \\(ma=x\\)\u3002</li> <li>\u5f53 \\(se\\ge x\\) \u65f6\uff0c\u65e0\u6cd5\u76f4\u63a5\u4fee\u6539\u8fd9\u4e2a\u8282\u70b9\uff0c\u9012\u5f52\u5b83\u7684\u5de6\u53f3\u513f\u5b50\u3002</li> </ul> <p>\u4e0a\u8ff0\u7b97\u6cd5\u7684\u5173\u952e\u662f\u4e25\u683c\u6b21\u5927\u503c \\(se\\)\uff0c\u4ed6\u8d77\u5230\u526a\u679d\u7684\u4f5c\u7528\u3002\u8fd9\u6837\u770b\u4f3c\u5f88\u66b4\u529b\u7684\u64cd\u4f5c\uff0c\u5b9e\u9645\u590d\u6742\u5ea6\u5e76\u4e0d\u662f\u5f88\u9ad8\uff0c\u5728\u5409\u5982\u4e00\u7684\u56fd\u5bb6\u961f\u8bba\u6587\u4e2d\u8fdb\u884c\u8be6\u7ec6\u7684\u8bc1\u660e\uff0c\u5176\u65f6\u95f4\u590d\u6742\u5ea6\u662f \\(O(m\\log n)\\) \u3002</p>"},{"location":"DS/SegTr/JRYSegTr/#_2","title":"\u5b9e\u73b0","text":"<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n#define MAX int(1e6 + 7)\ntypedef long long ll;\nconst int mod = 1e9 + 7;\ntypedef vector&lt;int&gt; vi;\n// \u4ea4hduoj\u52a0\u4e0a\u6ce8\u91ca\u4ee3\u7801\u624d\u80fd\u8fc7\n// const int L = 1 &lt;&lt; 20 | 1;\n// char buffer[L], * S, * TT;\n// #define getchar() ((S==TT&amp;&amp;(TT=(S=buffer)+fread(buffer,1,L,stdin),S==TT))?EOF:*S++)\n\n// \u5feb\u8bfb\u6a21\u677f\ninline ll input()\n{\n    bool sym = false;ll res = 0;char ch = getchar();\n    while (!isdigit(ch)) sym |= (ch == '-'), ch = getchar();\n    while (isdigit(ch)) res = (res &lt;&lt; 3) + (res &lt;&lt; 1) + (ch ^ 48), ch = getchar();\n    return sym ? -res : res;\n}\n// \u5b9a\u4e49\u7ebf\u6bb5\u6811\nstruct\n{\n    ll l, r, sum, cnt, ma, se;\n} f[MAX &lt;&lt; 2];\n// \u6c42\u5de6\u53f3\u5b50\u8282\u70b9\u7684\u51fd\u6570\ninline int ls(int k) { return k &lt;&lt; 1; }\ninline int rs(int k) { return k &lt;&lt; 1 | 1; }\ninline int md(int l, int r) { return (l + r) &gt;&gt; 1; }\nint n, m;\n// \u5408\u5e76\u533a\u95f4\uff0c\u7ef4\u62a4\u56db\u4e2a\u6807\u8bb0\ninline void push_up(int k)\n{\n    f[k].sum = f[ls(k)].sum + f[rs(k)].sum;  // \u7ef4\u62a4\u533a\u95f4\u548c\n    f[k].ma = max(f[ls(k)].ma, f[rs(k)].ma); // \u7ef4\u62a4\u533a\u95f4\u6700\u5927\u503c\n    if (f[ls(k)].ma == f[rs(k)].ma)\n    { // \u7ef4\u62a4\u533a\u95f4\u6b21\u5927\u503c\u548c\u6700\u5927\u503c\u4e2a\u6570\n        f[k].se = max(f[ls(k)].se, f[rs(k)].se);\n        f[k].cnt = f[ls(k)].cnt + f[rs(k)].cnt;\n    }\n    else\n    {\n        f[k].se = max(f[ls(k)].se, f[rs(k)].se);\n        f[k].se = max(f[k].se, min(f[ls(k)].ma, f[rs(k)].ma));\n        f[k].cnt = f[ls(k)].ma &gt; f[rs(k)].ma ? f[ls(k)].cnt : f[rs(k)].cnt;\n    }\n}\n// \u5efa\u6811\nvoid build(int k, int l, int r)\n{\n    f[k].l = l, f[k].r = r;\n    if (l == r)\n    {\n        f[k].cnt = 1;\n        f[k].se = -1;\n        f[k].ma = f[k].sum = input();\n        return;\n    }\n    int m = md(l, r);\n    build(ls(k), l, m);\n    build(rs(k), m + 1, r);\n    push_up(k);\n}\n\n// \u7ed9\u8282\u70b9\u6253\u4e0a\u6807\u8bb0\nvoid add_tag(int k, int x)\n{\n    if (x &gt;= f[k].ma) return;\n    f[k].sum -= f[k].cnt * (f[k].ma - x);\n    f[k].ma = x;\n}\n\n// \u4e0b\u4f20\u6807\u8bb0\nvoid push_down(int k)\n{\n    add_tag(ls(k), f[k].ma);\n    add_tag(rs(k), f[k].ma);\n}\n// \u533a\u95f4\u6700\u503c\u4fee\u6539\nvoid change(int k, int l, int r, ll x)\n{\n    if (x &gt;= f[k].ma)\n        return; // \u5927\u4e8e\u533a\u95f4\u6700\u5927\u503c\uff0c\u76f4\u63a5\u9000\u51fa\u9012\u5f52\n    if (l &lt;= f[k].l &amp;&amp; r &gt;= f[k].r &amp;&amp; x &gt; f[k].se)\n    { // \u5927\u4e8e\u4e25\u683c\u6b21\u5927\u503c\uff0c\u53ef\u4ee5\u5bf9\u533a\u95f4\u8fdb\u884c\u4fee\u6539\n        add_tag(k, x);\n        return;\n    }\n    // \u4e0d\u6ee1\u8db3\u4e0a\u9762\u4e24\u79cd\u60c5\u51b5\uff0c\u9012\u5f52\u5de6\u53f3\u5b50\u8282\u70b9\n    push_down(k);\n    int m = md(f[k].l, f[k].r);\n    if (l &lt;= m) change(ls(k), l, r, x);\n    if (r &gt; m) change(rs(k), l, r, x);\n    push_up(k);\n}\n// \u67e5\u8be2\u533a\u95f4\u548c\nll ask1(int k, int l, int r)\n{\n    if (l &lt;= f[k].l &amp;&amp; r &gt;= f[k].r)\n        return f[k].sum;\n    push_down(k);\n    int m = md(f[k].l, f[k].r);\n    ll res = 0;\n    if (l &lt;= m) res += ask1(ls(k), l, r);\n    if (r &gt; m) res += ask1(rs(k), l, r);\n    return res;\n}\n// \u67e5\u8be2\u533a\u95f4\u6700\u503c\nll ask2(int k, int l, int r)\n{\n    if (l &lt;= f[k].l &amp;&amp; r &gt;= f[k].r)\n        return f[k].ma;\n    push_down(k);\n    int m = md(f[k].l, f[k].r);\n    ll res = 0;\n    if (l &lt;= m) res = ask2(ls(k), l, r);\n    if (r &gt; m) res = max(res, ask2(rs(k), l, r));\n    return res;\n}\n\nvoid solve()\n{\n    n = input(), m = input();\n    build(1, 1, n);\n    for (int i = 0; i &lt; m; ++i)\n    {\n        ll op = input(), l = input(), r = input();\n        if (op == 0) change(1, l, r, input());\n        if (op == 1) printf(\"%lld\\n\", ask2(1, l, r));\n        if (op == 2) printf(\"%lld\\n\", ask1(1, l, r));\n    }\n}\n\nint main()\n{\n    ios::sync_with_stdio(false);\n    ll T;\n    for (T = input(); T--;)\n        solve();\n\n    return 0;\n}\n</code></pre>"},{"location":"DS/SegTr/Problems/","title":"Exercise","text":"\u9898\u76ee \u96be\u5ea6 \u77e5\u8bc6 P4588 \u666e\u53ca+/\u63d0\u9ad8 \u524d\u7f00\u79ef+\u7ebf\u6bb5\u6811 Just Another Game of Stones \u535a\u5f08\u8bba+\u5409\u53f8\u673a\u7ebf\u6bb5\u6811  Iva &amp; Pav \u4e8c\u5206+\u7ebf\u6bb5\u6811 CF1881G 2000 \u56de\u6587\u4e32+\u7ebf\u6bb5\u6811 LC.715 \u56f0\u96be \u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u6a21\u677f"},{"location":"DS/SegTr/SegTr/","title":"\u57fa\u7840\u7ebf\u6bb5\u6811","text":""},{"location":"DS/SegTr/SegTr/#_1","title":"\u5b9a\u4e49","text":"<p>\u7ebf\u6bb5\u6811\u548c\u6811\u72b6\u6570\u7ec4\u90fd\u662f\u89e3\u51b3\u533a\u95f4\u95ee\u9898\u7684\u6570\u636e\u7ed3\u6784\uff0c\u4f46\u4e0e\u6811\u72b6\u6570\u7ec4\u76f8\u6bd4\u66f4\u6613\u7406\u89e3\uff0c\u4f46\u662f\u5b9e\u73b0\u4ee3\u7801\u6bd4\u8f83\u957f\u3002</p> <p>\u7ebf\u6bb5\u6811\u878d\u5408\u4e86\u5206\u6cbb\u7b97\u6cd5\u3001\u4e8c\u53c9\u6811\u7ed3\u6784\u548c\\(Lazy-Tag\\)\u6280\u672f\u601d\u60f3\u3002</p>"},{"location":"DS/SegTr/SegTr/#_2","title":"\u57fa\u672c\u7ed3\u6784","text":"<p>\u7ebf\u6bb5\u6811\u662f\u4e00\u68f5\u4e8c\u53c9\u6811\uff0c\u6811\u4e0a\u7684\u8282\u70b9\u662f\u201c\u7ebf\u6bb5\u201d\uff0c\u5373\u533a\u95f4\uff0c\u5982\u4e0b\u56fe\u662f\u4e00\u68f5\u7ebf\u6bb5\u6811</p> <p>\u6211\u4eec\u7528\u5206\u6cbb\u6cd5\u81ea\u5b9a\u5411\u4e0b\uff0c\u6bcf\u6b21\u5206\u6cbb\uff0c\u5c06\u533a\u95f4\u5206\u6210\u5de6\u53f3\u4e24\u534a\uff0c\u6bcf\u4e00\u4e2a\u8282\u70b9\u7ef4\u62a4\u4e00\u4e2a\u8fd9\u6837\u7684\u533a\u95f4\uff0c\u8282\u70b9\u6240\u7ef4\u62a4\u7684\u7ebf\u6bb5\u6240\u8868\u793a\u7684\u503c\u53ef\u4ee5\u662f\u533a\u95f4\u548c\u3001\u533a\u95f4\u6700\u503c\u7b49\u7b49\uff0c\u6839\u636e\u9898\u76ee\u7075\u6d3b\u5b9a\u4e49\u3002\u8fd9\u6837\u6c42\u89e3\u4e00\u4e2a\u5927\u533a\u95f4\u7684\u89e3\u53ef\u4ee5\u6709\u5de6\u53f3\u4e24\u4e2a\u5c0f\u533a\u95f4\u5408\u5e76\u800c\u6765\u3002</p>"},{"location":"DS/SegTr/SegTr/#_3","title":"\u7ebf\u6bb5\u6811\u7684\u6784\u9020","text":"<p>\u5728\u7ade\u8d5b\u4e2d\uff0c\u4e00\u822c\u7528\u9759\u6001\u6570\u7ec4\u6765\u5b9e\u73b0\u6ee1\u4e8c\u53c9\u6811\u8868\u793a\u7ebf\u6bb5\u6811\uff0c\u867d\u7136\u6bd4\u8f83\u6d6a\u8d39\u7a7a\u95f4\uff0c\u4f46\u662f\u6613\u4e8e\u7f16\u7801\u3002</p> <p>\u5b9a\u4e49\u9759\u6001\u6570\u7ec4\u5b9e\u73b0\u6ee1\u4e8c\u53c9\u6811\u65f6\uff0c\u6709\u4e24\u79cd\u5b9e\u73b0\u65b9\u6cd5\uff0c\u6211\u4eec\u5373\u53ef\u4ee5\u5b9a\u4e49\u7ed3\u6784\u4f53\u8868\u793a\u4e8c\u53c9\u6811\u7684\u8282\u70b9\uff0c\u4e5f\u53ef\u4e5f\u76f4\u63a5\u7528\u6570\u7ec4\u6765\u5b9e\u73b0\u3002\u672c\u6587\u7684\u5b9e\u73b0\u90fd\u91c7\u7528\u5b9a\u4e49\u7ed3\u6784\u4f53\u7684\u65b9\u5f0f\u3002</p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\u7ebf\u6bb5\u6811\u7a7a\u95f4\u8981\u5f00\u5230\\(4N\\)\u624d\u80fd\u4fdd\u8bc1\u4e0d\u8d8a\u754c\u8bbf\u95ee\u3002 <pre><code>//\u5b9a\u4e49\u7ed3\u6784\u4f53\nstruct{\n    int l,r;//\u8282\u70b9\u7ef4\u62a4\u7684\u533a\u95f4\n    int data;//\u8282\u70b9\u7ef4\u62a4\u7684\u533a\u95f4\u6570\u636e\n}f[MAX &lt;&lt; 2];\n//\u5b9a\u4e49\u6570\u7ec4\nint f[MAX &lt;&lt; 2];\n</code></pre></p> <p>\u5728\u6ee1\u4e8c\u53c9\u6811\u4e2d\u7236\u8282\u70b9\u4e0e\u5b50\u8282\u70b9\u4e4b\u95f4\u7684\u8bbf\u95ee\u975e\u5e38\u7b80\u5355\uff0c\u7236\u8282\u70b9\\(k\\)\u7684\u5de6\u53f3\u5b50\u8282\u70b9\u4e3a\\(2\\times k\\)\u548c\\(2\\times k+1\\)</p> <pre><code>inline int ls(int k){return k&lt;&lt;1;}\ninline int rs(int k){return k&lt;&lt;1|1;}\n</code></pre> <p>\u6211\u4eec\u91c7\u7528\u9012\u5f52\u5206\u6cbb\u7684\u65b9\u5f0f\u6784\u5efa\u7ebf\u6bb5\u6811\uff0c\u6bcf\u6b21\u5c06\u533a\u95f4\u5206\u4e3a\u5de6\u53f3\u4e24\u90e8\u5206\uff0c\u4e0b\u9762\u662f\u4ee3\u7801\u5b9e\u73b0\uff1a</p> <pre><code>inline void push_up(int k){\n    f[k].data=f[ls(k)].data+f[rs(k)].data;//\u4ece\u4e0b\u5411\u4e0a\u4f20\u9012\u533a\u95f4\u503c\n}\nvoid build(int k,int l,int r){\n    f[k].l=l,f[k].r=r;\n    if(l==r){\n        f[k].data=a[l];//\u53f6\u5b50\u8282\u70b9\u5b58\u539f\u6570\u7ec4\u7684\u503c\n        return;\n    }\n    int m=(l+r)&gt;&gt;1;//\u6298\u534a\n    build(ls(k),l,m);//\u9012\u5f52\u5de6\u513f\u5b50\n    build(rs(k),m+1,r);//\u9012\u5f52\u53f3\u513f\u5b50\n    push_up(k);\n}\n</code></pre>"},{"location":"DS/SegTr/SegTr/#_4","title":"\u7ebf\u6bb5\u6811\u7684\u57fa\u672c\u529f\u80fd","text":""},{"location":"DS/SegTr/SegTr/#_5","title":"\u533a\u95f4\u67e5\u8be2","text":"<p>\u7ebf\u6bb5\u6811\u7684\u533a\u95f4\u67e5\u8be2\u975e\u5e38\u7b80\u5355\uff0c\u5982\u679c\u6211\u4eec\u8981\u67e5\u8be2\u4e00\u4e2a\u533a\u95f4\\([L, R]\\)\u7684\u533a\u95f4\u4fe1\u606f\uff0c\u53ea\u8981\u9012\u5f52\u641c\u7d22\u7ebf\u6bb5\u6811\uff0c\u5c06\u88ab\u641c\u7d22\u533a\u95f4\u8986\u76d6\u7684\u533a\u95f4\u8282\u70b9\u7d2f\u52a0\u5230\u7ed3\u679c\u4e0a\u5373\u53ef\u3002\u53ef\u4ee5\u5b9e\u73b0\u5bf9\u533a\u95f4\u6700\u503c\u3001\u533a\u95f4\u548c\u7684\u67e5\u8be2\uff0c\u4e0b\u9762\u4ee5\u533a\u95f4\u548c\u4e3a\u4f8b\uff0c\u7ed9\u51fa\u793a\u4f8b\u4ee3\u7801 <pre><code>void ask(int k,int l,int r){\n    if(l&lt;=f[k].l&amp;&amp;r&gt;=f[k].r)return f[k].data;\n    int m=(f[k].l+f[k].r)&gt;&gt;1;\n    int res=0;\n    if(l&lt;=m)res+=ask(ls(k),l,r);//\u4e0e\u5de6\u8282\u70b9\u6709\u91cd\u53e0\n    if(r&gt;m)res+=ask(rs(k),l,r);//\u4e0e\u53f3\u8282\u70b9\u53f3\u91cd\u53e0\n    return res;\n}\n</code></pre> \u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(\\log n)\\)</p>"},{"location":"DS/SegTr/SegTr/#_6","title":"\u4fee\u6539","text":"<p>\u7ebf\u6bb5\u6811\u7684\u57fa\u672c\u5e94\u7528\u662f\u5355\u70b9\u4fee\u6539\u3002\u5355\u70b9\u4fee\u6539\u53ea\u8981\u4fee\u6539\u53f6\u5b50\u8282\u70b9\u7684\u503c\uff0c\u518d\u4ece\u4e0b\u81f3\u4e0a\u7684\u4fee\u6539\u66f4\u65b0\u7ebf\u6bb5\u6811\u5373\u53ef\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(\\log n)\\)\u3002\u6bd4\u8f83\u7b80\u5355\u4e0d\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u3002</p> <p>P3372 \u3010\u6a21\u677f\u3011\u7ebf\u6bb5\u6811 1</p> <p>\u9898\u610f\uff1a\u5df2\u77e5\u4e00\u4e2a\u6570\u5217\uff0c\u4f60\u9700\u8981\u8fdb\u884c\u4e0b\u9762\u4e24\u79cd\u64cd\u4f5c\uff1a 1 x y k :\u5c06[x,y]\u533a\u95f4\u6bcf\u4e00\u4e2a\u6570\u52a0\u4e0a k\u3002 2 x y:\u8f93\u51fa\u533a\u95f4[x,y]\u6bcf\u4e00\u4e2a\u6570\u7684\u548c\u3002</p> <p>\u5bf9\u4e8e\u533a\u95f4\u4fee\u6539\uff0c\u6211\u4eec\u5c31\u8981\u7528\u5230\\(Lazy-Tag\\)\u6280\u672f\u3002\\(Lazy-Tag\\)\u7684\u6838\u5fc3\u601d\u60f3\u5c31\u662f\u901a\u8fc7\u5ef6\u8fdf\u5bf9\u8282\u70b9\u4fe1\u606f\u7684\u66f4\u6539\uff0c\u4ece\u800c\u51cf\u5c11\u53ef\u80fd\u4e0d\u5fc5\u8981\u7684\u64cd\u4f5c\u6b21\u6570\u3002</p> <p>\u5728\u7528\\(Lazy-Tag\\)\u65b9\u6cd5\u65f6\uff0c\u82e5\u4fee\u6539\u4e00\u4e2a\u7ebf\u6bb5\u533a\u95f4\uff0c\u5c31\u53ea\u5bf9\u8fd9\u4e2a\u7ebf\u6bb5\u533a\u95f4\u8fdb\u884c\u6574\u4f53\u4e0a\u7684\u4fee\u6539\uff0c\u5176\u5185\u90e8\u6bcf\u4e2a\u5143\u7d20\u7684\u5185\u5bb9\u5148\u4e0d\u505a\u4fee\u6539\uff0c\u53ea\u6709\u5f53\u8fd9\u4e2a\u7ebf\u6bb5\u533a\u95f4\u7684\u4e00\u81f4\u6027\u88ab\u7834\u574f\u65f6\uff08\u5373\u67e5\u8be2\u6216\u8981\u4fee\u6539\u5176\u5b50\u533a\u95f4\u65f6\uff09\uff0c\u624d\u628a\u53d8\u5316\u503c\u4f20\u9012\u7ed9\u4e0b\u4e00\u5c42\u7684\u5b50\u533a\u95f4\uff0c\u6211\u4eec\u79f0\u8fd9\u4e2a\u8fc7\u7a0b\u4e3a\u4e0b\u4f20\u6807\u8bb0\uff0c\u4e00\u822c\u6211\u4eec\u4f1a\u5355\u72ec\u5199\u4e00\u4e2a\\(push\\_down\\)\u51fd\u6570\u6765\u5b8c\u6210\u8fd9\u4e00\u64cd\u4f5c\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u989d\u5916\u5b9a\u4e49\u4e00\u4e2a\\(tag\\)\u6570\u7ec4\u6216\u8005\u5728\u7ed3\u6784\u4f53\u4e2d\u591a\u52a0\u4e00\u4e2a\u53d8\u91cf\u6765\u8bb0\u5f55\u6bcf\u4e2a\u7ebf\u6bb5\u533a\u95f4\u7684\u6807\u8bb0\u3002</p> <p>\u6211\u4eec\u4ee5\u4e0a\u9762\u8fd9\u9053\u9898\u4e3a\u4f8b\u7ed9\u51fa\u5b8c\u6574\u7684\u7ebf\u6bb5\u6811\u4ee3\u7801\uff0c\u8be6\u7ec6\u4ee3\u7801\u89c1\u6587\u4ef6SegTree.cpp</p>"},{"location":"DS/SegTr/SegTr/#_7","title":"\u7ebf\u6bb5\u6811\u7684\u57fa\u7840\u5e94\u7528","text":""},{"location":"DS/SegTr/SegTr/#_8","title":"\u7279\u6b8a\u7684\u533a\u95f4\u4fee\u6539","text":"<p>Can you answer these queries?</p> <p>\u9898\u610f\uff1a\u5bf9\u533a\u95f4\u6c42\u6bcf\u4e2a\u6570\u7684\u5f00\u65b9\uff0c\u8f93\u51fa\u533a\u95f4\u67e5\u8be2 \u5143\u7d20\u4e2a\u6570\\(N\\le 10^5\\)\uff0c\u5143\u7d20\u4e4b\u548c\u4e0d\u8d85\u8fc7\\(2^{63}\\)\uff0c\u64cd\u4f5c\u6b21\u6570\\(M\\le 10^5\\)</p> <p>\u5bf9\u4e8e\u8be5\u9898\u5f88\u5bb9\u6613\u6211\u4eec\u80fd\u53d1\u73b0\u4e00\u4e2a\u4e0d\u8d85\u8fc7\\(2^{63}\\)\u7684\u6570\u5f00\u65b9\u7684\u6b21\u6570\u4e0d\u4f1a\u8d85\u8fc7\\(7\\)\u6b21\uff0c\u6240\u4ee5\u6211\u4eec\u5bf9\u4e8e\u4e0d\u7b49\u4e8e\\(1\\)\u7684\u6570\u5355\u72ec\u4fee\u6539\u5b83\uff0c\u518d\u9012\u5f52\u7684\u4fee\u6539\u5176\u7236\u8282\u70b9\uff1b\u5f53\u4e00\u4e2a\u533a\u95f4\u7684\u6570\u90fd\u4e3a\\(1\\)\u65f6\uff0c\u5c31\u4e0d\u5bf9\u8be5\u533a\u95f4\u8fdb\u884c\u4fee\u6539\u3002</p> <p>\u590d\u6742\u5ea6\uff1a\u6bcf\u4e2a\u6570\u5f00\u65b9\\(7\\)\u6b21\uff0c\u5171\\(7N\\)\u6b21\uff0c\u5728\u505a\\(M\\)\u6b21\u4fee\u6539\u590d\u6742\u5ea6\u4e3a\\(M\\log N\\)</p>"},{"location":"DS/SegTr/SegTr/#_9","title":"\u540c\u65f6\u505a\u591a\u79cd\u533a\u95f4\u4fee\u6539","text":"<p>P3373 \u3010\u6a21\u677f\u3011\u7ebf\u6bb5\u6811 2</p> <p>\u5982\u9898\uff0c\u5df2\u77e5\u4e00\u4e2a\u6570\u5217\uff0c\u4f60\u9700\u8981\u8fdb\u884c\u4e0b\u9762\u4e09\u79cd\u64cd\u4f5c\uff1a - 1.\u5c06\u67d0\u533a\u95f4\u6bcf\u4e00\u4e2a\u6570\u4e58\u4e0a x\uff1b - 2.\u5c06\u67d0\u533a\u95f4\u6bcf\u4e00\u4e2a\u6570\u52a0\u4e0a x\uff1b - 3.\u6c42\u51fa\u67d0\u533a\u95f4\u6bcf\u4e00\u4e2a\u6570\u7684\u548c\u3002</p> <p>\u6211\u4eec\u8bbe\u7ef4\u62a4\u7684\u533a\u95f4\u548c\u4e3a\\(sum\\)\uff0c\u5f53\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u770b\u6210\\(1\\times sum+0\\)\uff0c\u5f53\u6211\u5bf9\u5176\u8fdb\u884c\u4e00\u6b21\u64cd\u505a\\(2\\)\u548c\u64cd\u505a\\(1\\)\u65f6\uff0c\u533a\u95f4\u548c\u53d8\u4e3a\\(k_1sum+b_1\\)\uff0c\u6211\u4eec\u518d\u91cd\u590d\u4e00\u8fb9\u64cd\u505a\u5f97\u5230:</p> \\[ k_2(k_1sum+b_1)+b_2=k_2k_1sum+k_2b_1+b_2 \\] <p>\u6211\u4eec\u8981\u7ef4\u62a4\u4e24\u79cd\u6807\u8bb0\\(add \u3001multi\\) \u53ef\u89c1\u6211\u4eec\u5bf9\u533a\u95f4\u6807\u8bb0\u4fee\u6539\u65f6\uff0c\u5148\u8981\u505a\\(multi\\)\u7684\u4fee\u6539\uff0c\u5e76\u4e14\u5c06\\(add\\)\u4fee\u6539\u4e3a\\(add\\times multi\\)\uff0c\u518d\u8fdb\u884c\\(add\\)\u4fee\u6539\u3002</p>"},{"location":"DS/SegTr/SegTr/#transformation","title":"\u8fdb\u9636\uff1aTransformation","text":""},{"location":"DS/SegTr/SegTr/#_10","title":"\u7ebf\u6bb5\u6811\u7684\u4e8c\u5206\u64cd\u4f5c","text":"<p>Vases and Flowers \u7ebf\u6bb5\u6811\u7684\u7ed3\u6784\u5c31\u662f\u4e8c\u5206\uff0c\u5728\u7ebf\u6bb5\u6811\u4e0a\u8fdb\u4e8c\u5206\u7b54\u6848\u975e\u5e38\u65b9\u4fbf\uff0c\u8fd9\u9898\u5c31\u662f\u975e\u5e38\u5178\u578b\u7684\u4e8c\u5206\u7b54\u6848\uff0c\u601d\u8def\u975e\u5e38\u7b80\u5355\uff0c\u7528\u7ebf\u6bb5\u6811\u8fdb\u884c\u533a\u95f4\u66f4\u65b0\u7684\u64cd\u4f5c\uff0c\u5728\u7ebf\u6bb5\u6811\u4e0a\u7528\u4e8c\u5206\u6cd5\u53bb\u627e\u5230\u653e\u7b2c\u4e00\u4e2a\u82b1\u7684\u4f4d\u7f6e\uff0c\u548c\u6700\u540e\u4e00\u4e2a\u82b1\u653e\u7684\u4f4d\u7f6e\u5373\u53ef\u3002</p>"},{"location":"DS/SegTr/SegTr/#_11","title":"\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811","text":"<p>\u52a8\u6001\u5f00\u70b9\u987e\u540d\u601d\u4e49\uff0c\u5c31\u662f\u5728\u67e5\u8be2\u8fc7\u7a0b\u4e2d\u52a8\u6001\u7684\u5f00\u8f9f\u7ebf\u6bb5\u6811\u7684\u8282\u70b9\uff0c\u800c\u4e0d\u662f\u4e00\u6b21\u5c06\u6811\u5b8c\u6574\u7684\u5efa\u51fa\u6765\uff0c\u6211\u4eec\u53ea\u521d\u59cb\u5316\u4e00\u4e2a\u6839\u8282\u70b9\uff0c\u5373\u6574\u4e2a\u533a\u95f4\u3002</p> <p>\u56e0\u4e3a\u6211\u4eec\u662f\u5728\u9700\u8981\u67d0\u4e2a\u8282\u70b9\u65f6\u624d\u5f00\u8f9f\u5b83\uff0c\u6240\u4ee5\u4e0d\u80fd\u518d\u4f7f\u7528\u5806\u5f0f\u50a8\u5b58\u6c42\u5de6\u53f3\u513f\u5b50\u7684\u516c\u5f0f\uff0c\u800c\u662f\u4f7f\u7528\\(ls\\)\u548c\\(rs\\)\u6570\u7ec4\u8bb0\u5f55\u5bf9\u5e94\u8282\u70b9\u7684\u5de6\u53f3\u513f\u5b50\uff0c\u6216\u8005\u5728\u7ed3\u6784\u4f53\u4e2d\u52a0\u5165\u4e24\u4e2a\u53d8\u91cf\u6765\u8bb0\u5f55\u5de6\u53f3\u513f\u5b50\u7684\u7f16\u53f7\u3002</p> <p>\u4ee5\u533a\u95f4\u548c\u67e5\u8be2\u548c\u5355\u70b9\u4fee\u6539\u4e3a\u4f8b\u4e3a\u4f8b <pre><code>//root\u4ee3\u8868\u6574\u4e2a\u6811\u7684\u6839\uff0ccnt\u8bb0\u5f55\u5f00\u8f9f\u7684\u8282\u70b9\u4e2a\u6570\nint root,cnt,n;\nint sum[n&lt;&lt;1],ls[n&lt;&lt;1],rs[n&lt;&lt;1];\n\n\n//\u5728x\u4f4d\u7f6e\u52a0\u4e0ad\nvoid update(int&amp; k,int l,int r,int x,int d)\n{\n    //\u8282\u70b9\u4e3a\u7a7a\u65f6\uff0c\u5f00\u8f9f\u4e00\u4e2a\u65b0\u8282\u70b9\n    //\u7c7b\u4f3c\u4e8e\u5b57\u5178\u6811\u548c\u94fe\u5f0f\u524d\u5411\u661f\u7684\u52a0\u8fb9\n    if(!k) k = ++cnt;\n    if(s==t)\n    {\n        sum[k] += d;\n        return;\n    }\n    int m = (l+r)&gt;&gt;1;\n    if(x&lt;=m)update(ls[k],l,m,x,d);\n    else update(rs[k],m+1,r,x,d);\n} \n\n//\u533a\u95f4[s,t]\u67e5\u8be2\nint ask(int&amp; k,int l,int r,int s,int t);\n{\n    //\u4e00\u5f00\u59cb\u6574\u4e2a\u533a\u95f4\u7684\u548c\u4e3a0\uff0c\u5373\u6bcf\u4e2a\u5143\u7d20\u90fd\u4e3a0\n    //\u5982\u679c\u8be5\u533a\u95f4\u8fd8\u672a\u5f00\u8f9f\uff0c\u8bf4\u660e\u533a\u95f4\u548c\u4e3a0\n    if(!k) return 0;\n\n    //\u4e0b\u9762\u5c31\u662f\u4e00\u822c\u7684\u7ebf\u6bb5\u6811\u7684\u533a\u95f4\u548c\u67e5\u8be2\n    if(s&lt;=l&amp;&amp;t&gt;=r)return sum[k];\n    int m = (l+r)&gt;&gt;1;\n    int ans = 0;\n    if(s&lt;=m)ans+=ask(ls[k],l,m,s,t);\n    else if(t&gt;m)ans+=ask(rs[k],m+1,r,s,t);\n    return ans;\n}\n</code></pre> \u6211\u4eec\u4f1a\u53d1\u73b0\u5b9e\u9645\u4e0a\u5c31\u662f\u5728\u6bcf\u4e2a\u64cd\u4f5c\u524d\u52a0\u4e86\u4e00\u4e2a\u5f00\u8f9f\u8282\u70b9\u7684\u4ee3\u7801\u3002\u533a\u95f4\u4fee\u6539\u65f6\u4e5f\u662f\u7c7b\u4f3c\uff0c\u4e0b\u6c89\u6807\u8bb0\u65f6\u5982\u679c\u5b50\u8282\u70b9\u8fd8\u672a\u5f00\u8f9f\uff0c\u5c31\u8981\u5148\u5f00\u8f9f\u5b50\u8282\u70b9\uff0c\u5728\u8fdb\u884c\u57fa\u7840\u7684\u7ebf\u6bb5\u6811\u64cd\u4f5c\u5373\u53ef\u3002</p> <p></p> <p>\u4f46\u8fd9\u6837\u6709\u4e00\u4e2a\u5c40\u9650\uff0c\u6211\u4eec\u7ef4\u62a4\u7684\u533a\u95f4\u521d\u59cb\u503c\u5fc5\u987b\u5168\u90e8\u4e00\u6837\uff0c\u56e0\u4e3a\u53ea\u521b\u5efa\u4e86\u6839\u8282\u70b9\uff0c\u6211\u4eec\u65e0\u6cd5\u786e\u5b9a\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u503c\u3002\u4f8b\u5982\u7ef4\u62a4\u533a\u95f4\u548c\u65f6\uff0c\u5982\u679c\u53ea\u5f00\u8f9f\u6839\u8282\u70b9\uff0c\u6211\u4eec\u53ea\u77e5\u9053\u6574\u4e2a\u533a\u95f4\u7684\u548c\uff0c\u800c\u4e0d\u77e5\u9053\u5176\u5b50\u533a\u95f4\u5177\u4f53\u7684\u548c\u3002\u6240\u4ee5\u4e00\u822c\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\u7528\u4e0e\u4f18\u5316\u6743\u503c\u7ebf\u6bb5\u6811\uff08\u5982\u4e3b\u5e2d\u6811\uff09\u7684\u7a7a\u95f4\u3002</p>"},{"location":"DS/SegTr/SegTr/#_12","title":"\u5409\u53f8\u673a\u7ebf\u6bb5\u6811","text":""},{"location":"DS/SegTr/SegTr/#_13","title":"\u533a\u95f4\u6700\u503c\u64cd\u4f5c","text":"<p>Gorgeous Sequence</p> <p>\u6709\u4e00\u4e2a\u957f\u5ea6\u4e3a\\(n\\) \u7684\u5e8f\u5217\\(a\\) \u3002\u6211\u4eec\u4f7f\u7528\\(a_i\\)\u6765\u8868\u793a\u6b64\u5e8f\u5217\u4e2d\u7684\\(i -th\\) \u5143\u7d20\u3002\u5e94\u5bf9\u6b64\u5e8f\u5217\u6267\u884c\u4ee5\u4e0b\u4e09\u79cd\u7c7b\u578b\u7684\u64cd\u4f5c\u3002</p> <p>\\(0\\ \\ x\\  \\ y\\  \\ t\\) \uff1a \u5bf9\u4e8e\u6bcf\u4e2a\\(x\u2264i\u2264y\\)\uff0c\u6211\u4eec\u4f7f\u7528\\(min(a_i,t)\\) \u6765\u66ff\u6362\u539f\u6765\u7684 \\(a_i\\)\u7684\u503c\u3002</p> <p>\\(1\\ \\ x\\ \\ y\\) \uff1a \u6253\u5370\\(a_i\\)\u7684\u6700\u5927\u503c \\(x\u2264i\u2264y\\) .</p> <p>\\(2\\  \\ x\\  \\ y\\) \uff1a \u6253\u5370\\(a_i\\) \u7684\u603b\u548c \\(x\u2264i\u2264y\\) .</p> <p>\u7ebf\u6bb5\u6811\u89e3\u9898\uff0c\u89e3\u9898\u8981\u7528\u5230\\(Lazy-Tag\\)\u6807\u8bb0\u6765\u5b9e\u73b0\u9ad8\u6548\u7684\u4fee\u6539\u3002\u5982\u4f55\u8bbe\u8ba1\u6807\u8bb0\u5c31\u662f\u89e3\u9898\u7684\u5173\u952e\u3002\u5409\u5982\u4e00\u5728\u5176\u8bba\u6587\u4e2d\u63d0\u5230\u7684\u89e3\u51b3\u65b9\u6cd5\u5b9a\u4e49\u7684\u56db\u4e2a\u6807\u8bb0\uff0c\u5de7\u5999\u7684\u5c06\u533a\u95f4\u6700\u503c\u548c\u533a\u95f4\u548c\u7ed3\u5408\u8d77\u6765\u3002</p> <p>\u5bf9\u4e8e\u7ebf\u6bb5\u6811\u7684\u6bcf\u4e2a\u8282\u70b9\uff0c\u6211\u4eec\u5b9a\u4e49\u56db\u4e2a\u6807\u8bb0\uff1b\u533a\u95f4\u548c\\(sum\\)\u3001\u533a\u95f4\u6700\u5927\u503c\\(ma\\)\uff0c\u533a\u95f4\u4e25\u683c\u6b21\u5927\u503c\\(se\\)\uff0c\u6700\u5927\u503c\u4e2a\u6570\\(cnt\\)\u3002</p> <p>\u5f53\u6211\u4eec\u8981\u7528\\(min(a_i,x)\\)\u5bf9\u533a\u95f4\\([l,r]\\)\u8fdb\u884c\u4fee\u6539\u65f6\uff0c\u5728\u7ebf\u6bb5\u6811\u4e0a\u5b9a\u4f4d\u5230\u5bf9\u5e94\u533a\u95f4\u540e\uff0c\u6709\u4ee5\u4e0b\u4e09\u79cd\u60c5\u51b5\uff1a - \u5f53\\(ma\\le x\\)\u65f6\uff0c\u8fd9\u6b21\u4fee\u6539\u4e0d\u5f71\u54cd\u8282\u70b9\uff0c\u4e0d\u8fdb\u884c\u4fee\u6539 - \u5f53\\(se&lt; x&lt;ma\\)\u65f6\uff0c\u8fd9\u6b21\u4fee\u6539\u503c\u5f71\u54cd\u6700\u5927\u503c\uff0c\u66f4\u65b0\\(sum=sum-cnt\\times(ma -x)\\)\uff0c\u5e76\u4e14\u4fee\u6539\u6700\u5927\u503c\\(ma=x\\)\u3002 - \u5f53\\(se\\ge x\\)\u65f6\uff0c\u65e0\u6cd5\u76f4\u63a5\u4fee\u6539\u8fd9\u4e2a\u8282\u70b9\uff0c\u9012\u5f52\u5b83\u7684\u5de6\u53f3\u513f\u5b50</p> <p>\u4e0a\u8ff0\u7b97\u6cd5\u7684\u5173\u952e\u662f\u4e25\u683c\u6b21\u5927\u503c\\(se\\)\uff0c\u4ed6\u8d77\u5230\u526a\u679d\u7684\u4f5c\u7528\u3002\u8fd9\u6837\u770b\u4f3c\u5f88\u66b4\u529b\u7684\u64cd\u4f5c\uff0c\u5b9e\u9645\u590d\u6742\u5ea6\u5e76\u4e0d\u662f\u5f88\u9ad8\uff0c\u5728\u5409\u5982\u4e00\u7684\u56fd\u5bb6\u961f\u8bba\u6587\u4e2d\u8fdb\u884c\u8be6\u7ec6\u7684\u8bc1\u660e\uff0c\u5176\u65f6\u95f4\u590d\u6742\u5ea6\u662f \\(O(m\\log n)\\) \u3002</p> <p>\u53c2\u8003\u6587\u7ae0\uff1a \u300a\u7b97\u6cd5\u7ade\u8d5b-\u4e0a\u518c\u300b-\u7f57\u6c38\u519b CSDN_\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811 \u7ebf\u6bb5\u6811-Oi Wiki</p>"},{"location":"DS/Splay/Splay/","title":"Splay","text":""},{"location":"DS/Splay/Splay/#splay","title":"Splay \u6811","text":"<p>Splay \u6bcf\u6b21\u64cd\u4f5c\u540e\u90fd\u8981\u8fdb\u884c\u65cb\u8f6c\uff0c\u628a\u64cd\u4f5c\u7684\u8282\u70b9\u65cb\u8f6c\u5230\u6839\u8282\u70b9\u7684\u4f4d\u7f6e\uff0c\u6700\u540e\u53ef\u4ee5\u8ba9\u6bcf\u4e2a\u64cd\u4f5c\u7684\u5747\u644a\u590d\u6742\u8fbe\u5230 \\(O(\\log n)\\)\u3002</p> <p>P3369 \u3010\u6a21\u677f\u3011\u666e\u901a\u5e73\u8861\u6811</p> <p>\u63d0\u793a\uff1a\u5c3d\u91cf\u5199\u975e\u9012\u5f52\uff0c\\(Splay\\) \u987a\u5e8f\u63d2\u5165\u4f1a\u6210\u4e00\u6761\u94fe\uff0c\u9012\u5f52\u65cb\u8f6c\u7684\u8bdd\u4f1a\u6808\u6ea2\u51fa\u3002</p> Splay <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nusing ll = long long;\nusing ull = unsigned long long;\nconstexpr int MAX = 2e5 + 100;\nextern void solve();\n\nint main()\n{\n    ios::sync_with_stdio(false);\n    cin.tie(0), cout.tie(0);\n    int T = 0;\n    for (cin &gt;&gt; T; T--;)\n        solve();\n    return 0;\n}\n\nstruct tn\n{\n    int val = 0, cnt = 0;   // val \u8bb0\u5f55\u8282\u70b9\u952e\u503c\uff0ccnt \u8bb0\u5f55\u8be5\u952e\u503c\u7684\u4e2a\u6570\n    int fa = 0, ls = 0, rs = 0; // \u8bb0\u5f55\u7236\u8282\u70b9\u548c\u5de6\u53f3\u513f\u5b50\n    int sz = 0; // \u8bb0\u5f55\u4ee5\u8be5\u8282\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u4e2d\u8282\u70b9\u7684\u4e2a\u6570\n}f[MAX];\nint tot = 0, rt = 0;\n\n// 0 \u662f\u7236\u7684\u5de6\u513f\u5b50\uff0c1 \u662f\u7236\u7684\u53f3\u513f\u5b50\nint get(int x, int fa)\n{ return x == f[fa].ls ? 0 : 1; }\n\n// \u66f4\u65b0\u6811\u5927\u5c0f\nvoid push_up(int x)\n{ [x].sz = f[f[x].ls].sz + f[f[x].rs].sz + f[x].cnt; }\n\n// \u53f3\u65cb\nvoid zig(int x)\n{\n    int ls = f[x].ls;\n    if (f[x].fa)\n    {\n        if (get(x, f[x].fa))f[f[x].fa].rs = ls;\n        else f[f[x].fa].ls = ls;\n    }\n    f[ls].fa = f[x].fa;\n    f[x].fa = ls;\n    f[x].ls = f[ls].rs;\n    if (f[ls].rs)\n        f[f[ls].rs].fa = x;\n    f[ls].rs = x;\n    // \u66f4\u65b0\u6811\u5927\u5c0f \n    push_up(x), push_up(ls);\n}\n\n// \u5de6\u65cb\nvoid zag(int x)\n{\n    int rs = f[x].rs;\n    if (f[x].fa)\n    {\n        if (get(x, f[x].fa))f[f[x].fa].rs = rs;\n        else f[f[x].fa].ls = rs;\n    }\n    f[rs].fa = f[x].fa;\n    f[x].fa = rs;\n    f[x].rs = f[rs].ls;\n    if (f[rs].ls)f[f[rs].ls].fa = x;\n    f[rs].ls = x;\n    // \u66f4\u65b0\u6811\u5927\u5c0f \n    push_up(x), push_up(rs);\n}\n\n// \u628a\u7f16\u53f7\u4e3a x \u7684\u8282\u70b9\u8f6c\u5230\u6811\u6839\nvoid splay(int x)\n{\n    for (int fa = f[x].fa; fa; fa = f[x].fa)\n    {\n        if (f[fa].ls == x) zig(fa);\n        else zag(fa);\n    }\n    rt = x; // x \u4e3a\u65b0\u7684\u6839\n}\n\n// \u8fd4\u56de\u8282\u70b9\u7f16\u53f7\nvoid find(int val)\n{\n    int cur = rt;\n    while(cur)\n    {\n        if(f[cur].val == val)\n        {\n            splay(cur);\n            return;\n        }\n        if(f[cur].val &gt; val) cur = f[cur].ls;\n        else cur = f[cur].rs;\n    }\n}\n\n// \u8fd4\u56de\u7b2c k \u5c0f\u503c\nint k_th(int x, int k)\n{\n    int ls = f[x].ls;\n    if (f[ls].sz &gt;= k) return k_th(ls, k);\n    if (f[x].cnt + f[ls].sz &lt; k) return k_th(f[x].rs, k - f[x].cnt - f[ls].sz);\n    splay(x);\n    return f[x].val;\n}\n\n// \u63d2\u5165 val\nvoid insert(int val)\n{   \n    // \u7a7a\u6811\u5c31\u5efa\u6811\n    if (!rt)\n    {\n        rt = ++tot;\n        f[rt].val = val;\n        f[rt].sz = f[rt].cnt = 1;\n        return;\n    }\n    int cur = rt;\n    while (cur)\n    {\n        if (f[cur].val == val)\n        {\n            f[cur].cnt++;\n            f[cur].sz++;\n            splay(cur);\n            return;\n        }\n        if (f[cur].val &gt; val)\n        {\n            // \u4e0d\u5b58\u5728 val \u5c31\u5148\u521b\u5efa\u3002\n            if (!f[cur].ls)\n            {\n                f[cur].ls = ++tot;\n                f[f[cur].ls].val = val;\n                f[f[cur].ls].fa = cur;\n            }\n            cur = f[cur].ls;\n        }\n        else\n        {\n            if (!f[cur].rs)\n            {\n                f[cur].rs = ++tot;\n                f[f[cur].rs].val = val;\n                f[f[cur].rs].fa = cur;\n            }\n            cur = f[cur].rs;\n        }\n    }\n}\n\n// \u5220\u9664 val\nvoid remove(int val)\n{\n    // \u5148\u628a\u8981\u5220\u7684\u70b9\u6447\u5230\u6811\u6839\n    find(val);\n    if(--f[rt].cnt)return;\n\n    int ls = f[rt].ls, rs = f[rt].rs;\n    f[rt].ls = f[rt].rs = 0;\n\n    // \u5de6\u6811\u4e0d\u5b58\u5728\uff0c\u76f4\u63a5\u8ba9\u53f3\u6811\u5f53\u6839\u3002\n    if (!ls)\n    {\n        rt = rs;\n        f[rt].fa = 0;\n        return;\n    }\n    f[ls].fa = 0;\n    k_th(ls, f[ls].sz);\n    f[rt].rs = rs;\n    if (rs) f[rs].fa = rt;\n    push_up(rt);\n}\n\n// \u8fd4\u56de val \u7684\u6392\u540d\n// \u4e0d\u4fdd\u8bc1 val \u5728\u6811\u4e2d\uff0c\u67e5\u8be2\u524d\u5148\u63d2\u5165\nint rnk(int val)\n{\n    insert(val);\n    int res = f[f[rt].ls].sz + 1;\n    remove(val);\n    return res;\n}\n\n// val \u7684\u524d\u9a71\u548c\u540e\u7ee7\n// \u4e0d\u4fdd\u8bc1 val \u5b58\u5728\u4e0e\u6811\u4e2d\uff0c\u4f7f\u7528\u524d\u5148\u8981\u5c06 val \u63d2\u5165\nint pre(int val)\n{ \n    insert(val);\n    int res = k_th(f[rt].ls, f[f[rt].ls].sz); \n    remove(val);\n    return res;\n}\nint nxt(int val)\n{ \n    insert(val);\n    int res = k_th(f[rt].rs, 1); \n    remove(val);\n    return res;\n}\n\nvoid solve()\n{\n    int op, val;\n    cin &gt;&gt; op &gt;&gt; val;\n    switch (op)\n    {\n    case 1: insert(val); break;\n    case 2: remove(val); break;\n    case 3: cout &lt;&lt; rnk(val) &lt;&lt; '\\n'; break;\n    case 4: cout &lt;&lt; k_th(rt, val) &lt;&lt; '\\n'; break;\n    case 5: cout &lt;&lt; pre(val) &lt;&lt; '\\n';  break;\n    case 6: cout &lt;&lt; nxt(val) &lt;&lt; '\\n';  break;\n    }\n}\n</code></pre>"},{"location":"DS/Splay/Splay/#splay_1","title":"Splay \u5b9e\u73b0\u6587\u827a\u5e73\u8861\u6811","text":"<p>P3391 \u3010\u6a21\u677f\u3011\u6587\u827a\u5e73\u8861\u6811</p> <p>\u5b9e\u73b0\u65f6\u53ef\u4ee5\u5c06 \\(0\\) \u548c \\(n + 1\\) \u90fd\u63d2\u5165\u5230\u6811\u4e2d\uff0c\u5c31\u4e0d\u7528\u8003\u8651\u8fb9\u754c\u4e86\uff0c\u7f16\u7801\u66f4\u65b9\u4fbf\u70b9\u3002</p> Code <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nusing ll = long long;\nusing ull = unsigned long long;\nconstexpr int MAX = 2e5 + 100;\nextern void solve();\n\n\nint main()\n{\n    ios::sync_with_stdio(false);\n    cin.tie(0), cout.tie(0);\n\n#ifdef LOCAL\n    freopen(\"in.in\", \"r\", stdin);\n    freopen(\"out.out\", \"w\", stdout);\n#endif\n\n    // int T = 0;\n    // for (cin &gt;&gt; T; T--;)\n    solve();\n    return 0;\n}\n\nstruct tn\n{\n    int val = 0;\n    int fa = 0, ls = 0, rs = 0;\n    int sz = 0;\n    int tag = 0;    // \u8bb0\u5f55\u533a\u95f4\u662f\u5426\u53cd\u8f6c\n}f[MAX];\nint tot = 0, rt = 0, n, m;\n\n// 0 \u662f\u7236\u7684\u5de6\u513f\u5b50\uff0c1 \u662f\u7236\u7684\u53f3\u513f\u5b50\nint get(int x, int fa)\n{ return x == f[fa].ls ? 0 : 1; }\n\nvoid push_up(int x)\n{ f[x].sz = f[f[x].ls].sz + f[f[x].rs].sz + 1; }\n\n// \u7ed9\u8282\u70b9\u6253\u4e0a\u53cd\u8f6c\u6807\u8bb0\nvoid add_tag(int x)\n{\n    swap(f[x].ls, f[x].rs);\n    f[x].tag ^= 1;\n}\n\n// \u4e0b\u4f20\u6807\u8bb0\nvoid push_down(int x)\n{\n    if (f[x].tag)\n    {\n        add_tag(f[x].ls);\n        add_tag(f[x].rs);\n        f[x].tag = 0;\n    }\n}\n\n// \u53f3\u65cb\nvoid zig(int x)\n{\n    int ls = f[x].ls;\n    if (f[x].fa)\n    {\n        if (get(x, f[x].fa))f[f[x].fa].rs = ls;\n        else f[f[x].fa].ls = ls;\n    }\n    f[ls].fa = f[x].fa;\n    f[x].fa = ls;\n    f[x].ls = f[ls].rs;\n    if (f[ls].rs)\n        f[f[ls].rs].fa = x;\n    f[ls].rs = x;\n\n    push_up(x), push_up(ls);\n}\n\n// \u5de6\u65cb\nvoid zag(int x)\n{\n    int rs = f[x].rs;\n    if (f[x].fa)\n    {\n        if (get(x, f[x].fa))f[f[x].fa].rs = rs;\n        else f[f[x].fa].ls = rs;\n    }\n    f[rs].fa = f[x].fa;\n    f[x].fa = rs;\n    f[x].rs = f[rs].ls;\n    if (f[rs].ls)f[f[rs].ls].fa = x;\n    f[rs].ls = x;\n    push_up(x), push_up(rs);\n}\n\n// \u628a x \u8f6c\u5230\u6811\u6839\nvoid splay(int x)\n{\n    for (int fa = f[x].fa; fa; fa = f[x].fa)\n    {\n        if (f[fa].ls == x) zig(fa);\n        else zag(fa);\n    }\n    rt = x;\n}\n\n// \u627e\u5230\u524d\u9762\u6709 x \u4e2a\u6570\u5b57\u7684\u8282\u70b9\n// \u8fd9\u91cc\u67e5\u627e\u4e0d\u80fd\u50cf\u4e00\u822c\u7684\u5e73\u8861\u6811\u90a3\u6837\u6bd4\u8f83\u952e\u503c\n// \u800c\u662f\u8981\u770b\u524d\u9762\u6570\u5b57\u7684\u4e2a\u6570\nvoid find(int x)\n{\n    int cur = rt;\n    while (cur)\n    {\n        push_down(cur);\n        if (f[f[cur].ls].sz == x)\n        {\n            splay(cur);\n            return;\n        }\n        if (f[f[cur].ls].sz &gt; x) cur = f[cur].ls;\n        else  x -= f[f[cur].ls].sz + 1, cur = f[cur].rs;\n    }\n}\n\n// \u63d2\u5165 val\uff0c\u548c\u666e\u901a\u5e73\u8861\u6811\u76f8\u540c\nvoid insert(int val)\n{\n    // \u7a7a\u6811\u5c31\u5efa\u6811\n    if (!rt)\n    {\n        rt = ++tot;\n        f[rt].val = val;\n        f[rt].sz = 1;\n        return;\n    }\n    int cur = rt;\n    while (cur)\n    {\n        if (f[cur].val == val)\n        {\n            f[cur].sz++;\n            splay(cur);\n            return;\n        }\n        if (f[cur].val &gt; val)\n        {\n            // \u4e0d\u5b58\u5728 val \u5c31\u5148\u521b\u5efa\u3002\n            if (!f[cur].ls)\n            {\n                f[cur].ls = ++tot;\n                f[f[cur].ls].val = val;\n                f[f[cur].ls].fa = cur;\n            }\n            cur = f[cur].ls;\n        }\n        else\n        {\n            if (!f[cur].rs)\n            {\n                f[cur].rs = ++tot;\n                f[f[cur].rs].val = val;\n                f[f[cur].rs].fa = cur;\n            }\n            cur = f[cur].rs;\n        }\n    }\n}\n\n\nvoid reverse(int l, int r)\n{\n    // \u5148\u628a r + 1 \u65cb\u5230\u6811\u6839\uff0c\u518d\u628a l - 1 \u65cb\u5230\u6811\u6839\uff0c\u5c31\u80fd\u5f97\u5230\u60f3\u8981\u7684\u7ed3\u679c\n    find(r + 1); find(l - 1);\n    add_tag(f[f[rt].rs].ls);\n}\n\nvoid dfs(int x)\n{\n    if (!x)return;\n    // dfs \u7684\u65f6\u5019\u4e5f\u8981\u8bb0\u5f97\u4e0b\u4f20\u6807\u8bb0\n    push_down(x);\n    dfs(f[x].ls);\n    // \u6211\u4eec\u63d2\u5165\u4e86 0 \u548c n + 1\uff0c\u8f93\u51fa\u65f6\u4e0d\u80fd\u8f93\u51fa\u3002\n    if (f[x].val &lt;= n and f[x].val &gt; 0)cout &lt;&lt; f[x].val &lt;&lt; ' ';\n    dfs(f[x].rs);\n}\n\n\nvoid solve()\n{\n    cin &gt;&gt; n &gt;&gt; m;\n    // \u989d\u5916\u63d2\u5165 0 \u548c n + 1\uff0c\u8fd9\u6837\u8fb9\u754c\u5c31\u4e0d\u7528\u8003\u8651\u4e86\uff0c\u7f16\u7801\u7b80\u5355\u70b9\u3002\n    for (int i = 0; i &lt;= n + 1; ++i)\n        insert(i);\n    while (m--)\n    {\n        int l, r;\n        cin &gt;&gt; l &gt;&gt; r;\n        reverse(l, r);\n    }\n    dfs(rt);\n}\n</code></pre>"},{"location":"DS/UnionFind/Problems/","title":"Exercise","text":"\u9898\u76ee \u96be\u5ea6 \u77e5\u8bc6 P3367 \u666e\u53ca\u2212 \u5e76\u67e5\u96c6\u6a21\u677f P2024 \u63d0\u9ad8+/\u7701\u9009\u2212 \u5e26\u6743\u5e76\u67e5\u96c6 P3958 \u666e\u53ca/\u63d0\u9ad8\u2212 \u51e0\u4f55+\u5e76\u67e5\u96c6"},{"location":"DS/UnionFind/UF/","title":"\u5e76\u67e5\u96c6","text":""},{"location":"DS/UnionFind/UF/#_2","title":"\u5b9a\u4e49","text":"<p>\u5e76\u67e5\u96c6\u662f\u4e00\u79cd\u7528\u6765\u7ef4\u62a4\u5143\u7d20\u6240\u5c5e\u7684\u6570\u636e\u7ed3\u6784\uff0c\u662f\u901a\u8fc7\u68ee\u6797\u5b9e\u73b0\u7684\uff0c\u6240\u5c5e\u76f8\u540c\u7684\u5143\u7d20\u5728\u540c\u4e00\u9897\u6811\u4e0a\uff0c\u901a\u5e38\u5143\u7d20\u7684\u6240\u5c5e\u6307\u7684\u5c31\u662f\u5b83\u6240\u5c5e\u6811\u7684\u6839\u8282\u70b9\u3002</p> <p>\u5982\u4e0b\u56fe\u5c31\u662f\u4e00\u4e2a\u5e76\u67e5\u96c6\u7684\u7ed3\u6784\u56fe\uff1a</p> <p>\u5e76\u67e5\u96c6\u652f\u6301\u4e24\u79cd\u64cd\u4f5c\uff1a</p> <ul> <li>\u5e76\uff1a\u5408\u5e76\uff0c\u5c06\u4e24\u4e2a\u5143\u7d20\u6240\u5c5e\u7684\u96c6\u5408\u5408\u5e76</li> <li>\u67e5\uff1a\u67e5\u8be2\uff0c\u67e5\u8be2\u4e24\u4e2a\u5143\u7d20\u662f\u5426\u662f\u5728\u540c\u4e00\u96c6\u5408\u4e2d</li> </ul>"},{"location":"DS/UnionFind/UF/#_3","title":"\u5b9e\u73b0","text":"<p>\u5e76\u67e5\u96c6\u5173\u5fc3\u5c31\u662f\u4e00\u4e2a\u5143\u7d20\u7684\u6240\u5c5e\uff0c\u4e5f\u5c31\u662f\u5b83\u6240\u5728\u6811\u7684\u6839\u8282\u70b9\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u4e00\u4e2a\u6570\u7ec4 \\(fa[]\\) \u6765\u5b58\u50a8\u4e00\u4e2a\u5143\u7d20\u7684\u7236\u8282\u70b9\uff0c\u6211\u4eec\u901a\u8fc7 \\(fa[]\\) \u6570\u7ec4\u4e0d\u65ad\u5411\u4e0a\u67e5\u627e\uff0c\u6765\u5bfb\u627e\u4e00\u4e2a\u8282\u70b9\u6240\u5728\u6811\u7684\u6839\u8282\u70b9\u3002</p>"},{"location":"DS/UnionFind/UF/#_4","title":"\u521d\u59cb\u5316","text":"<p>\u521d\u59cb\u65f6\uff0c\u6211\u4eec\u8ba9\u6bcf\u4e00\u4e2a\u5143\u7d20\u90fd\u5355\u72ec\u7684\u4e00\u68f5\u6811\uff0c\u5373\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\u7684\u96c6\u5408\u3002\u6211\u4eec\u5c06\u6bcf\u4e2a\u5143\u7d20\u7684\u7236\u4eb2\u8282\u70b9\u8bbe\u4e3a\u5b83\u81ea\u5df1\u3002</p> <pre><code>//\u521d\u59cb\u65f6\u5c06\u8282\u70b9\u7684\u6839\u8282\u70b9\u8bbe\u4e3a\u81ea\u5df1\nvoid init(int n){\n    for(int i=1;i&lt;=n;++i)\n        fa[i]=i;\n}\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)</p>"},{"location":"DS/UnionFind/UF/#_5","title":"\u67e5\u8be2","text":"<p>\u6211\u4eec\u53ea\u9700\u8981\u6cbf\u7740\u6811\u5411\u4e0a\u67e5\u627e\u6839\u8282\u70b9\u5373\u53ef</p> <p>\u4f46\u662f\u5f53\u6811\u6df1\u5ea6\u8fc7\u6df1\u65f6\uff0c\u591a\u6b21\u67e5\u8be2\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4f1a\u5f88\u9ad8\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u8fdb\u884c\u8def\u5f84\u538b\u7f29\u3002</p>"},{"location":"DS/UnionFind/UF/#_6","title":"\u8def\u5f84\u538b\u7f29","text":"<p>\u6211\u4eec\u4f7f\u7528\u5e76\u67e5\u96c6\u5173\u7cfb\u7684\u53ea\u662f\u5143\u7d20\u4e0e\u6839\u8282\u70b9\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u90a3\u4e48\u5176\u4ed6\u5143\u7d20\u4e4b\u95f4\u7684\u5173\u7cfb\u5bf9\u6211\u4eec\u6765\u8bf4\uff0c\u5c31\u6ca1\u4ec0\u4e48\u7528\u6765\uff0c\u6211\u4eec\u53ea\u8981\u77e5\u9053\u67d0\u4e2a\u8282\u70b9\u7684\u6839\u8282\u70b9\u662f\u4ec0\u4e48\u3002\u6240\u4ee5\u5728\u67e5\u8be2\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5c06\u67e5\u8be2\u8def\u5f84\u4e0a\u7684\u8282\u70b9\u90fd\u7684\u7236\u8282\u70b9\u90fd\u6539\u6210\u5176\u6839\u8282\u70b9\u5c31\u884c\u4e86\u3002</p> <p>\u5982\u4e0a\u56fe\u662f\u67e5\u8be2 \\(8\\) \u8282\u70b9\u65f6\u8fdb\u884c\u7684\u8def\u5f84\u538b\u7f29\uff0c\u628a\u7ea2\u8272\u8def\u5f84\u4e0a\u7684\u8282\u70b9\u7684\u7236\u8282\u70b9\u90fd\u6539\u6210\u6839\u8282\u70b9\u3002</p> <pre><code>int ask(int x){\n    //\u5982\u679c\u8282\u70b9\u7684\u7236\u8282\u70b9\u662f\u5176\u672c\u8eab\uff0c\u8bf4\u660e\u5df2\u7ecf\u5230\u6839\u8282\u70b9\u4e86\n    if(fa[x]==x)return x;\n    //\u5c06\u8def\u5f84\u4e0a\u8282\u70b9\u7684\u7236\u8282\u70b9\u90fd\u6539\u8be5\u6811\u7684\u6839\u8282\u70b9\n    return fa[x] = ask(fa[x]);\n}\n</code></pre>"},{"location":"DS/UnionFind/UF/#_7","title":"\u5408\u5e76","text":"<p>\u6211\u4eec\u53ea\u9700\u8981\u5c06\u4e00\u68f5\u6811\u7684\u6839\u8282\u70b9\u7684\u7236\u8282\u70b9\u6539\u6210\u53e6\u4e00\u68f5\u6811\u7684\u6839\u8282\u70b9\u5373\u53ef</p> <p><pre><code>void merge(int x,int y){\n    fa[ask(x)]=ask(y);\n}\n</code></pre> \u5408\u5e76\u65f6\u4e5f\u53ef\u4e5f\u8fdb\u884c\u4e00\u5b9a\u7684\u4f18\u5316</p>"},{"location":"DS/UnionFind/UF/#_8","title":"\u542f\u53d1\u5f0f\u5408\u5e76","text":"<p>\u6211\u4eec\u9009\u62e9\u5c06\u8282\u70b9\u8f83\u5c11\u6216\u6df1\u5ea6\u8f83\u6d45\u7684\u6811\u8fde\u63a5\u5230\u53e6\u4e00\u9897\u6811\u4e0a\uff0c\u4f46\u4f18\u5316\u7684\u6548\u679c\u6709\u9650\u3002</p> <pre><code>void merge(int x,int y){\n    int i=ask(x),j=ask(y);\n    if(rak[i]&gt;rak[j])\n        fa[j]=i;\n    else fa[i]=j;\n    if(rak[i]==rak[j]&amp;&amp;i!=j)\n        rak[i]++;\n}\n</code></pre>"},{"location":"DS/UnionFind/UF/#_9","title":"\u5e26\u6743\u5e76\u67e5\u96c6","text":"<p>\u5728\u5e26\u6743\u5e76\u67e5\u96c6\u4e2d\uff0c\u4e24\u4e2a\u5143\u7d20\u5efa\u7acb\u8054\u7cfb\u65f6\uff0c\u4e0d\u662f\u7b80\u5355\u7684\u628a\u5b83\u4eec\u6240\u5728\u7684\u96c6\u5408\u5408\u5e76\uff0c\u8fd8\u8981\u7ed9\u5b83\u4eec\u4e4b\u95f4\u8d4b\u4e00\u6743\u503c\uff0c\u6765\u8868\u793a\u5b83\u4eec\u4e4b\u95f4\u7684\u5173\u7cfb\u3002\u5b9e\u73b0\u65f6\u6211\u4eec\u8981\u518d\u5f00\u4e00\u4e2a\u6570\u7ec4\uff0c\u6765\u5b58\u50a8\u6bcf\u4e2a\u5143\u7d20\u4f55\u5176\u7236\u8282\u70b9\u6216\u6839\u8282\u70b9\u7684\u6743\u503c\u5173\u7cfb\u3002</p>"},{"location":"DS/UnionFind/UF/#_10","title":"\u5e76\u67e5\u96c6\u7684\u5176\u4ed6\u5e94\u7528","text":""},{"location":"DS/UnionFind/UF/#_11","title":"\u5e76\u67e5\u96c6\u627e\u73af","text":"<p>\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5e76\u67e5\u96c6\u6765\u5224\u65ad\u4e00\u4e2a\u65e0\u5411\u56fe\u4e2d\u662f\u5426\u6709\u73af\u7684\u5b58\u5728\uff0c\u601d\u8def\u4e5f\u5f88\u7b80\u5355\u3002</p> <p>\u5f53\u6211\u4eec\u5efa\u56fe\u65f6\uff0c\u8fde\u63a5 \\(u,v\\) \u8fd9\u4e24\u8282\u70b9\u7684\u65f6\u5019\uff0c\u5148\u5224\u65ad\u5b83\u4eec\u662f\u5426\u5df2\u7ecf\u8fde\u901a\uff0c\u5373\u5224\u65ad\u5b83\u4eec\u662f\u5426\u5728\u540c\u4e00\u7ec4\u5185\uff0c\u5982\u679c\u4e0d\u5728\uff0c\u5c31\u5c06\u5b83\u4eec\u52a0\u5230\u540c\u4e00\u7ec4\u4e2d\uff1b\u5982\u679c\u5df2\u7ecf\u5728\u540c\u4e00\u7ec4\u4e2d\uff0c\u8bf4\u660e\u8fde\u63a5\u6b64\u8fb9\u540e\u56fe\u4e2d\u5c31\u4f1a\u51fa\u73b0\u73af\u3002</p>"},{"location":"DS/UnionFind/UF/#_12","title":"\u5e76\u67e5\u96c6\u5b9e\u73b0\u6700\u5c0f\u751f\u6210\u6811","text":"<p>\u901a\u8fc7\u5e76\u67e5\u96c6\u5b9e\u73b0\u6700\u5c0f\u751f\u6210\u6811\u7684\u7b97\u6cd5\u662f \\(Kruskal\\) \u7b97\u6cd5\u3002</p> <p>\u8fd9\u662f\u4e00\u79cd\u8d2a\u5fc3\u7684\u6c42\u6700\u5c0f\u751f\u6210\u6811\u65b9\u6cd5\uff0c\u5728\u4fdd\u8bc1\u4e0d\u51fa\u73b0\u73af\u7684\u60c5\u51b5\u4e0b\uff0c\u6bcf\u6b21\u90fd\u5c06\u8fb9\u6743\u503c\u6700\u5c0f\u7684\u8fb9\u52a0\u5165\u5230\u5f53\u524d\u751f\u6210\u6811\u4e2d\uff0c\u76f4\u5230\u6240\u6709\u8282\u70b9\u90fd\u8fde\u901a\u4e3a\u6b62\u3002</p> <p>\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u5e76\u67e5\u96c6\u5c31\u8d77\u5230\u5224\u65ad\u662f\u5426\u4f1a\u51fa\u73b0\u73af\u7684\u89d2\u8272\u3002</p> <p>\u5177\u4f53\u89c1\u56fe\u8bba\u7684\u6700\u5c0f\u751f\u6210\u6811\u5185\u5bb9\u3002</p> <p>\u53c2\u8003\u6587\u7ae0\uff1a</p> <p>Oi Wiki-\u5e76\u67e5\u96c6</p> <p>\u5e76\u67e5\u96c6\u5224\u73af</p> <p>\u7b97\u6cd5\u7b14\u8bb0-\u5e76\u67e5\u96c6</p>"},{"location":"Graph/Flow/Problem/","title":"Problem","text":""},{"location":"Graph/Flow/Problem/#problem-set","title":"Problem Set","text":"\u9898\u76ee \u77e5\u8bc6\u70b9 AC\u4ee3\u7801 P2756-\u98de\u884c\u5458\u914d\u5bf9\u65b9\u6848\u95ee\u9898 \u4e8c\u5206\u56fe\u5339\u914d-\u7f51\u7edc\u6d41 P2756.cpp P2774-\u65b9\u683c\u53d6\u6570\u95ee\u9898 \u68cb\u76d8\u4e8c\u5206\u56fe-\u7f51\u7edc\u6d41 P2774.cpp P4009-\u6c7d\u8f66\u52a0\u6cb9\u884c\u9a76\u95ee\u9898 \u5206\u5c42\u56fe-\u8d39\u7528\u6d41 P4009.cpp P4014-\u5206\u914d\u95ee\u9898 \u5b8c\u7f8e\u5339\u914d-\u8d39\u7528\u6d41 P4014.cpp P4015-\u8fd0\u8f93\u95ee\u9898 \u8d39\u7528\u6d41 P4015.cpp P4016-\u8d1f\u8f7d\u5e73\u8861\u95ee\u9898 \u8d39\u7528\u6d41 P4016.cpp"},{"location":"Graph/Flow/Problem/#p2756cpp","title":"P2756.cpp","text":"<pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nconst ll INF = 0x7fffffff;\n\nconst int N = 405, M = 100005;\n\nint n, m, s, t;\nint head[N], cnt = 1;\nstruct node {\n    int to, next, w;\n} edge[M];\n\nvoid add(int u, int v, int w) {\n    cnt++;\n    edge[cnt].w = w;\n    edge[cnt].to = v;\n    edge[cnt].next = head[u];\n    head[u] = cnt;\n    cnt++;\n    edge[cnt].w = 0;\n    edge[cnt].to = u;\n    edge[cnt].next = head[v];\n    head[v] = cnt;\n}\nint now[N], dep[N];\nint bfs() {\n    for (int i = 0; i &lt;= t; i++) dep[i] = INF;\n    dep[s] = 0;\n    now[s] = head[s];\n    queue&lt;int&gt; q;\n    q.push(s);\n    while (!q.empty()) {\n        int u = q.front(); q.pop();\n        for (int i = head[u]; i; i = edge[i].next) {\n            int v = edge[i].to;\n            if (edge[i].w &gt; 0 &amp;&amp; dep[v] == INF) {\n                q.push(v);\n                now[v] = head[v];\n                dep[v] = dep[u] + 1;\n                if (v == t) return 1;\n            }\n        }\n    }\n    return 0;\n}\nint dfs(int u, ll sum) {\n    if (u == t) return sum;\n    ll k, flow = 0;\n    for (int i = now[u]; i &amp;&amp; sum &gt; 0; i = edge[i].next) {\n        now[u] = i;\n        int v = edge[i].to;\n        if (edge[i].w &gt; 0 &amp;&amp; (dep[v] == dep[u] + 1)) {\n            k = dfs(v, min(sum, (ll)edge[i].w));\n            if (k == 0) dep[v] = INF;\n            edge[i].w -= k;\n            edge[i ^ 1].w += k;\n            flow += k;\n            sum -= k;\n        }\n    }\n    return flow;\n}\nll Dinic() {\n    ll ans = 0;\n    while (bfs()) ans += dfs(s, INF);\n    return ans;\n}\n\n\nint main() {\n    scanf(\"%d%d\", &amp;m, &amp;n);\n    int u, v;\n    while (~scanf(\"%d%d\", &amp;u, &amp;v)) {\n        if (u == -1 &amp;&amp; v == -1) break;\n        add(u, v, 1);\n    }\n    s = 0;\n    t = n + 1;\n    for (int i = 1; i &lt;= m; i++) {\n        add(s, i, 1);\n    }\n    for (int i = m + 1; i &lt;= n; i++) {\n        add(i, t, 1);\n    }\n    printf(\"%lld\\n\", Dinic());\n    std::vector&lt;pair&lt;int, int&gt; &gt; ans;\n    for (int i = 1; i &lt;= m; i++) {\n        for (int j = head[i]; j; j = edge[j].next) {\n            if (edge[j].w == 0 &amp;&amp; edge[j].to != s) {\n                ans.push_back(make_pair(i, edge[j].to));\n            }\n        }\n    }\n    for (auto d : ans) {\n        printf(\"%d %d\\n\", d.first, d.second);\n    }\n}\n</code></pre>"},{"location":"Graph/Flow/Problem/#p2774cpp","title":"P2774.cpp","text":"<pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nconst ll INF = 0x7fffffff;\n\nconst int N = 10005, M = 1000005;\n\nint n, m, s, t;\nint head[N], cnt = 1;\nstruct node {\n    int to, next, w;\n} edge[M];\n\nvoid add(int u, int v, int w) {\n    cnt++;\n    edge[cnt].w = w;\n    edge[cnt].to = v;\n    edge[cnt].next = head[u];\n    head[u] = cnt;\n    cnt++;\n    edge[cnt].w = 0;\n    edge[cnt].to = u;\n    edge[cnt].next = head[v];\n    head[v] = cnt;\n}\nint now[N], dep[N];\nint bfs() {\n    for (int i = 0; i &lt;= t; i++) dep[i] = INF;\n    dep[s] = 0;\n    now[s] = head[s];\n    queue&lt;int&gt; q;\n    q.push(s);\n    while (!q.empty()) {\n        int u = q.front(); q.pop();\n        for (int i = head[u]; i; i = edge[i].next) {\n            int v = edge[i].to;\n            if (edge[i].w &gt; 0 &amp;&amp; dep[v] == INF) {\n                q.push(v);\n                now[v] = head[v];\n                dep[v] = dep[u] + 1;\n                if (v == t) return 1;\n            }\n        }\n    }\n    return 0;\n}\nint dfs(int u, ll sum) {\n    if (u == t) return sum;\n    ll k, flow = 0;\n    for (int i = now[u]; i &amp;&amp; sum &gt; 0; i = edge[i].next) {\n        now[u] = i;\n        int v = edge[i].to;\n        if (edge[i].w &gt; 0 &amp;&amp; (dep[v] == dep[u] + 1)) {\n            k = dfs(v, min(sum, (ll)edge[i].w));\n            if (k == 0) dep[v] = INF;\n            edge[i].w -= k;\n            edge[i ^ 1].w += k;\n            flow += k;\n            sum -= k;\n        }\n    }\n    return flow;\n}\nll Dinic() {\n    ll ans = 0;\n    while (bfs()) ans += dfs(s, INF);\n    return ans;\n}\n\nint dx[] = {0, 0, 1, -1};\nint dy[] = {1, -1, 0, 0};\n\nvoid LuanGao() {\n    int r, c; scanf(\"%d%d\", &amp;r, &amp;c);\n    ll s1 = 0, s2 = 0;\n    for (int i = 1; i &lt;= r; i++) {\n        for (int j = 1; j &lt;= c; j++) {\n            ll w; scanf(\"%lld\", &amp;w);\n            if ((i + j) &amp; 1) s1 += w;\n            else s2 += w;\n        }\n    }\n    printf(\"%lld\\n\", max(s1, s2));\n}\n\nint main() {\n    //LuanGao();\n    ll r, c;\n    scanf(\"%lld%lld\", &amp;r, &amp;c);\n    ll sum = 0;\n    s = 0; t = r * c + 1;\n    for (int i = 1; i &lt;= r; i++) {\n        for (int j = 1; j &lt;= c; j++) {\n            ll w; scanf(\"%lld\", &amp;w); sum += w;\n            if ((i + j) % 2 == 0) {\n                add(s, (i - 1)*c + j, w);\n                for (int k = 0; k &lt; 4; k++) {\n                    int x = i + dx[k];\n                    int y = j + dy[k];                                          \n                    if (x &gt;= 1 &amp;&amp; y &gt;= 1 &amp;&amp; x &lt;= r &amp;&amp; y &lt;= c) {\n                        add((i - 1)*c + j, (x - 1)*c + y, INF);\n                    }\n                }\n            } else {\n                add((i - 1)*c + j, t, w);\n            }\n        }\n    }\n    printf(\"%lld\\n\", sum - Dinic());\n}\n</code></pre>"},{"location":"Graph/Flow/Problem/#p4009cpp","title":"P4009.cpp","text":"<pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nconst ll INF = 0x7fffffff;\n\nconst int N = 200015, M = 1000015;\nint n, m, s, t;\nint head[N], cnt = 1;\nstruct node {\n    int to, next, w, c;\n} edge[M];\n\nvoid add(int u, int v, int w, int c) {\n    cnt++;\n    edge[cnt].w = w;\n    edge[cnt].to = v;\n    edge[cnt].next = head[u];\n    edge[cnt].c = c;\n    head[u] = cnt;\n    cnt++;\n    edge[cnt].w = 0;\n    edge[cnt].to = u;\n    edge[cnt].next = head[v];\n    edge[cnt].c = -c;\n    head[v] = cnt;\n}\nint dis[N], pre[N], last[N], flow[N];\nbool inq[N];\n\nqueue&lt;int&gt; q;\nbool spfa(int s, int t) {\n    for (int i = 0; i &lt;= t + 10; i++) {\n        dis[i] = flow[i] = INF;\n        inq[i] = false;\n    }\n    q.push(s);\n    inq[s] = 1; dis[s] = 0; pre[t] = -1;\n    while (!q.empty()) {\n        int u = q.front(); q.pop();\n        inq[u] = 0;\n        for (int i = head[u]; i; i = edge[i].next) {\n            int v = edge[i].to;\n            int w = edge[i].w;\n            int cost = edge[i].c;\n            if (w &gt; 0 &amp;&amp; dis[v] &gt; dis[u] + cost) {\n                dis[v] = dis[u] + cost;\n                pre[v] = u;\n                last[v] = i;\n                flow[v] = min(w, flow[u]);\n                if (!inq[v]) {\n                    inq[v] = 1;\n                    q.push(v);\n                }\n            }\n        }\n    }\n    return pre[t] != -1;\n}\n\nvoid MinCost_MaxFlow(int&amp; maxflow, int&amp; mincost) {\n    maxflow = mincost = 0;\n    while (spfa(s, t)) {\n        int now = t;\n        maxflow += flow[t];\n        //\u8fd9\u91cc\u8d39\u7528\u4e3a\u5355\u4f4d\u6d41\u91cf\u7684\u8d39\u7528\n        mincost += flow[t] * dis[t];\n        while (now != s) {\n            edge[last[now]].w -= flow[t];\n            edge[last[now] ^ 1].w += flow[t];\n            now = pre[now];\n        }\n    }\n}\nint f(int x, int y, int k) {\n    return (x - 1) * n + y + k * n * n;\n}\nint K, A, B, C;\nint main() {\n    scanf(\"%d%d%d%d%d\", &amp;n, &amp;K, &amp;A, &amp;B, &amp;C);\n    s = (K + 1) * n * n + 1;\n    t = s + 1;\n    add(s, f(1, 1, 0), 1, 0);\n    for (int k = 1; k &lt;= K; k++) {\n        add(f(n, n, k), t, 1, 0);\n    }\n    for (int i = 1; i &lt;= n; i++) {\n        for (int j = 1; j &lt;= n; j++) {\n            int op; scanf(\"%d\", &amp;op);\n            if (op == 1) {\n                for (int k = 1; k &lt;= K; k++) {\n                    add(f(i, j, k), f(i, j, 0), 1, A);\n                    if (i &lt; n) {\n                        add(f(i, j, 0), f(i + 1, j, 1), 1, 0);\n                    }\n                    if (j &lt; n) {\n                        add(f(i, j, 0), f(i, j + 1, 1), 1, 0);\n                    }\n                    if (i &gt; 1) {\n                        add(f(i, j, 0), f(i - 1, j, 1), 1, B);\n                    }\n                    if (j &gt; 1) {\n                        add(f(i, j, 0), f(i, j - 1, 1), 1, B);\n                    }\n                }\n            } else {\n                for (int k = 0; k &lt;= K - 1; k++) {\n                    if (i &lt; n) {\n                        add(f(i, j, k), f(i + 1, j, k + 1), 1, 0);\n                    }\n                    if (j &lt; n) {\n                        add(f(i, j, k), f(i, j + 1, k + 1), 1, 0);\n                    }\n                    if (i &gt; 1) {\n                        add(f(i, j, k), f(i - 1, j, k + 1), 1, B);\n                    }\n                    if (j &gt; 1) {\n                        add(f(i, j, k), f(i, j - 1, k + 1), 1, B);\n                    }\n                }\n                add(f(i, j, K), f(i, j, 0), 1, A + C);\n            }\n        }\n    }\n    int maxflow = 0, mincost = 0;\n    MinCost_MaxFlow(maxflow, mincost);\n    printf(\"%d\\n\", mincost);\n}\n</code></pre>"},{"location":"Graph/Flow/Problem/#p4014cpp","title":"P4014.cpp","text":"<pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nconst ll INF = 0x7fffffff;\n\nconst int N = 200005, M = 200005;\nint n, m, s, t;\nint head[N], cnt = 1;\nstruct node {\n    int to, next, w, c;\n} edge[M];\n\nvoid add(int u, int v, int w, int c) {\n    cnt++;\n    edge[cnt].w = w;\n    edge[cnt].to = v;\n    edge[cnt].next = head[u];\n    edge[cnt].c = c;\n    head[u] = cnt;\n    cnt++;\n    edge[cnt].w = 0;\n    edge[cnt].to = u;\n    edge[cnt].next = head[v];\n    edge[cnt].c = -c;\n    head[v] = cnt;\n}\nint dis[N], pre[N], last[N], flow[N];\nbool inq[N];\n\nqueue&lt;int&gt; q;\nbool spfa_min(int s, int t) {\n    for (int i = 0; i &lt;= 2 * n + 10; i++) {\n        dis[i] = flow[i] = INF;\n        inq[i] = false;\n    }\n    q.push(s);\n    inq[s] = 1; dis[s] = 0; pre[t] = -1;\n    while (!q.empty()) {\n        int u = q.front(); q.pop();\n        inq[u] = 0;\n        for (int i = head[u]; i; i = edge[i].next) {\n            int v = edge[i].to;\n            int w = edge[i].w;\n            int cost = edge[i].c;\n            if (w &gt; 0 &amp;&amp; dis[v] &gt; dis[u] + cost) {\n                dis[v] = dis[u] + cost;\n                pre[v] = u;\n                last[v] = i;\n                flow[v] = min(w, flow[u]);\n                if (!inq[v]) {\n                    inq[v] = 1;\n                    q.push(v);\n                }\n            }\n        }\n    }\n    return pre[t] != -1;\n}\n\nbool spfa_max(int s, int t) {\n    for (int i = 0; i &lt;= 2 * n + 10; i++) {\n        dis[i] = flow[i] = -INF;\n        inq[i] = false;\n    }\n    q.push(s);\n    inq[s] = 1; dis[s] = 0; pre[t] = -1;\n    while (!q.empty()) {\n        int u = q.front(); q.pop();\n        inq[u] = 0;\n        for (int i = head[u]; i; i = edge[i].next) {\n            int v = edge[i].to;\n            int w = edge[i].w;\n            int cost = edge[i].c;\n            if (w &gt; 0 &amp;&amp; dis[v] &lt; dis[u] + cost) {\n                dis[v] = dis[u] + cost;\n                pre[v] = u;\n                last[v] = i;\n                flow[v] = min(w, flow[u]);\n                if (!inq[v]) {\n                    inq[v] = 1;\n                    q.push(v);\n                }\n            }\n        }\n    }\n    return pre[t] != -1;\n}\n\nvoid MinCost_MaxFlow(int&amp; maxflow, int&amp; mincost) {\n    maxflow = mincost = 0;\n    while (spfa_min(s, t)) {\n        int now = t;\n        maxflow += flow[t];\n        //\u8fd9\u91cc\u8d39\u7528\u4e3a\u5355\u4f4d\u6d41\u91cf\u7684\u8d39\u7528\n        mincost += flow[t] * dis[t];\n        while (now != s) {\n            edge[last[now]].w -= flow[t];\n            edge[last[now] ^ 1].w += flow[t];\n            now = pre[now];\n        }\n    }\n}\n\nint G[104][104];\n\nint main() {\n    scanf(\"%d\", &amp;n);\n    for (int i = 1; i &lt;= n; i++) {\n        for (int j = 1; j &lt;= n; j++) {\n            scanf(\"%d\", &amp;G[i][j]);\n        }\n    }\n    s = 0, t = 2 * n + 1;\n\n    for (int i = 1; i &lt;= n; i++) {\n        add(s, i, 1, 0);\n        add(i + n, t, 1, 0);\n    }\n    for (int i = 1; i &lt;= n; i++) {\n        for (int j = 1; j &lt;= n; j++) {\n            int w = G[i][j];\n            add(i, j + n, 1, w);\n        }\n    }\n\n    int maxflow = 0, mincost = 0, maxcost = 0;\n    MinCost_MaxFlow(maxflow, mincost);\n\n    for (int i = 0; i &lt;= 2 * n + 1; i++) {\n        head[i] = 0;\n    }\n    cnt = 1;\n\n    for (int i = 1; i &lt;= n; i++) {\n        add(s, i, 1, 0);\n        add(i + n, t, 1, 0);\n    }\n    for (int i = 1; i &lt;= n; i++) {\n        for (int j = 1; j &lt;= n; j++) {\n            int w = -G[i][j];\n            add(i, j + n, 1, w);\n        }\n    }\n\n    MinCost_MaxFlow(maxflow, maxcost);\n\n    printf(\"%d\\n%d\\n\", mincost, -maxcost);\n}\n</code></pre>"},{"location":"Graph/Flow/Problem/#p4015cpp","title":"P4015.cpp","text":"<pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nconst ll INF = 0x7fffffff;\n\nconst int N = 200005, M = 200005;\nint n, m, s, t;\nint head[N], cnt = 1;\nstruct node {\n    int to, next, w, c;\n} edge[M];\n\nvoid add(int u, int v, int w, int c) {\n    cnt++;\n    edge[cnt].w = w;\n    edge[cnt].to = v;\n    edge[cnt].next = head[u];\n    edge[cnt].c = c;\n    head[u] = cnt;\n    cnt++;\n    edge[cnt].w = 0;\n    edge[cnt].to = u;\n    edge[cnt].next = head[v];\n    edge[cnt].c = -c;\n    head[v] = cnt;\n}\nint dis[N], pre[N], last[N], flow[N];\nbool inq[N];\n\nqueue&lt;int&gt; q;\nbool spfa(int s, int t) {\n    for (int i = 0; i &lt;= n + 10; i++) {\n        dis[i] = flow[i] = INF;\n        inq[i] = false;\n    }\n    q.push(s);\n    inq[s] = 1; dis[s] = 0; pre[t] = -1;\n    while (!q.empty()) {\n        int u = q.front(); q.pop();\n        inq[u] = 0;\n        for (int i = head[u]; i; i = edge[i].next) {\n            int v = edge[i].to;\n            int w = edge[i].w;\n            int cost = edge[i].c;\n            if (w &gt; 0 &amp;&amp; dis[v] &gt; dis[u] + cost) {\n                dis[v] = dis[u] + cost;\n                pre[v] = u;\n                last[v] = i;\n                flow[v] = min(w, flow[u]);\n                if (!inq[v]) {\n                    inq[v] = 1;\n                    q.push(v);\n                }\n            }\n        }\n    }\n    return pre[t] != -1;\n}\n\nvoid MinCost_MaxFlow(int&amp; maxflow, int&amp; mincost) {\n    maxflow = mincost = 0;\n    while (spfa(s, t)) {\n        int now = t;\n        maxflow += flow[t];\n        //\u8fd9\u91cc\u8d39\u7528\u4e3a\u5355\u4f4d\u6d41\u91cf\u7684\u8d39\u7528\n        mincost += flow[t] * dis[t];\n        while (now != s) {\n            edge[last[now]].w -= flow[t];\n            edge[last[now] ^ 1].w += flow[t];\n            now = pre[now];\n        }\n    }\n}\nint G[105][105];\nint W[105];\nint main() {\n    int d;\n    scanf(\"%d%d\", &amp;d, &amp;n);\n    n += d;\n    s = 0;\n    t = n + 1;\n    for (int i = 1; i &lt;= n; i++) {\n        scanf(\"%d\", W + i);\n    }\n    for (int i = 1; i &lt;= d; i++) {\n        for (int j = 1; j &lt;= n - d; j++) {\n            scanf(\"%d\", &amp;G[i][j]);\n        }\n    }\n\n    for (int i = 1; i &lt;= n; i++) {\n        if (i &lt;= d) {\n            add(s, i, W[i], 0);\n        } else {\n            add(i, t, W[i], 0);\n        }\n    }\n    for (int i = 1; i &lt;= d; i++) {\n        for (int j = 1; j &lt;= n - d; j++) {\n            add(i, j + d, INF, G[i][j]);\n        }\n    }\n\n    int maxflow = 0, mincost = 0;\n    MinCost_MaxFlow(maxflow, mincost);\n    printf(\"%d\\n\", mincost);\n\n    for (int i = 0; i &lt;= t; i++) {\n        head[i] = 0;\n    }\n    cnt = 1;\n    for (int i = 1; i &lt;= n; i++) {\n        if (i &lt;= d) {\n            add(s, i, W[i], 0);\n        } else {\n            add(i, t, W[i], 0);\n        }\n    }\n    for (int i = 1; i &lt;= d; i++) {\n        for (int j = 1; j &lt;= n - d; j++) {\n            add(i, j + d, INF, -G[i][j]);\n        }\n    }\n    MinCost_MaxFlow(maxflow, mincost);\n    printf(\"%d\\n\", -mincost);\n}\n</code></pre>"},{"location":"Graph/Flow/Problem/#p4016cpp","title":"P4016.cpp","text":"<pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nconst ll INF = 0x7fffffff;\n\nconst int N = 200005, M = 200005;\nint n, m, s, t;\nint head[N], cnt = 1;\nstruct node {\n    int to, next, w, c;\n} edge[M];\n\nvoid add(int u, int v, int w, int c) {\n    cnt++;\n    edge[cnt].w = w;\n    edge[cnt].to = v;\n    edge[cnt].next = head[u];\n    edge[cnt].c = c;\n    head[u] = cnt;\n    cnt++;\n    edge[cnt].w = 0;\n    edge[cnt].to = u;\n    edge[cnt].next = head[v];\n    edge[cnt].c = -c;\n    head[v] = cnt;\n}\nint dis[N], pre[N], last[N], flow[N];\nbool inq[N];\n\nqueue&lt;int&gt; q;\nbool spfa(int s, int t) {\n    for (int i = 0; i &lt;= n + 10; i++) {\n        dis[i] = flow[i] = INF;\n        inq[i] = false;\n    }\n    q.push(s);\n    inq[s] = 1; dis[s] = 0; pre[t] = -1;\n    while (!q.empty()) {\n        int u = q.front(); q.pop();\n        inq[u] = 0;\n        for (int i = head[u]; i; i = edge[i].next) {\n            int v = edge[i].to;\n            int w = edge[i].w;\n            int cost = edge[i].c;\n            if (w &gt; 0 &amp;&amp; dis[v] &gt; dis[u] + cost) {\n                dis[v] = dis[u] + cost;\n                pre[v] = u;\n                last[v] = i;\n                flow[v] = min(w, flow[u]);\n                if (!inq[v]) {\n                    inq[v] = 1;\n                    q.push(v);\n                }\n            }\n        }\n    }\n    return pre[t] != -1;\n}\n\nvoid MinCost_MaxFlow(int&amp; maxflow, int&amp; mincost) {\n    while (spfa(s, t)) {\n        int now = t;\n        maxflow += flow[t];\n        //\u8fd9\u91cc\u8d39\u7528\u4e3a\u5355\u4f4d\u6d41\u91cf\u7684\u8d39\u7528\n        mincost += flow[t] * dis[t];\n        while (now != s) {\n            edge[last[now]].w -= flow[t];\n            edge[last[now] ^ 1].w += flow[t];\n            now = pre[now];\n        }\n    }\n}\n\nint main() {\n    scanf(\"%d\", &amp;n);\n    vector&lt;int&gt; vec(n + 1);\n    int ave = 0;\n    for (int i = 1; i &lt;= n; i++) {\n        scanf(\"%d\", &amp;vec[i]);\n        ave += vec[i];\n    }\n    ave /= n;\n    s = 0; t = n + 1;\n    for (int i = 1; i &lt;= n; i++) {\n        vec[i] -= ave;\n    }\n    for (int i = 1; i &lt;= n; i++) {\n        if (vec[i] &gt; 0) {\n            add(s, i, vec[i], 0);\n        } else if (vec[i] &lt; 0) {\n            add(i, t, -vec[i], 0);\n        }\n    }\n    for (int i = 1; i &lt;= n; i++) {\n        if (i != 1) {\n            add(i, (i - 1), INF, 1);\n        }\n        if (i != n) {\n            add(i, (i + 1), INF, 1);\n        }\n    }\n    add(1, n, INF, 1);\n    add(n, 1, INF, 1);\n    int maxflow = 0, mincost = 0;\n    MinCost_MaxFlow(maxflow, mincost);\n    printf(\"%d\\n\", mincost);\n}\n</code></pre>"},{"location":"Graph/ShortestPath/ShortestPath/","title":"\u6700\u77ed\u8def","text":"<p>\u56fe\u7684\u6700\u77ed\u8def\u5f84\uff08Shortest Path\uff09\u7684\u5b9a\u4e49\u662f\u6307\u5728\u56fe\u4e2d\u4ece\u4e00\u4e2a\u8d77\u59cb\u8282\u70b9\uff08\u6e90\u8282\u70b9\uff09\u5230\u53e6\u4e00\u4e2a\u76ee\u6807\u8282\u70b9\u7684\u8def\u5f84\u4e2d\uff0c\u6240\u6709\u8fb9\u7684\u6743\u91cd\u4e4b\u548c\u6700\u5c0f\u7684\u8def\u5f84\u3002\u6700\u77ed\u8def\u5f84\u95ee\u9898\u7684\u76ee\u6807\u662f\u627e\u5230\u8fd9\u79cd\u8def\u5f84\uff0c\u4ee5\u4f7f\u5f97\u8def\u5f84\u7684\u603b\u6743\u91cd\uff08\u6216\u6210\u672c\uff09\u5c3d\u53ef\u80fd\u5c0f\u3002</p> <p>\u5177\u4f53\u6765\u8bf4\uff0c\u56fe\u7684\u6700\u77ed\u8def\u5f84\u95ee\u9898\u53ef\u4ee5\u5927\u81f4\u5206\u4e3a\u4ee5\u4e0b\u4e24\u79cd\u60c5\u51b5\uff1a</p> <ul> <li>\u5355\u6e90\u6700\u77ed\u8def\uff08\u4ec5\u6709\u4e00\u4e2a\u8d77\u70b9\uff09</li> <li>\u591a\u6e90\u6c47\u6700\u77ed\u8def\uff08\u6bcf\u5bf9\u8282\u70b9\u4e4b\u95f4\uff09</li> </ul> <p>\u6839\u636e\u56fe\u7684\u60c5\u51b5\u4e0d\u540c\uff08\u662f\u5426\u6709\u8d1f\u6743\u8fb9\u3001\u662f\u5426\u6709\u8d1f\u73af\u7b49\uff09\u53c8\u4f1a\u6709\u5f88\u591a\u79cd\u95ee\u9898\u3002\u6c42\u89e3\u6700\u77ed\u8def\u5f84\u7684\u7b97\u6cd5\u5f88\u591a\uff0c\u9002\u7528\u7684\u60c5\u51b5\u4e5f\u5404\u4e0d\u76f8\u540c\u3002</p>"},{"location":"Graph/ShortestPath/ShortestPath/#dijkstra","title":"Dijkstra\u4e0e\u5355\u6e90\u6700\u77ed\u8def","text":"<p>Dijkstra\u7b97\u6cd5\u53ef\u4ee5\u89e3\u51b3\u4e0d\u542b\u8d1f\u6743\u8fb9\u7684\u56fe\u7684\u5355\u6e90\u6700\u77ed\u8def\u95ee\u9898\u3002</p> <p>\u7b97\u6cd5\u7684\u6838\u5fc3\u601d\u60f3\uff1a\u7ef4\u62a4\u4e00\u7ec4\u8282\u70b9\u96c6\u5408\\(S\\)\uff0c\\(S\\)\u96c6\u5408\u4e2d\u7684\u6bcf\u4e00\u4e2a\u70b9\u90fd\u5df2\u627e\u5230\u4ece\u6e90\u7ed3\u70b9\u5f00\u59cb\u7684\u6700\u77ed\u8def\u5f84\u3002</p> <p>\u8bb0\u6240\u6709\u8282\u70b9\u7684\u96c6\u5408\u4e3a\\(V\\)\uff0c\u7b97\u6cd5\u7684\u8fc7\u7a0b\u5927\u81f4\u5982\u4e0b\uff1a</p> <ul> <li>\u5728\u96c6\u5408\\(V-S\\)\u4e2d\u627e\u4e00\u4e2a\u9884\u4f30\u8def\u5f84\u6700\u77ed\u7684\u70b9u\uff0c\u6dfb\u52a0\u8fdb\\(S\\)\u4e2d</li> <li>\u7528\u8be5\u70b9\u5bf9\u5176\u76f8\u90bb\u6240\u6709\u8fb9\u505a\u4e00\u6b21\u300c\u677e\u5f1b\u300d\u64cd\u4f5c\uff0c\u66f4\u65b0\u5176\u90bb\u63a5\u70b9\u7684\u8def\u5f84\u957f\u5ea6</li> <li>\u91cd\u590d\u4e0a\u8ff0\u6b65\u9aa4\u76f4\u81f3\\(S = V\\)\uff0c\u5373\u6240\u6709\u8282\u70b9\u90fd\u88ab\u6dfb\u52a0\u8fdb\\(S\\)\u5185</li> </ul> <p>\u677e\u5f1b\u64cd\u4f5c\uff1a\u8bb0\u7f16\u53f7\u4e3ai\u7684\u70b9\u7684\u8def\u5f84\u957f\u5ea6\u4e3a\\(d[i]\\)\u3002\u5bf9\u4e8e\u8fb9\\(e\\)\uff0c\u5176\u8d77\u70b9\u4e0e\u7ec8\u70b9\u5206\u522b\u4e3a\\(u\u3001v\\)\uff0c\u82e5\\(d[v] &lt; d[u] + w(u, v)\\)\uff0c\u5219\u628a\\(d[v]\\)\u66f4\u65b0\u4e3a\\(d[u] + w(u, v)\\)</p> <p></p> <p>\u5982\u4e0a\u56fe\uff0c\u7ef4\u62a4\u7684\u96c6\u5408\\(S\\)\u4f9d\u6b21\u6dfb\u52a0\\(0\u30012\u30011\u30014\u30013\u30015\\)\u8282\u70b9\uff0cDijkstra\u7b97\u6cd5\u7ed3\u675f\u3002</p> <p>\u4ee3\u7801\u5b9e\u73b0\u9700\u8981\u4ee5\u4e0b\u90e8\u5206:</p> <ul> <li>\u5efa\u7acb\u4e00\u4e2a\u6570\u7ec4dist\u7528\u4e8e\u8bb0\u5f55\u6bcf\u4e2a\u8282\u70b9\u5230\u8d77\u70b9\u7684\u6700\u77ed\u8def\uff0c\u5e76\u521d\u59cb\u5316\u4e3ainf</li> <li>\u5efa\u7acb\u4e00\u4e2a\u6570\u7ec4st\u7528\u4e8e\u6a21\u62df\u96c6\u5408S</li> <li>\u7528\u6700\u5c0f\u4f18\u5148\u961f\u5217heap\u7ef4\u62a4\u6bcf\u4e2a\u8282\u70b9\u7684\u9884\u4f30\u6700\u77ed\u8def\u5f84\u957f\u5ea6</li> <li>\u6bcf\u6b21\u53d6heap\u7684\u9876\u5bf9\u5176\u63a5\u8fb9\u505a\u677e\u5f1b\u64cd\u4f5c\uff0c\u5e76\u5c06\u88ab\u66f4\u65b0\u7684\u8282\u70b9\u5165\u961f\uff0c\u76f4\u81f3\u6240\u6709\u8282\u70b9\u90fd\u88ab\u66f4\u65b0\u5b8c\u6bd5</li> </ul> <p>\u5177\u4f53\u4ee3\u7801\u5b9e\u73b0\u5982\u4e0b\uff1a <pre><code>const int inf = 0x3f3f3f3f;\ntypedef pair&lt;int, int&gt; PII; // \u7b2c\u4e00\u4e2a\u53d8\u91cf\u4e3a\u8def\u5f84\u957f\u5ea6\uff0c\u7b2c\u4e8c\u4e2a\u53d8\u91cf\u4e3a\u8282\u70b9\u7f16\u53f7\n\npriority_queue&lt;PII, vector&lt;PII&gt;, greater&lt;PII&gt;&gt; heap;\nint st[MAX]; // \u6a21\u62df\u96c6\u5408S\nint s, ed; // \u8bb0\u8d77\u70b9\u4e3as\uff0c\u7ec8\u70b9\u4e3aed\n\n/*\u8fd9\u91cc\u7684\u5b58\u56fe\u65b9\u6cd5\u4f7f\u7528\u7684\u662f\u94fe\u5f0f\u5411\u524d\u661f\uff0c\u53ef\u4ee5\u53c2\u8003\u56fe\u7684\u5b58\u50a8\u90e8\u5206\u5185\u5bb9*/\n\nint dijkstra() {\n    int dist[MAX];\n    memset(dist, 0x3f, sizeof dist);\n    dist[s] = 0; // \u5148\u5bf9\u6e90\u8282\u70b9\u8fdb\u884c\u66f4\u65b0\n    heap.push({0, s});\n\n    while(heap.size()) {\n        auto t = heap.top();\n        heap.pop();\n        int ver = t.second, distance = t.first;\n\n        if(st[ver]) continue; // \u5982\u679c\u5806\u9876\u8282\u70b9\u5df2\u7ecf\u88ab\u7f6e\u5165\u96c6\u5408S\uff0c\u5219\u4e0d\u5fc5\u518d\u5bf9\u5176\u64cd\u4f5c\n\n        for(int id = head[ver]; id != -1; id = ne[id]) {\n            if(dist[e[id]] &lt; distance + w[id]) {\n                dist[e[id]] = distance + w[id];\n                heap.push({dist[e[id]], e[id]});\n            }\n        }\n\n        st[ver] = 1;\n    }\n\n    return dist[ed];\n}\n</code></pre></p> <p>\u63a8\u8350\u5b8c\u6210\u6d1b\u8c37 P4779 \u3010\u6a21\u677f\u3011\u5355\u6e90\u6700\u77ed\u8def\u5f84\uff08\u6807\u51c6\u7248\uff09</p> <p>\u53c2\u8003\u6587\u7ae0\uff1a \u300a\u7b97\u6cd5\u5bfc\u8bba\uff08\u7b2c\u4e09\u7248\uff09\u300b- Thomas H.Cormen Charles E.Leiserson Ronald L.Rivest Clifford Stein CSDN_\u5982\u4f55\u7406\u89e3\u6700\u77ed\u8def\u5f84\u4e2d\u7684\u201c\u677e\u5f1b\u201d\u64cd\u4f5c \u6700\u77ed\u8def-Oi Wiki</p>"},{"location":"Graph/StorageOfGraphs/Storage/","title":"\u56fe\u7684\u5b58\u50a8","text":"<p>\u60f3\u8981\u5bf9\u4e00\u4e2a\u56fe\u8fdb\u884c\u64cd\u4f5c\uff0c\u9996\u5148\u8981\u5c06\u5176\u6309\u7167\u4e00\u5b9a\u7684\u5f62\u5f0f\u5b58\u50a8\u8d77\u6765\uff0c\u4e0d\u540c\u7684\u5b58\u50a8\u65b9\u5f0f\u6709\u4e0d\u540c\u7279\u70b9\uff0c\u9002\u7528\u4e8e\u4e0d\u540c\u7684\u573a\u666f</p>"},{"location":"Graph/StorageOfGraphs/Storage/#_1","title":"\u76f4\u63a5\u5b58\u8fb9","text":"<p>\u4f7f\u7528\u4e00\u4e2a\u6570\u7ec4\u76f4\u63a5\u6765\u5b58\u50a8\u8fb9\u7684\u4fe1\u606f\uff0c\u5373\u8d77\u70b9\u3001\u7ec8\u70b9\u548c\u8fb9\u6743</p> <p><pre><code>struct edge {\n    int u;//\u8d77\u70b9\n    int v;//\u7ec8\u70b9\n    int w;//\u8fb9\u6743\n}edge[MAX];\n</code></pre> \u904d\u5386\u7684\u592a\u4f4e\u6548\uff0c\u4e00\u822c\u7528\u6765\u8f85\u52a9\u5176\u4ed6\u7b97\u6cd5</p>"},{"location":"Graph/StorageOfGraphs/Storage/#_2","title":"\u90bb\u63a5\u77e9\u9635","text":"<p>\u7528\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\\(edge\\)\u6765\u5b58\u8fb9\uff0c\\(edge[u][v]\\)\u8868\u793a\u4e3a\u4ece\u8282\u70b9\\(u\\)\u5230\u8282\u70b9\\(v\\)\u7684\u8fb9\u6743 <pre><code>int edge[MAX][MAX];\n</code></pre> \u4f18\u70b9\uff1a\u67e5\u8be2\u8fb9\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(1)\\) \u7f3a\u70b9\uff1a\u7a7a\u95f4\u590d\u6742\u5ea6\u592a\u9ad8\u4e86\\(O(n^2)\\)\uff0c\u6bd4\u8f83\u9002\u7528\u4e8e\u7a20\u5bc6\u56fe\u6216\u8282\u70b9\u8f83\u5c11\u7684\u56fe</p>"},{"location":"Graph/StorageOfGraphs/Storage/#_3","title":"\u90bb\u63a5\u8868","text":"<p>\u4e00\u822c\u7684\u5b9a\u4e49\u90bb\u63a5\u8868\u662f\u7528\u94fe\u8868\u5b9e\u73b0\u7684\uff0c\u4f46\u662f\u94fe\u8868\u5b9e\u73b0\u8d77\u6765\u6bd4\u8f83\u590d\u6742\uff0c\u4e5f\u6ca1\u6709\u52a8\u6001\u6570\u7ec4\u6548\u7387\uff0c\u6240\u4ee5\u8fd9\u91cc\u5c31\u76f4\u63a5\u7528\u52a8\u6001\u6570\u7ec4\u6765\u5b9e\u73b0\u4e86</p> <p>\u4f7f\u7528\u52a8\u6001\u4e8c\u7ef4\u6570\u7ec4\u6765\u5b58\u50a8\u6bcf\u4e2a\u8282\u70b9\u7684\u90bb\u63a5\u70b9 <pre><code>vector&lt;int&gt; edge[MAX];\n</code></pre> \u5b58\u5404\u79cd\u56fe\u90fd\u5f88\u9002\u5408\uff0c\u9664\u975e\u6709\u7279\u6b8a\u9700\u6c42\uff08\u5982\u9700\u8981\u5feb\u901f\u67e5\u8be2\u4e00\u6761\u8fb9\u662f\u5426\u5b58\u5728\uff0c\u4e14\u70b9\u6570\u8f83\u5c11\uff0c\u53ef\u4ee5\u4f7f\u7528\u90bb\u63a5\u77e9\u9635\uff09</p> <p>\u5c24\u5176\u9002\u7528\u4e8e\u9700\u8981\u5bf9\u4e00\u4e2a\u70b9\u7684\u6240\u6709\u51fa\u8fb9\u8fdb\u884c\u6392\u5e8f\u7684\u573a\u5408</p>"},{"location":"Graph/StorageOfGraphs/Storage/#_4","title":"\u94fe\u5f0f\u524d\u5411\u661f","text":"<p>\u4e0e\u90bb\u63a5\u8868\u7c7b\u4f3c\uff0c\u4f46\u662f\u662f\u7528\u4e24\u4e2a\u6570\u7ec4\u5b9e\u73b0\u7684\u3002\u53c2\u8003\u4ee3\u7801\u4e2d\u7684\u7ed3\u6784\u4f53\u4e5f\u53ef\u4ee5\u6539\u5199\u6210\u591a\u4e2a\u6570\u7ec4\uff0c\u770b\u4e2a\u4eba\u4e60\u60ef\u3002</p> <pre><code>//\u90bb\u63a5\u8fb9\u4fe1\u606f\nstruct ed {\n    int to;         //\u8fb9\u7684\u7ec8\u70b9\n    int next;       //\u4e0b\u4e00\u4e2a\u90bb\u63a5\u8fb9\u5728\u8fb9\u6570\u7ec4\u7684\u4e0b\u6807\n    int w;          //\u8fb9\u7684\u6743\u503c\n}edge[MAX];         //\u5b58\u50a8\u8fb9\u7684\u6570\u7ec4\n\nint head[MAX];      //\u5b58\u50a8\u8282\u70b9\u5934\nint tot = 0;        //\u6807\u8bc6\u4e00\u4e2a\u65b0\u7684\u8fb9\u8282\u70b9\n\n//\u63d2\u5165\u65b0\u8fb9\nvoid addEdge(int u, int v,int w) {\n    edge[tot].to = v;           //\u8bb0\u5f55\u8fb9\u7684\u7ec8\u70b9\n    edge[tot].next = head[u];   //\u76f8\u5f53\u4e8e\u94fe\u8868\u5934\u63d2\n    edge[tot].w = w;            //\u8bb0\u5f55\u8fb9\u7684\u6743\u503c\n    head[u] = tot++;            //\u66f4\u65b0\u8282\u70b9\u5934\n}\n</code></pre>"},{"location":"Graph/StorageOfGraphs/Storage/#_5","title":"\u601d\u8def","text":"<p>\u4e0e\u90bb\u63a5\u8868\u4e0d\u540c\u7684\u662f\uff0c\u94fe\u5f0f\u524d\u5411\u661f\u662f\u5b58\u50a8\u90bb\u63a5\u8fb9\u7684\u3002</p> <p>\u5982\u4e0b\u56fe\uff0c\u5c31\u662f\u4e00\u4e2a\u6709\u5411\u56fe\u8f6c\u5316\u4e3a\u94fe\u5f0f\u524d\u5411\u661f\u7684\u5927\u81f4\u7ed3\u6784\u56fe\u3002\u6211\u7528\u4e0d\u540c\u989c\u8272\u8868\u793a\u7684\u4e0d\u540c\u8282\u70b9\u7684\u90bb\u63a5\u8fb9\u3002</p> <p>\u6240\u6709\u7684\u8fb9\u90fd\u5b58\u50a8\u5728\u4e00\u4e2a\u6570\u7ec4\u4e2d\uff0c\u5e76\u4e14\u53ef\u4ee5\u901a\u8fc7\u7ed3\u6784\u4f53\u7684\\(next\\)\u5c5e\u6027\u7d22\u5f15\u5230\u540c\u4e00\u4e2a\u8282\u70b9\u7684\u6240\u6709\u90bb\u63a5\u8fb9\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u8bb0\u5f55\u4e00\u4e2a\u90bb\u63a5\u8fb9\u7684\u4e0b\u6807\u5373\u53ef\u3002</p> <p>\\(head[u]\\)\u5c31\u8868\u793a\u7f16\u53f7\u4e3a\\(u\\)\u7684\u8282\u70b9\u7684\u4e00\u4e2a\u90bb\u63a5\u8fb9\uff08\u5176\u5b9e\u662f\u6700\u540e\u4e00\u4e2a\u63d2\u5165\u7684\u90bb\u63a5\u8fb9\uff0c\u56e0\u4e3a\u53ea\u6709\u6700\u540e\u4ee5\u90bb\u63a5\u8fb9\u624d\u80fd\u7d22\u5f15\u524d\u9762\u6240\u6709\u7684\u90bb\u63a5\u8fb9\uff09\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u5b83\u5c31\u770b\u6210\u94fe\u8868\u7684\u5934\uff0c\u6bcf\u6b21\u63d2\u5165\u8fb9\u5c31\u76f8\u5f53\u4e8e\u94fe\u8868\u7684\u5934\u63d2\u3002\u521d\u59cb\u65f6\uff0c\u6211\u4eec\u5c06\\(head\\)\u7684\u6240\u6709\u503c\u90fd\u8d4b\u503c\u4e3a\\(-1\\)\uff0c\u8868\u793a\u8fd8\u6ca1\u6709\u90bb\u63a5\u8fb9\u3002\u6bcf\u6b21\u63d2\u5165\u65f6\u90fd\u66f4\u65b0\\(head[u]\\)\u7684\u503c\uff0c\u4f7f\u5b83\u59cb\u7ec8\u8bb0\u5f55\u7740\u6700\u540e\u63d2\u5165\u7684\u8fb9\u7684\u4e0b\u6807\u3002</p>"},{"location":"Graph/TopoSort/Problems/","title":"Exercise","text":"\u9898\u76ee \u96be\u5ea6 \u77e5\u8bc6 B3644 \u666e\u53ca\u2212 \u62d3\u6251\u6392\u5e8f\u6a21\u677f P1347 \u666e\u53ca+/\u63d0\u9ad8 \u62d3\u6251\u6392\u5e8f\u5224\u65ad\u73af LC.2603 \u56f0\u96be \u62d3\u6251\u6392\u5e8f\u53d8\u5f62"},{"location":"Graph/TopoSort/Topo/","title":"\u62d3\u6734\u6392\u5e8f","text":""},{"location":"Graph/TopoSort/Topo/#_1","title":"\u5f15\u5165","text":"<p>\u5728\u751f\u6d3b\u4e2d\uff0c\u6211\u4eec\u5728\u5b8c\u6210\u4e00\u4e2a\u5de5\u4f5c\u53ef\u80fd\u9700\u8981\u6309\u4e00\u5b9a\u987a\u5e8f\u5b8c\u6210\u82e5\u5e72\u4e2a\u4efb\u52a1\u3002\u4f8b\u5982\u5728\u5b8c\u6210 \\(B\\) \u524d\u5fc5\u987b\u5148\u5b8c\u6210 \\(A\\) \uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u8bf4 \\(B\\) \u4e0e \\(A\\) \u5b58\u5728\u504f\u5e8f\u5173\u7cfb\u3002\u6211\u4eec\u7528\u5de5\u4f5c\u4e2d\u4efb\u52a1\u4e4b\u95f4\u7684\u504f\u5e8f\u5173\u7cfb\u5efa\u4e00\u4e2a\u6709\u5411\u56fe\uff0c\u5982\u4e0b\uff1a</p> <p>\u62d3\u6251\u6392\u5e8f\u5176\u5b9e\u5c31\u662f\u627e\u5230\u4e00\u4e2a\u6267\u884c\u4efb\u52a1\u7684\u987a\u5e8f\uff0c\u4f7f\u8fd9\u4e2a\u987a\u5e8f\u6ee1\u8db3\u4e0a\u8ff0\u7684\u504f\u5e8f\u6761\u4ef6\u3002\u5982\u4e0a\u56fe\u7684\u7684\u4e00\u4e2a\u62d3\u6251\u5e8f\u5c31\u662f \\(A\\rightarrow D\\rightarrow B\\rightarrow C\\)\u3002</p>"},{"location":"Graph/TopoSort/Topo/#_2","title":"\u5b9a\u4e49","text":"<p>\u5bf9\u4e8e\u4e00\u4e2a\u6709\u5411\u65e0\u73af\u56fe\\(G=(V,E)\\)\u6765\u8bf4\uff0c\u5176\u62d3\u6251\u6392\u5e8f\u662f\\(G\\)\u4e2d\u6240\u6709\u8282\u70b9\u7684\u4e00\u79cd\u7ebf\u6027\u6b21\u5e8f\u3002\u5373\u5c06\u56fe\u7684\u6240\u6709\u8282\u70b9\u5728\u4e00\u6761\u6c34\u5e73\u7ebf\u4e0a\u6392\u5f00\uff0c\u56fe\u7684\u6240\u6709\u6709\u5411\u8fb9\u90fd\u4ece\u5de6\u6307\u5411\u53f3\u3002</p> <p>\u4e0a\u56fe\u7684\u4e00\u79cd\u62d3\u6251\u5e8f\uff1a</p> <p>\u4f46\u662f\u5bf9\u4e8e\u4e00\u4e2a\u6709\u73af\u56fe\uff0c\u662f\u4e0d\u80fd\u8fdb\u884c\u62d3\u6251\u6392\u5e8f\u7684\uff0c\u8fd9\u5f88\u597d\u7406\u89e3\u3002\u9996\u5148\u62d3\u6251\u6392\u5e8f\u65f6\uff0c\u53ea\u6709\u4e00\u4e2a\u70b9\u6ca1\u6709\u524d\u9a71\u65f6\uff0c\u6211\u4eec\u624d\u80fd\u5bf9\u5176\u8fdb\u884c\u6392\u5e8f\u3002\u4f46\u662f\u5bf9\u4e8e\u4e00\u4e2a\u73af\u5f62\u7684\u504f\u5e8f\u5173\u7cfb\uff0c\u6211\u4eec\u662f\u627e\u4e0d\u5230\u53ef\u4ee5\u6392\u5e8f\u7684\u70b9\u7684\u3002</p>"},{"location":"Graph/TopoSort/Topo/#_3","title":"\u62d3\u6251\u6392\u5e8f","text":"<p>\u6211\u7528\u6570\u7ec4 \\(deg[]\\) \u8bb0\u5f55\u4e00\u4e2a\u70b9\u7684\u5165\u5ea6\uff0c\u7528\\(vector\\)\u5efa\u7acb\u90bb\u63a5\u8868\u5b58\u56fe\u3002</p> <p>\u6211\u4eec\u4ece\u7b2c\u5165\u5ea6\u4e3a \\(0\\) \u7684\u8282\u70b9\u5f00\u59cb\uff0c\u5220\u9664\u8be5\u9876\u70b9\uff0c\u5e76\u5220\u9664\u8be5\u9876\u70b9\u6240\u6709\u7684\u51fa\u8fb9\u3002\u91cd\u590d\u8be5\u6b65\u9aa4\u76f4\u5230\u5220\u9664\u6240\u6709\u9876\u70b9\u3002</p> <p>\u6211\u4eec\u5728\u5220\u9664\u8fb9\u65f6\u4e0d\u5fc5\u8981\u771f\u7684\u5220\u9664\uff0c\u6211\u4eec\u53ea\u9700\u5c06\u8be5\u8fb9\u7684\u7ec8\u70b9\u7684\u5165\u5ea6\u51cf \\(1\\) \u5373\u53ef\u3002\u56e0\u4e3a\u6211\u4eec\u5728\u62d3\u6251\u6392\u5e8f\u8fc7\u7a0b\u4e2d\uff0c\u53ea\u5173\u5fc3\u4e00\u4e2a\u70b9\u5f53\u524d\u662f\u5426\u6709\u524d\u9a71\uff0c\u5f53 \\(deg[u]=0\\) \u65f6\uff0c\u4ee3\u8868\u4e00\u4e2a\u70b9\u6ca1\u6709\u524d\u9a71\uff0c\u5c31\u53ef\u4ee5\u5c06\u5176\u6392\u5230\u5f53\u524d\u62d3\u6251\u5e8f\u7684\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\u3002</p> <p>\u5b9e\u73b0\u4e0a\u8ff0\u8fc7\u7a0b\u7528\u6808\uff08DFS\uff09\u6216\u961f\u5217\uff08BFS\uff09\u90fd\u53ef\u4ee5\u3002</p> <p>\u57fa\u4e8eBFS\u7684\u62d3\u6251\u6392\u5e8f <pre><code>vector&lt;int&gt; topos;  //\u8bb0\u5f55\u62d3\u6251\u5e8f\n\nbool bfs_topo() {\n    queue&lt;int&gt; que;\n    for(int i = 1;i &lt;= n;++i)\n        if(!deg[i]) que.push(i); // \u5148\u628a\u6240\u6709\u5165\u5ea6\u4e3a0\u7684\u70b9\u5165\u961f\n\n    while(!que.empty()){\n        int u = que.front();\n        que.pop();\n        ans.push_back(u);\n        for(auto&amp; v:g[u]) {\n            // \u7ec8\u70b9\u7684\u5165\u5ea6\u51cf1\uff0c\u76f8\u5f53\u4e8e\u5220\u6389\u8fd9\u6761\u8fb9\n            deg[v]--;\n\n            // \u5220\u9664\u4e4b\u540e\u5165\u5ea6\u4e3a0\uff0c\u8bf4\u660ev\u5df2\u7ecf\u6ca1\u6709\u524d\u9a71\u5c06\u5176\u52a0\u5165\u961f\u5217\u548c\u62d3\u6251\u5e8f\u4e2d\n            if(!deg[v]) que.push(v);\n        }\n    }\n\n    // \u5982\u679c\u62d3\u6251\u5e8f\u4e2d\u6bcf\u4e00\u4e2a\u70b9\u90fd\u5b58\u5728\uff0c\u8bc1\u660e\u62d3\u6251\u5e8f\u5b58\u5728\uff0c\u5426\u5219\u62d3\u6251\u5e8f\u4e0d\u5b58\u5728\n    // \u53ef\u4ee5\u81ea\u884c\u6a21\u62df\uff0c\u5982\u679c\u6709\u73af\u5b58\u5728\uff0c\u73af\u5185\u7684\u6bcf\u4e00\u4e2a\u70b9\u90fd\u65e0\u6cd5\u5165\u961f\u5904\u7406\uff0c\u5fc5\u5b9a\u4f1a\u6709\u591a\u4f59\u8282\u70b9\u6ca1\u6709\u8fdb\u5165\u62d3\u6251\u6392\u5e8f\n    if(topos.size() == n) return true;\n    return false;\n}\n</code></pre></p> <p>\u57fa\u4e8eDFS\u7684\u62d3\u6251\u6392\u5e8f</p> <pre><code>stack&lt;int&gt; topos; // \u4fdd\u5b58\u62d3\u6251\u5e8f\u7684\u9006\u5e8f\nint vis[MAX]; // \u8bb0\u5f55\u6bcf\u4e2a\u8282\u70b9\u7684\u8bbf\u95ee\u60c5\u51b5\uff0c0\u4ee3\u8868\u672a\u8bbf\u95ee\uff0c1\u4ee3\u8868\u6b63\u5728\u8bbf\u95ee\uff0c-1\u4ee3\u8868\u8bbf\u95ee\u7ed3\u675f\n\nbool dfs(int u) {\n    vis[u] = 1;\n    for(auto v : g[u]) {\n        if(vis[v] == 1) return false; // \u540e\u4e00\u4e2a\u8282\u70b9\u6b63\u5728\u8bbf\u95ee\uff0c\u8bf4\u660e\u5b58\u5728\u6709\u5411\u73af\uff0c\u8be5\u56fe\u4e0d\u5b58\u5728\u62d3\u6251\u5e8f\n        if(!vis[v] &amp;&amp; !dfs(v)) return false; // \u540e\u4e00\u4e2a\u8282\u70b9\u672a\u8bbf\u95ee\uff0c\u4f46\u662f\u540e\u7eed\u51fa\u73b0\u4e86\u4e0d\u80fd\u5b8c\u6210\u62d3\u6251\u6392\u5e8f\u7684\u60c5\u51b5\uff0c\u4e5f\u4ee3\u8868\u8be5\u56fe\u65e0\u62d3\u6251\u6392\u5e8f\n    }\n\n    vis[u] = -1;\n    topos.push(u);\n    return true;\n}\n\nvoid topo() {\n    for(int i = 1; i &lt;= n; i ++ ) {\n        if(!vis[i] &amp;&amp; deg[i] == 0) dfs(i);\n    } // \u5fc5\u987b\u5bf9\u6bcf\u4e00\u4e2a\u5165\u5ea6\u4e3a0\u7684\u8282\u70b9\u8fdb\u884cdfs\u624d\u80fd\u5f97\u5230\u6700\u7ec8\u7684\u62d3\u6251\u5e8f\n}\n</code></pre> <p>\u8981\u6253\u5370\u62d3\u6251\u6392\u5e8f\uff0c\u53ea\u9700\u8981\u6309\u51fa\u961f\u7684\u987a\u5e8f\u3001\u5f39\u51fa\u6808\u7684\u987a\u5e8f\u6253\u5370\u6240\u6709\u70b9\u5373\u53ef</p> <p>\u5982\u679c\u4ec5\u8981\u8f93\u51fa\u5b57\u5178\u5e8f\u6700\u5927\uff08\u6700\u5c0f\uff09\u7684\u62d3\u6251\u6392\u5e8f\uff0c\u4f18\u5148\u8003\u8651\u4f7f\u7528BFS\u5b9e\u73b0\u62d3\u6251\u6392\u5e8f\u3002\u5c06\u961f\u5217\u6362\u6210\u4f18\u5148\u961f\u5217\u5373\u53ef\u3002</p> <p>\u5982\u679c\u8981\u6309\u5b57\u5178\u987a\u5e8f\u6253\u5370\u6240\u6709\u62d3\u6251\u6392\u5e8f\uff0c\u4f18\u5148\u8003\u8651DFS\u5b9e\u73b0\u62d3\u6251\u6392\u5e8f\u3002\u53ef\u4ee5\u7ed3\u5408\u6253\u5370\u5168\u6392\u5217\u7684\u64cd\u4f5c\uff0c\u5e76\u4e14\u540c\u65f6\u56de\u6eaf\u6bcf\u4e2a\u8282\u70b9\u7684\u5165\u5ea6\u548c\u8bbf\u95ee\u60c5\u51b5\uff0c\u5c31\u53ef\u4ee5\u548c\u5168\u6392\u5217\u4e00\u6837\u751f\u6210\u62d3\u6251\u6392\u5e8f\u3002</p>"},{"location":"Graph/TopoSort/Topo/#_4","title":"\u5229\u7528\u62d3\u6251\u6392\u5e8f\u627e\u73af","text":"<p>\u6211\u4eec\u8fdb\u884c\u4e00\u6b21\u62d3\u6251\u6392\u5e8f\u4e4b\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u6240\u6709\u4e0d\u5728\u73af\u4e0a\u7684\u70b9\u5165\u5ea6\u90fd\u53d8\u6210\u4e86 \\(0\\) \uff0c\u800c\u5728\u73af\u4e0a\u7684\u70b9\u5165\u5ea6\u90fd\u4e0d\u4e3a \\(0\\)\u3002</p> <p>\u5728\u5904\u7406\u4e00\u4e9b\u6709\u73af\u56fe\u95ee\u9898\u65f6\uff08\u5982\uff1a\u57fa\u73af\u6811\uff09\uff0c\u9996\u5148\u5c06\u73af\u5904\u7406\u51fa\u6765\uff0c\u53ef\u4ee5\u5f88\u5927\u7a0b\u5ea6\u4e0a\u964d\u4f4e\u95ee\u9898\u7684\u96be\u5ea6\u3002</p>"},{"location":"Graph/TraversalOfGraphs/Traversal/","title":"\u56fe\u7684\u904d\u5386","text":"<p>\u5bf9\u56fe\u6700\u57fa\u672c\u7684\u64cd\u4f5c\u5c31\u662f\u904d\u5386\uff0c\u56fe\u7684\u904d\u5386\u53ef\u4ee5\u4f7f\u7528DFS\uff08\u6df1\u5ea6\u4f18\u5148\u904d\u5386\uff09\u548cBFS\uff08\u5e7f\u5ea6\u4f18\u5148\u904d\u5386\uff09\u4e24\u79cd\u65b9\u6cd5</p> <p>\u63a8\u8350\u5b8c\u6210\u6d1b\u8c37 P3916 \u56fe\u7684\u904d\u5386</p>"},{"location":"Graph/TraversalOfGraphs/Traversal/#dfs","title":"DFS\u904d\u5386\u56fe","text":"<p>\u4ece\u8d77\u70b9\u5f00\u59cb\uff0c\u6bcf\u6b21\u90fd\u9009\u62e9\u4e00\u4e2a\u672a\u904d\u5386\u7684\u5b69\u5b50\u8282\u70b9\u904d\u5386\uff0c\u53c2\u8003\u4ee3\u7801\u5982\u4e0b</p> <p>\u4f7f\u7528\u90bb\u63a5\u77e9\u9635\u5b58\u56fe</p> <pre><code>int g[MAX][MAX], n; // n\u4e3a\u70b9\u7684\u4e2a\u6570\nint vis[MAX]; // vis\u7528\u4e8e\u6807\u8bb0\u7f16\u53f7\u4e3ai\u7684\u70b9\u662f\u5426\u5df2\u7ecf\u88ab\u904d\u5386\u8fc7\n\nvoid dfs(int now) {\n    // \u5982\u679c\u9700\u8981\u5bf9\u8282\u70b9\u8fdb\u884c\u64cd\u4f5c\uff0c\u90a3\u4e48\u53ef\u4ee5\u66ff\u6362\u8fd9\u91cc\u7684cout\n    cout &lt;&lt; now &lt;&lt; endl;\n    vis[now] = 1;auto x : g[q.front()]\n    for(int x = 1; x &lt;= n; x ++ ) {\n        if(!vis[x] &amp;&amp; g[now][x]) dfs(x);\n    }\n} // \u904d\u5386\u4e0d\u9700\u8981\u56de\u6eaf\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u70b9\u90fd\u53ea\u9700\u8981\u904d\u5386\u4e00\u6b21\u5c31\u591f\n</code></pre> <p>\u4f7f\u7528\u90bb\u63a5\u8868\u5b58\u56fe</p> <pre><code>vector&lt;int&gt; g[MAX];\nint vis[MAX], n;\n\nvoid dfs(int now) {\n    cout &lt;&lt; now &lt;&lt; endl;\n    vis[now] = 1;\n    for(auto x : g[now]) {\n        if(!vis[x]) dfs(x);\n    }\n}\n</code></pre> <p>\u4f7f\u7528\u94fe\u5f0f\u5411\u524d\u661f\u5b58\u56fe</p> <p>\u7ed3\u6784\u4f53\u7684\u5b9e\u73b0\u5982\u4e0b <pre><code>//\u90bb\u63a5\u8fb9\u4fe1\u606f\nstruct ed {\n    int to;         //\u8fb9\u7684\u7ec8\u70b9\n    int next;       //\u4e0b\u4e00\u4e2a\u90bb\u63a5\u8fb9\u5728\u8fb9\u6570\u7ec4\u7684\u4e0b\u6807\n    int w;          //\u8fb9\u7684\u6743\u503c\n}edge[MAX];         //\u5b58\u50a8\u8fb9\u7684\u6570\u7ec4\n\nint head[MAX];      //\u5b58\u50a8\u8282\u70b9auto x : g[q.front()]\u5934\nint tot = 0;        //\u6807\u8bc6\u4e00\u4e2a\u65b0\u7684\u8fb9\u8282\u70b9\nint vis[MAX];\n\n//\u63d2\u5165\u65b0\u8fb9\nvoid addEdge(int u, int v,int w) {\n    edge[tot].to = v;           //\u8bb0\u5f55\u8fb9\u7684\u7ec8\u70b9\n    edge[tot].next = head[u];   //\u76f8\u5f53\u4e8e\u94fe\u8868\u5934\u63d2\n    edge[tot].w = w;            //\u8bb0\u5f55\u8fb9\u7684\u6743\u503c\n    head[u] = tot++;            //\u66f4\u65b0\u8282\u70b9\u5934\n}\n\nvoid dfs(int now) {\n    cout &lt;&lt; now &lt;&lt; endl;\n    vis[now] = 1;auto x : g[q.front()]\n    for(int id = head[now]; id != -1; id = edge[id].next) {\n        if(!vis[edge[id].to]) dfs(edge[id].to);\n    }\n}\n</code></pre></p> <p>\u591a\u4e2a\u6570\u7ec4\u7684\u5b9e\u73b0\u5982\u4e0b <pre><code>// u\u8282\u70b9\u7684\u5934\u3001\u7b2cidx\u6761\u8fb9\u7684\u7ec8\u70b9\uff0c\u7b2cidx\u6761\u8fb9\u7684\u6743\u503c\uff0c\u7b2cidx\u6761\u8fb9\u7684\u4e0b\u4e00\u4e2a\u90bb\u63a5\u8fb9\nint head[MAX], e[MAX], weight[MAX], ne[MAX], tot;\nint vis[MAX];\n\n\nvoid add(int u, int v, int w) {\n    e[idx] = v; // \u7b2cidx\u6761\u8fb9\u7684\u7ec8\u70b9\u4e3av\n    weight[idx] = w; // \u7b2cidx\u6761\u8fb9\u7684\u6743\u91cd\u4e3a\u65b0\u589e\u8fb9\u7684\u6743\u91cd\n    ne[idx] = head[u]; // \u7b2cidx\u6761\u8fb9\u7684\u90bb\u63a5\u8fb9\u66f4\u65b0\u4e3au\u7684\u90bb\u63a5\u8fb9\n    head[u] = tot ++; // \u7c7b\u6bd4\u94fe\u8868\u5934\u63d2\u6cd5\n}\n\nvoid dfs(int now) {\n    cout &lt;&lt; now &lt;&lt; endl;\n    vis[now] = 1;\n    for(int id = head[now]; id != -1; id = ne[id]) {\n        if(!vis[e[id]]) dfs(e[id]);\n    }\n} \n</code></pre></p> <p>\u5982\u679c\u7528\u6570\u7ec4\u6765\u5b9e\u73b0\u94fe\u5f0f\u5411\u524d\u661f\uff0c\u6570\u7ec4\u7684\u547d\u540d\u53ef\u80fd\u8981\u7740\u91cd\u8003\u8651\u4e00\u4e0b\uff0c\u907f\u514d\u8ddf\u4e00\u4e9b\u5934\u6587\u4ef6\u5df2\u5b9a\u4e49\u7684\u540d\u5b57\u51b2\u7a81</p>"},{"location":"Graph/TraversalOfGraphs/Traversal/#bfs","title":"BFS\u904d\u5386\u56fe","text":"<p>\u4ece\u8d77\u70b9\u5f00\u59cb\uff0c\u6bcf\u6b21\u90fd\u628a\u8be5\u8282\u70b9\u76f4\u63a5\u90bb\u63a5\u7684\u6240\u6709\u5b69\u5b50\u8282\u70b9\u904d\u5386\u8fc7</p> <p>\u4f7f\u7528\u90bb\u63a5\u77e9\u9635\u5b58\u56fe</p> <pre><code>int g[MAX][MAX], n; // n\u4e3a\u70b9\u7684\u4e2a\u6570\nint vis[MAX]; // vis\u7528\u4e8e\u6807\u8bb0\u7f16\u53f7\u4e3ai\u7684\u70b9\u662f\u5426\u5df2\u7ecf\u88ab\u904d\u5386\u8fc7\n\nvoid bfs(int start) {\n    queue&lt;int&gt; q;\n    q.push(start);\n    vis[start] = 1;\n    while(q.size()) {\n        cout &lt;&lt; q.front() &lt;&lt; ' ';\n        for(int i = 1; i &lt;= n; i ++ ) {\n            if(!vis[i] &amp;&amp; g[q.front()][i]) {\n                q.push(i);\n                vis[i] = 1;\n            }\n        }\n        q.pop();\n    }\n}\n</code></pre> <p>\u4f7f\u7528\u90bb\u63a5\u8868\u5b58\u56fe</p> <pre><code>vector&lt;int&gt; g[MAX];\nint vis[MAX], n;\n\nvoid bfs(int start) {\n    queue&lt;int&gt; q;\n    q.push(start);\n    vis[start] = 1;\n    while(q.size()) {\n        cout &lt;&lt; q.front() &lt;&lt; ' ';\n        for(auto x : g[q.front()]) {\n            if(!vis[x]) {\n                q.push(x);\n                vis[x] = 1;\n            }\n        }\n        q.pop();\n    }\n}\n</code></pre> <p>\u4f7f\u7528\u94fe\u5f0f\u5411\u524d\u661f\u5b58\u56fe</p> <p>\u7ed3\u6784\u4f53\u7684\u5b9e\u73b0\u5982\u4e0b <pre><code>//\u90bb\u63a5\u8fb9\u4fe1\u606f\nstruct ed {\n    int to;         //\u8fb9\u7684\u7ec8\u70b9\n    int next;       //\u4e0b\u4e00\u4e2a\u90bb\u63a5\u8fb9\u5728\u8fb9\u6570\u7ec4\u7684\u4e0b\u6807\n    int w;          //\u8fb9\u7684\u6743\u503c\n}edge[MAX];         //\u5b58\u50a8\u8fb9\u7684\u6570\u7ec4\n\nint head[MAX];      //\u5b58\u50a8\u8282\u70b9auto x : g[q.front()]\u5934\nint tot = 0;        //\u6807\u8bc6\u4e00\u4e2a\u65b0\u7684\u8fb9\u8282\u70b9\nint vis[MAX];\n\n//\u63d2\u5165\u65b0\u8fb9\nvoid addEdge(int u, int v,int w) {\n    ...\n}\n\nvoid bfs(int start) {\n    queue&lt;int&gt; q;\n    q.push(start);\n    vis[start] = 1;\n    while(q.size()) {\n        cout &lt;&lt; q.front() &lt;&lt; ' ';\n        for(int id = head[q.front()]; id != -1; id = edge[id].next) {\n            if(!vis[edge[id].to]) {\n                q.push(edge[id].to);\n                vis[edge[id].to] = 1;\n            }\n        }\n        q.pop();\n    }\n}\n</code></pre></p> <p>\u591a\u4e2a\u6570\u7ec4\u7684\u5b9e\u73b0\u5982\u4e0b</p> <pre><code>int head[MAX], e[MAX], weight[MAX], ne[MAX], tot;\nint vis[MAX];\n\n\nvoid add(int u, int v, int w) {\n    ...\n}\n\nvoid bfs(int start) {\n    queue&lt;int&gt; q;\n    q.push(start);\n    vis[start] = 1;\n    while(q.size()) {\n        cout &lt;&lt; q.front() &lt;&lt; ' ';\n        for(int id = head[q.front()]; id != -1; id = ne[id]) {\n            if(!vis[e[id]]) {\n                q.push(e[id]);\n                vis[e[id]] = 1;\n            }\n        }\n        q.pop();\n    }\n}\n</code></pre>"},{"location":"Graph/Tree/Basic/Basic/","title":"\u6811\u57fa\u7840","text":""},{"location":"Graph/Tree/Basic/Basic/#_2","title":"\u5b9a\u4e49","text":"<p>\u6811\u662f\u4e00\u4e2a\u7279\u6b8a\u7684\u56fe\uff0c\u5c31\u662f\u6ca1\u6709\u73af\u7684\u8fde\u901a\u56fe\u3002</p> <p>\u4e00\u68f5\u6811\u6709\u4e00\u4e0b\u7279\u70b9\uff1a</p> <ul> <li>\u6811\u6839\u3002\u57fa\u4e8e\u6709\u5411\u56fe\u7684\u6811\uff0c\u6709\u4e14\u53ea\u6709\u4e00\u4e2a\u6811\u6839\uff1b\u57fa\u4e8e\u65e0\u5411\u56fe\u7684\u6811\uff0c\u4efb\u610f\u8282\u70b9\u90fd\u53ef\u4ee5\u4f5c\u4e3a\u6811\u7684\u6811\u6839\u3002</li> <li>\u4e00\u4e2a\u6709 \\(n\\) \u4e2a\u8282\u70b9\u7684\u6811\uff0c\u6709 \\(n-1\\) \u6761\u8fb9\u3002</li> <li>\u8fde\u901a\u6027\u3002\u4ece\u6839\u51fa\u53d1\u80fd\u591f\u5230\u4efb\u610f\u8282\u70b9\u3002</li> <li>\u53bb\u6389\u4e00\u6761\u8fb9\u65f6\uff0c\u6811\u88ab\u5206\u6210\u4e0d\u8fde\u901a\u7684\u4e24\u9897\u6811\u3002</li> <li>\u5728\u6811\u4e2d\u4efb\u610f\u6dfb\u52a0\u4e00\u6761\u8fb9\uff0c\u5c31\u4f1a\u51fa\u73b0\u73af\u3002</li> <li>\u4ece\u6839\u51fa\u53d1\u5230\u4e00\u4e2a\u8282\u70b9\uff0c\u6709\u4e14\u53ea\u6709\u4e00\u6761\u8fb9\u3002</li> </ul>"},{"location":"Graph/Tree/Basic/Basic/#_3","title":"\u6811\u7684\u91cd\u5fc3","text":""},{"location":"Graph/Tree/Basic/Basic/#_4","title":"\u5b9a\u4e49","text":"<p>\u6811\u7684\u91cd\u5fc3\u662f\u4e00\u4e2a\u8282\u70b9\uff0c\u8be5\u8282\u70b9\u88ab\u5b9a\u4e3a\uff1a\u5982\u679c\u8282\u70b9\\(u\\)\u4e3a\u6811\u6839\uff0c\u5176\u6240\u6709\u5b50\u6811\u4e2d\u8282\u70b9\u6570\u6700\u5927\u7684\u5b50\u6811\uff0c\u6bd4\u5176\u4ed6\u4efb\u610f\u8282\u70b9\u4e3a\u6839\u65f6\u7684\u6700\u5927\u5b50\u6811\u7684\u8282\u70b9\u6570\u90fd\u5c11\uff0c\u90a3\u4e48 \\(u\\) \u88ab\u79f0\u4e3a\u8be5\u6811\u7684\u91cd\u5fc3\u3002</p>"},{"location":"Graph/Tree/Basic/Basic/#_5","title":"\u627e\u91cd\u5fc3","text":"<p>\u6211\u4eec\u7528\\(DFS\\)\u7684\u65b9\u5f0f\u627e\u4e00\u68f5\u6811\u7684\u91cd\u5fc3\uff0c\u4ee5\u4e0b\u9762\u7684\u9898\u76ee\u4e3a\u4f8b\uff1aGodfather</p> <p>\u9898\u76ee\u4e2d\u8981\u6c42\u6700\u5927\u5b50\u6811\u6700\u5c0f\uff0c\u5c31\u662f\u627e\u91cd\u5fc3\u3002</p> <p>\u6211\u4eec\u4ece\u4efb\u610f\u4e00\u8282\u70b9\u5f00\u59cb\u904d\u5386\u6574\u68f5\u6811\u3002\u5728\u904d\u5386\u8fc7\u7a0b\u4e2d\u6c42\u6bcf\u4e2a\u4f4d\u7f6e\u4e3a\u6839\u65f6\u5176\u6700\u5927\u5b50\u6811\u7684\u5927\u5c0f\u3002</p> <p>\u6bcf\u4e2a\u8282\u70b9\u4e3a\u6839\u65f6\uff0c\u5176\u5b50\u6811\u6709\u84dd\u8272\u548c\u7d2b\u8272\u6846\u51fa\u7684\u90e8\u5206\u3002 \u84dd\u8272\u90e8\u5206\u53ef\u4ee5 \\(DFS\\) \u4e0b\u53bb\u5f97\u5230\uff0c\u7d2b\u8272\u90e8\u5206\u6211\u4eec\u53ef\u901a\u8fc7\u6574\u4e2a\u7684\u8282\u70b9\u4e2a\u6570 \\(n\\) \u51cf\u53bb\u84dd\u8272\u90e8\u5206\u548c\u5f53\u524d\u8282\u70b9\u5f97\u5230\u3002\u90a3\u4e48\u4ee5\u5f53\u524d\u8282\u70b9\u4e3a\u6839\u8282\u70b9\u7684\u6700\u5927\u5b50\u6811\u5c31\u662f\u84dd\u8272\u90e8\u5206\u4e2d\u6700\u5927\u7684\u5b50\u6811\u548c\u7d2b\u8272\u90e8\u5206\u4e8c\u8005\u4e2d\u8f83\u5927\u7684\u4e00\u4e2a\u3002</p> <p>\u6211\u4eec\u7528\u4e00\u4e2a\u6570\u7ec4 \\(d[]\\) \u8bb0\u5f55\u6bcf\u4e2a\u8282\u70b9 \\(DFS\\) \u8fc7\u7a0b\u7684\u5b50\u8282\u70b9\u4e2a\u6570\uff0c\u5373\u84dd\u8272\u6846\u51fa\u7684\u8282\u70b9\u4e2a\u6570\u3002</p> <pre><code>void dfs(int u, int fa)\n{\n    d[u] = 1;\n    int t = 0;\n    for (int i = head[u]; ~i; i = edge[i].nxt) //\u94fe\u5f0f\u524d\u5411\u661f\u5b58\u50a8\u65b9\u5f0f\n    {\n        int v = edge[i].to;\n        if (v == fa)continue;    //\u4e0d\u56de\u5230\u7236\u8282\u70b9\n        dfs(v,u);                //\u8ba1\u7b97\u84dd\u8272\u90e8\u5206\u8282\u70b9\u4e2a\u6570\n        d[u] += d[v];   \n        t = max(t, d[v]);        //\u8bb0\u5f55\u84dd\u8272\u90e8\u5206\u4e2d\u6700\u5927\u7684\u5b50\u6811\n    }\n    t = max(t, n - d[u]);           //\u5f97\u5230\u5f53\u524d\u4f4d\u7f6e\u7684\u6700\u5927\u5b50\u6811\n    if (t &lt; ma)                     // \u8bb0\u5f55\u7b54\u6848\n    {\n        cnt = 1;\n        ans[cnt] = u;\n        ma = t;\n    }\n    else if (t == ma)ans[++cnt] = u;\n}\n</code></pre>"},{"location":"Graph/Tree/Basic/Basic/#_6","title":"\u6027\u8d28","text":"<p>\u6811\u91cd\u5fc3\u7684\u6027\u8d28\uff1a</p> <ul> <li>\u6811\u7684\u91cd\u5fc3\u5982\u679c\u4e0d\u552f\u4e00\uff0c\u5219\u81f3\u591a\u6709\u4e24\u4e2a\uff0c\u4e14\u8fd9\u4e24\u4e2a\u91cd\u5fc3\u76f8\u90bb\u3002</li> <li>\u4e00\u4e2a\u70b9\u662f\u91cd\u5fc3\uff0c\u7b49\u4ef7\u4e8e\uff0c\u4ee5\u8fd9\u4e2a\u70b9\u4e3a\u6839\uff0c\u5b83\u7684\u6bcf\u4e2a\u5b50\u6811\u7684\u5927\u5c0f\uff0c\u90fd\u4e0d\u4f1a\u8d85\u8fc7\u6574\u4e2a\u6811\u5927\u5c0f\u7684\u4e00\u534a\u3002</li> <li>\u6811\u4e2d\u6240\u6709\u70b9\u5230\u67d0\u4e2a\u70b9\u7684\u8ddd\u79bb\u548c\u4e2d\uff0c\u5230\u91cd\u5fc3\u7684\u8ddd\u79bb\u548c\u662f\u6700\u5c0f\u7684\u3002\u5982\u679c\u6709\u4e24\u4e2a\u91cd\u5fc3\uff0c\u90a3\u4e48\u5230\u5b83\u4eec\u7684\u8ddd\u79bb\u548c\u4e00\u6837\u3002\u66f4\u8fdb\u4e00\u6b65\uff0c\u8ddd\u79bb\u548c\u6700\u5c0f\u4e0e\u662f\u91cd\u5fc3\u7b49\u4ef7\u3002</li> <li>\u5982\u679c\u4e00\u4e2a\u6811\u589e\u6dfb\u6216\u5220\u53bb\u4e00\u4e2a\u53f6\u5b50\uff0c\u5219\u6574\u4e2a\u6811\u7684\u540c\u4e00\u4e2a\u91cd\u5fc3\u6700\u591a\u79fb\u52a8\u4e00\u4e2a\u8282\u70b9\u3002</li> <li>\u901a\u8fc7\u8fde\u63a5\u4e00\u6761\u7aef\u70b9\u5206\u522b\u5728\u4e24\u4e2a\u6811\u7684\u8fb9\uff0c\u6765\u5c06\u4e24\u4e2a\u6811\u5408\u5e76\u6210\u4e00\u4e2a\uff0c\u90a3\u4e48\u65b0\u7684\u91cd\u5fc3\u80af\u5b9a\u662f\u5728\u539f\u6765\u8fd9\u4e24\u4e2a\u6811\u7684\u91cd\u5fc3\u7684\u8def\u5f84\u4e0a\u3002</li> </ul>"},{"location":"Graph/Tree/Basic/Basic/#_7","title":"\u6811\u7684\u76f4\u5f84","text":"<p>\u6811\u7684\u76f4\u5f84\u662f\u6307\u6811\u4e0a\u6700\u8fdc\u4e24\u70b9\u4e4b\u95f4\u7684\u7b80\u5355\u8def\u5f84\u7684\u957f\u5ea6\uff0c\u53c8\u79f0\u4e3a\u6811\u7684\u6700\u8fdc\u70b9\u5bf9\u3002</p>"},{"location":"Graph/Tree/Basic/Basic/#_8","title":"\u6c42\u6811\u7684\u76f4\u5f84","text":""},{"location":"Graph/Tree/Basic/Basic/#dfs","title":"\u4e24\u6b21 \\(DFS\\)","text":"<p>\u6211\u4eec\u4ece\u4efb\u610f\u8282\u70b9\u5f00\u59cb\uff0c\u901a\u8fc7 \\(dfs\\) \u627e\u5230\u8ddd\u79bb\u5f53\u524d\u8282\u70b9\u6700\u8fdc\u7684\u8282\u70b9\uff0c\u8fd9\u4e2a\u8282\u70b9\u5c31\u662f\u76f4\u5f84\u4e0a\u5176\u4e2d\u4e00\u4e2a\u8282\u70b9\uff0c\u6211\u4eec\u518d\u4ece\u8fd9\u4e2a\u8282\u70b9\u518d\u8fdb\u884c\u4e00\u6b21 \\(dfs\\) \u5c31\u53ef\u4ee5\u627e\u5230\u76f4\u5f84\u7684\u53e6\u4e00\u4e2a\u7aef\u70b9\u3002</p> <p>\u8bc1\u660e\uff1a \u663e\u7136\uff0c\u5982\u679c\u7b2c\u4e00\u6b21 \\(DFS\\) \u5230\u8fbe\u7684\u8282\u70b9 \\(z\\) \u662f\u76f4\u5f84\u7684\u4e00\u7aef\uff0c\u90a3\u4e48\u7b2c\u4e8c\u6b21 \\(DFS\\) \u5230\u8fbe\u7684\u8282\u70b9 \\(z'\\) \u4e00\u5b9a\u662f\u76f4\u5f84\u7684\u4e00\u7aef\u3002\u6211\u4eec\u53ea\u9700\u8bc1\u660e\u5728\u4efb\u610f\u60c5\u51b5\u4e0b\uff0c\\(z\\) \u5fc5\u4e3a\u76f4\u5f84\u7684\u4e00\u7aef\u3002</p> <p>\u6211\u4eec\u8bbe \\(x,y\\) \u4e3a\u76f4\u5f84\u7684\u7aef\u70b9\uff0c\\(x\\) \u5230 \\(y\\) \u7684\u8def\u5f84\u8bb0\u4e3a \\(P_{x,y}\\)\uff0c\u8def\u5f84 \\(P_{x,y}\\) \u7684\u957f\u5ea6\u8bb0\u4e3a \\(l_{x,y}\\)\uff0c\u4ece \\(z\\) \u51fa\u53d1\u5230\u8fbe\u7684\u6700\u8fdc\u8282\u70b9\u4e3a \\(q\\)\uff0c\u5982\u679c \\(q\\) \u4e0d\u4e3a\u76f4\u5f84\u7684\u7aef\u70b9\uff0c\u5219\u6709\u4ee5\u4e0b\u4e09\u79cd\u60c5\u51b5\uff1a</p> <ul> <li>\u5f53 \\(z\\) \u5728 \\(P_{x,y}\\) \u8def\u5f84\u4e0a</li> </ul> <p>\u90a3\u4e48\u6709 \\(l_{z,q} &gt; l_{z,y}\\) \uff0c\u6240\u4ee5\u4e00\u5b9a\u6709 \\(l_{x,z} + l_{z,q} &gt; l_{x,z} + l_{z,y}\\) \uff0c\u5373 \\(l_{x,q} &gt; l_{x,y}\\) \uff0c\u4e0e \\(P_{x,y}\\) \u662f\u6811\u76f4\u5f84\u51b2\u7a81\uff0c\u6240\u4ee5\u8fd9\u4e2a\u60c5\u51b5\u662f\u4e0d\u5b58\u5728\u7684\u3002</p> <ul> <li>\u5f53 \\(z\\) \u4e0d\u5728 \\(P_{x,y}\\) \u8def\u5f84\u4e0a\uff0c\u4e14 \\(P_{z,p}\\) \u4e0e \\(P_{x,y}\\) \u6709\u8def\u5f84\u91cd\u53e0</li> </ul> <p>\u90a3\u4e48\u6709 \\(l_{z,q} &gt; l_{z,y}\\) \uff0c\u6240\u4ee5\u6709 \\(l_{z',q} &gt; l_{z',y}\\) \uff0c\u7ee7\u800c \\(l_{x,z'} + l_{z',q} &gt; l_{x,z'} + l_{z',y}\\) \uff0c\u5373 \\(l_{x,q} &gt; l_{x,y}\\) \uff0c\u4e0e \\(P_{x,y}\\) \u662f\u6811\u76f4\u5f84\u51b2\u7a81\uff0c\u6240\u4ee5\u8fd9\u4e2a\u60c5\u51b5\u4e5f\u662f\u4e0d\u5b58\u5728\u7684\u3002</p> <ul> <li>\u5f53 \\(z\\) \u4e0d\u5728 \\(P_{x,y}\\) \u8def\u5f84\u4e0a\uff0c\u4e14 \\(P_{z,p}\\) \u4e0e \\(P_{x,y}\\) \u6ca1\u8def\u5f84\u91cd\u53e0</li> </ul> <p>\u90a3\u4e48\u6709 \\(l_{z,q} &gt; l_{z,y}\\)\uff0c\u6240\u4ee5\u6709 \\(l_{z',q} &gt; l_{z',y}\\) \uff0c\u5e76\u4e14\u663e\u800c\u6613\u89c1\u7684 \\(l_{z',y} = l_{z',x'} + l_{x',y}\\) \uff0c\u90a3\u4e48\u663e\u7136 \\(l_{z',q} + l_{x',z'} &gt; l_{x'y}\\)\uff0c\u6240\u4ee5\u6709 \\(l_{x,x'} + l_{x',z'} + l_{z',q} &gt; l_{x,x'} + l_{x'y}\\) \uff0c\u5373 \\(l_{x,q} &gt; l_{x,y}\\) \uff0c\u4e0e \\(P_{x,y}\\) \u662f\u6811\u76f4\u5f84\u51b2\u7a81\uff0c\u6240\u4ee5\u8fd9\u4e2a\u60c5\u51b5\u4e5f\u662f\u4e0d\u5b58\u5728\u7684\u3002</p> <p>\u7ed3\u8bba\uff1a\u6240\u4ee5\u4ece\u4efb\u610f\u8282\u70b9 \\(z\\) \u51fa\u53d1\u5230\u8fbe\u6700\u8fdc\u8282\u70b9 \\(q\\)\uff0c\u6b64\u65f6 \\(q\\) \u8282\u70b9\u4e00\u5b9a\u4e3a\u76f4\u5f84\u7684\u7aef\u70b9\u3002\u8be5\u8bc1\u660e\u4e0d\u8003\u8651\u8d1f\u8fb9\u6743\uff0c\u5f53\u6709\u8d1f\u8fb9\u6743\u65f6\u4e0a\u8ff0\u8bc1\u660e\u5c31\u4e0d\u5728\u6210\u7acb\uff0c\u6240\u4ee5\u4e24\u6b21 \\(DFS\\) \u53ea\u6709\u5728\u6ca1\u6709\u8d1f\u8fb9\u6743\u65f6\u624d\u80fd\u6b63\u786e\u6c42\u5f97\u6811\u76f4\u5f84\u3002\u5f53\u6709\u8d1f\u8fb9\u6743\u65f6\u53ea\u80fd\u901a\u8fc7\u6811\u5f62 \\(dp\\) \u53bb\u6c42\u3002</p> <p>\u4e0b\u9762\u4ee5\u8fb9\u6743\u4e3a \\(1\\) \uff0c\u8282\u70b9\u7f16\u53f7\u4e3a \\([1,n]\\) \u4e3a\u4f8b\u7ed9\u51fa\u4e24\u6b21 \\(DFS\\) \u6c42\u76f4\u5f84\u7684\u4ee3\u7801\uff1a</p> <pre><code>int n,a = 0,b = 0;      // a,b \u662f\u76f4\u5f84\u7684\u4e24\u4e2a\u7aef\u70b9 \ncin &gt;&gt; n;\nvector&lt;int&gt; d(n + 1);   // \u8bb0\u5f55\u5230\u5f53\u524d\u8282\u70b9\u7684\u8ddd\u79bb\nvector&lt;vector&lt;int&gt;&gt; g(n + 1); // \u5b58\u6811\nfor(int i = 1;i &lt; n;++i)\n{\n    int u,v;\n    cin &gt;&gt; u &gt;&gt; v;\n    g[u].push_back(v);\n    g[v].push_back(u);\n}\nfunction&lt;void(int,int,int&amp;)&gt; dfs = [&amp;](int u,int fa,int&amp; id)\n{\n    for(auto&amp; v:g[u])\n    {\n        if(v == fa)continue;\n        d[v] = d[u] + 1;\n        if(d[v] &gt; d[id]) id = v;\n        dfs(v,u,id);\n    }\n};\ndfs(1,0,a);\nd[a] = 0,dfs(a,0,b);\n// d[b] \u5c31\u662f\u6811\u7684\u76f4\u5f84\n</code></pre>"},{"location":"Graph/Tree/Basic/Basic/#dp","title":"\u6811\u5f62 \\(dp\\)","text":"<p>\u8bbe \\(dp[u]\\) \u4e3a\u4ee5 \\(u\\) \u4e3a\u6839\u8282\u70b9\u7684\u5b50\u6811\u4e2d\uff0c\u4ece \\(u\\) \u51fa\u53d1\u7684\u6700\u957f\u8def\u5f84\u957f\u5ea6\u3002\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5199\u51fa\u9012\u63a8\u5f0f:</p> \\[ dp[u] = max\\{dp[u],dp[v] + w_{u,v}\\} \\] <p>\u5176\u4e2d \\(w_{u,v}\\) \u4ee3\u8868 \\(u,v\\) \u95f4\u7684\u8fb9\u6743\u3002\u5bf9\u4e8e\u76f4\u5f84 \\(d\\)\uff0c\u5176\u5b9e\u5c31\u662f\u4ece\u67d0\u4e2a\u8282\u70b9\u51fa\u53d1\u4e0d\u540c\u7684\u4e24\u6761\u8def\u5f84\u76f8\u52a0\u7684\u6700\u5927\u503c\uff0c\u90a3\u4e48\u6c42 \\(d\\) \u5c31\u6709\u4ee5\u4e0b\u516c\u5f0f\uff1a</p> \\[ d = max\\{d,dp[u] + dp[v] + w_{u,v} \\} \\] <p>\u4e0b\u9762\u662f\u6811\u5f62 \\(dp\\) \u6c42\u76f4\u5f84\u7684\u5b9e\u73b0\uff1a</p> <pre><code>int d = 0,n;            // d \u4ee3\u8868\u76f4\u5f84\ncin &gt;&gt; n;\nvector&lt;int&gt; dp(n + 1);  // \u542b\u4e49\u5982\u4e0a\nvector&lt;vector&lt;int&gt;&gt; g(n + 1);   // \u5b58\u6811\nfor(int i = 1;i &lt; n;++i)\n{\n    int u,v;\n    cin &gt;&gt; u &gt;&gt; v;\n    g[u].push_back(v);\n    g[v].push_back(u);\n}\nfunction&lt;void(int,int)&gt; dfs = [&amp;](int u,int fa)\n{\n    for(auto&amp; v:g[u])\n    {\n        if(v == fa)continue;\n        dfs(v,u);\n        d = max(d,dp[u] + dp[v] + 1);\n        dp[u] = max(dp[u],dp[v] + 1);\n    }\n};\ndfs(1,0);\n// d \u4e3a\u76f4\u5f84\n</code></pre>"},{"location":"Graph/Tree/Basic/Basic/#_9","title":"\u6027\u8d28","text":"<ul> <li> <p>\u76f4\u5f84\u7684\u4e2d\u70b9\u5982\u679c\u4e0d\u552f\u4e00\uff0c\u5219\u81f3\u591a\u6709\u4e24\u4e2a\uff0c\u4e14\u8fd9\u4e24\u4e2a\u4e2d\u5fc3\u76f8\u90bb\u3002</p> </li> <li> <p>\u82e5\u6811\u4e0a\u6240\u6709\u8fb9\u8fb9\u6743\u5747\u4e3a\u6b63\uff0c\u5219\u6811\u7684\u6240\u6709\u76f4\u5f84\u7684\u4e2d\u70b9\u91cd\u5408\u3002</p> </li> </ul>"},{"location":"Graph/Tree/MST/MST/","title":"\u6700\u5c0f\u751f\u6210\u6811","text":""},{"location":"Graph/Tree/MST/MST/#_1","title":"\u5b9a\u4e49","text":"<p>\u8fde\u901a\u56fe\uff1a\u4efb\u610f\u4e24\u4e2a\u9876\u70b9\u4e4b\u95f4\u90fd\u6709\u4e00\u6761\u8def\u5f84\u76f8\u901a\u3002</p> <p>\u751f\u6210\u6811\uff1a\u4e00\u4e2a\u8fde\u901a\u65e0\u5411\u56fe\u7684\u751f\u6210\u5b50\u56fe\uff0c\u540c\u65f6\u8981\u6c42\u662f\u6811\u3002\u4e5f\u5373\u5728\u56fe\u7684\u8fb9\u96c6\u4e2d\u9009\u62e9$ n - 1$\u6761\uff0c\u5c06\u6240\u6709\u9876\u70b9\u8fde\u901a\u3002</p> <p>\u6700\u5c0f\u751f\u6210\u6811\uff1a\u8fb9\u6743\u548c\u6700\u5c0f\u7684\u751f\u6210\u6811\u3002\u53ea\u6709\u8fde\u901a\u56fe\u624d\u6709\u751f\u6210\u6811\u3002</p> <p>\u3010\u6a21\u677f\u3011\u6700\u5c0f\u751f\u6210\u6811</p>"},{"location":"Graph/Tree/MST/MST/#kruskal","title":"\\(Kruskal\\)\u7b97\u6cd5","text":""},{"location":"Graph/Tree/MST/MST/#_2","title":"\u601d\u8def","text":"<p>\\(Kruskal\\)\u7b97\u6cd5\u662f\u5229\u7528\u8d2a\u5fc3\u65b9\u6cd5\u5b9e\u73b0\u7684\u6700\u5c0f\u751f\u6210\u6811\u7b97\u6cd5\u3002\u7b97\u6cd5\u601d\u8def\u4e5f\u5f88\u7b80\u5355\uff0c\u6bcf\u6b21\u5c06\u56fe\u4e2d\u8fb9\u6743\u6700\u5c0f\u4e14\u4e0d\u4f1a\u6784\u6210\u56de\u8def\u7684\u8fb9\u52a0\u5165\u5230\u751f\u6210\u6811\u4e2d\uff0c\u6700\u7ec8\u5c06\\(n-1\\)\u6761\u8fb9\u90fd\u52a0\u5165\u540e\uff0c\u5c31\u5f97\u5230\u4e86\u6700\u5c0f\u751f\u6210\u6811\u3002</p>"},{"location":"Graph/Tree/MST/MST/#_3","title":"\u5b9e\u73b0","text":"<p>\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u5e76\u67e5\u96c6\u6765\u5b9e\u73b0\uff0c\u5c06\u8fde\u901a\u7684\u8282\u70b9\u52a0\u5165\u5230\u540c\u4e00\u96c6\u5408\u4e2d\u3002</p> <p>\u5728\u52a0\u5165\u65b0\u8fb9\u65f6\uff0c\u5148\u5224\u65ad\u8fb9\u8fde\u63a5\u7684\u4e24\u4e2a\u9876\u70b9\u662f\u5426\u6240\u5c5e\u540c\u4e00\u96c6\u5408\uff0c\u5982\u679c\u5df2\u7ecf\u5728\u540c\u4e00\u96c6\u5408\uff0c\u8bf4\u660e\u4e24\u70b9\u5df2\u8fd1\u8fde\u901a\uff0c\u4e0d\u80fd\u518d\u8fde\u8fb9\u4e86\uff1b\u5982\u679c\u4e0d\u5728\u540c\u4e00\u96c6\u5408\u4e2d\uff0c\u90a3\u5c31\u5c06\u4e24\u8282\u70b9\u5408\u5e76 \u5230\u4e00\u4e2a\u96c6\u5408\u4e2d\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f\u5bf9\u8fb9\u7684\u6392\u5e8f\uff0c\\(O(m\\log m)\\)</p>"},{"location":"Graph/Tree/MST/MST/#prim","title":"\\(Prim\\)\u7b97\u6cd5","text":""},{"location":"Graph/Tree/MST/MST/#_4","title":"\u601d\u8def","text":"<p>\\(Prim\\)\u7b97\u6cd5\u4e5f\u5229\u7528\u4e86\u8d2a\u5fc3\u7684\u601d\u60f3\uff0c\u4f46\u662f\u8d2a\u5fc3\u7684\u7b56\u7565\u548c\\(Kruskal\\)\u4e0d\u540c\u3002</p> <p>\\(Prim\\)\u7b97\u6cd5\u4ece\u4e00\u4e2a\u8d77\u59cb\u8282\u70b9\u5f00\u59cb\uff0c\u6211\u5047\u8bbe\u8d77\u59cb\u8282\u70b9\u4e3a\\(a\\)\uff0c\u6211\u4eec\u5c06\\(a\\)\u52a0\u5165\u5230\u96c6\u5408\\(V\\)\u4e2d\uff0c\u96c6\u5408\\(V\\)\u8868\u793a\u6700\u5c0f\u751f\u6210\u6811\u4e2d\u7684\u8282\u70b9\u3002</p> <p>\u6211\u4eec\u4ece\u6240\u6709\u548c\\(V\\)\u4e2d\u7684\u9876\u70b9\u76f8\u8fde\u7684\u8fb9\u4e2d\u9009\u53d6\u8fb9\u6743\u6700\u5c0f\u7684\u90a3\u4e00\u6761\uff0c\u5c06\u5176\u8fde\u63a5\u7684\u9876\u70b9\u52a0\u5165\u5230\u96c6\u5408\\(V\\)\u4e2d\uff0c\u5e76\u4e14\u9009\u53d6\u7684\u8fb9\u4e0d\u80fd\u4f7f\u6700\u5c0f\u751f\u6210\u6811\u4e2d\u51fa\u73b0\u73af\u3002\u5faa\u73af\u6b64\u8fc7\u7a0b\uff0c\u5f53\u6240\u6709\\(n\\)\u4e2a\u8282\u70b9\u90fd\u88ab\u9009\u5b8c\uff0c\u5c31\u5f97\u5230\u6700\u5c0f\u751f\u6210\u6811\u4e86\u3002</p> <p>\u4e0b\u9762\u662f\\(Prim\\)\u7b97\u6cd5\u7684\u8fd0\u884c\u8fc7\u7a0b\uff1a</p>"},{"location":"Graph/Tree/MST/MST/#_5","title":"\u5b9e\u73b0","text":"<p>\u6734\u7d20\u7684\u5b9e\u73b0\u65b9\u5f0f\u662f\uff1a\u6bcf\u6b21\u5411\u6700\u5c0f\u751f\u6210\u6811\u4e2d\u52a0\u5165\u9876\u70b9\u65f6\uff0c\u679a\u4e3e\u6240\u6709\u4e0e\\(V\\)\u76f8\u8fde\u7684\u8fb9\uff0c\u4ece\u4e2d\u9009\u53d6\u6ee1\u8db3\u6761\u4ef6\u7684\u6700\u5c0f\u8fb9\u6743\u52a0\u5165\u7684\u6700\u5c0f\u751f\u6210\u6811\u4e2d\uff0c\u8fd9\u6837\u65f6\u95f4\u590d\u6742\u5ea6\u4e0d\u592a\u7f8e\u4e3d\uff0c\\(O(n^2+m)\\)\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u7528\u4f18\u5148\u961f\u5217\u6765\u8fdb\u884c\u4f18\u5316\uff0c\u6211\u4eec\u5c06\u4e0e\\(V\\)\u76f8\u8fde\u7684\u8fb9\u90fd\u52a0\u5165\u5230\u6709\u9650\u961f\u5217\u4e2d\uff0c\u8fd9\u6837\u5c31\u4e0d\u9700\u8981\u679a\u4e3e\u6765\u627e\u5230\u6700\u5c0f\u8fb9\u6743\u4e86\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u4f4e\u5f88\u591a\u4e86\\(O((n+m)\\log n)\\)\u3002</p>"},{"location":"Graph/Tree/hld/hld/","title":"\u6811\u94fe\u5256\u5206","text":""},{"location":"Graph/Tree/hld/hld/#_1","title":"\u6811\u94fe\u5256\u5206\u601d\u60f3","text":"<p>\u6811\u94fe\u5256\u5206\u7684\u4e3b\u8981\u601d\u8def\u5c31\u662f\u5c06\u4e00\u68f5\u6811\uff0c\u82e5\u5e72\u6761\u94fe\uff0c\u8ba9\u6bcf\u6761\u94fe\u4e0a\u7684 \\(dfs\\) \u5e8f\u662f\u8fde\u7eed\u7684\uff0c\u8fd9\u6837\u5c31\u80fd\u5c06\u4e00\u4e2a\u6811\u5f62\u7ed3\u6784\u8f6c\u5316\u4e3a\u4e00\u4e2a\u7ebf\u6027\u7ed3\u6784\uff0c\u5728\u5904\u7406\u4e00\u6761\u6811\u4e0a\u8def\u5f84\u65f6\uff0c\u5c31\u53ef\u4ee5\u8f6c\u5316\u4e3a\u5bf9\u82e5\u5e72\u6761\u94fe\u8fdb\u884c\u5904\u7406\uff0c\u8fd9\u5c31\u53ef\u4ee5\u7528\u4e00\u4e9b\u7ebf\u6027\u6570\u636e\u7ed3\u6784\u6765\u5904\u7406\uff0c\u4f8b\u5982\u7ebf\u6bb5\u6811\u3002</p> <p>\u60f3\u8981\u6709\u6bd4\u8f83\u4f18\u79c0\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u8bdd\uff0c\u90a3\u4e48\u4e00\u6761\u8def\u52b2\u4e0a\u7684\u94fe\u5c31\u4e0d\u80fd\u592a\u591a\uff0c\u5e94\u5f53\u662f\u50cf \\(\\log n\\) \u6216 \\(\\sqrt{n}\\) \u8fd9\u6837\u7684\u6570\u91cf\u3002\u8fd9\u5c31\u53d6\u51b3\u4e8e\u94fe\u7684\u5212\u6cd5\u4e86\u3002</p> <p>\u901a\u5e38\u6709\u4e24\u79cd\u5256\u5206\u65b9\u6cd5\uff0c\u91cd\u94fe\u5256\u5206\u548c\u957f\u94fe\u5256\u5206\u3002\u56e0\u4e3a\u91cd\u94fe\u5256\u5206\u901a\u5e38\u6709\u66f4\u4f18\u7684\u590d\u6742\u5ea6\uff0c\u6240\u4ee5\u6811\u94fe\u5256\u5206\u4e00\u822c\u6307\u7684\u5c31\u662f\u91cd\u94fe\u5256\u5206\u3002</p>"},{"location":"Graph/Tree/hld/hld/#_2","title":"\u91cd\u94fe\u5256\u5206","text":"<p>\u91cd\u94fe\u5256\u5206\u7684\u5212\u5206\u601d\u8def\u662f\u8fd9\u6837\u7684\uff1a</p> <ul> <li> <p>\u6bcf\u4e2a\u8282\u70b9\u7ed9\u7684\u513f\u5b50\u88ab\u5212\u5206\u6210\u4e24\u90e8\u5206\uff0c\u91cd\u513f\u5b50\u548c\u8f7b\u513f\u5b50\u3002\u91cd\u513f\u5b50\u53ea\u6709\u4e00\u4e2a\uff0c\u8868\u793a\u5b50\u8282\u70b9\u4e2d\u5b50\u6811\u6700\u5927\u7684\u90a3\u4e2a\u5b50\u7ed3\u70b9\u3002\u5982\u679c\u6709\u591a\u4e2a\u5b50\u6811\u6700\u5927\u7684\u5b50\u7ed3\u70b9\uff0c\u53d6\u5176\u4e00\u3002\u5982\u679c\u6ca1\u6709\u5b50\u8282\u70b9\uff0c\u5c31\u65e0\u91cd\u5b50\u8282\u70b9\u3002\u5176\u4f59\u8282\u70b9\u90fd\u662f\u8f7b\u513f\u5b50\u3002</p> </li> <li> <p>\u4e0e\u91cd\u513f\u5b50\u8fde\u63a5\u7684\u8fb9\u88ab\u79f0\u4f5c\u91cd\u8fb9\uff0c\u4e0e\u8f7b\u513f\u5b50\u8fde\u63a5\u7684\u8fb9\u88ab\u79f0\u4f5c\u8f7b\u8fb9\u3002</p> </li> <li> <p>\u5728 \\(dfs\\) \u904d\u5386\u6574\u4e2a\u6811\u65f6\uff0c\u6bcf\u6b21\u4f18\u5148\u8d70\u91cd\u513f\u5b50\uff0c\u6309\u7167\u8fd9\u4e2a\u987a\u5e8f\u4f9d\u6b21\u7ed9\u8282\u70b9\u7f16\u53f7\uff0c\u5c31\u4f1a\u5c06\u6811\u5212\u5206\u4e3a\u5982\u4e0b\u7ed3\u6784\uff1a</p> </li> </ul> <p>\u84dd\u8272\u6846\u6846\u8d77\u6765\u7684\u5c31\u662f\u4e00\u6761\u91cd\u94fe\uff0c\u56fe\u4e2d\u5df2\u5c06\u6309\u7167\u4e0a\u8ff0 \\(dfs\\) \u7684\u987a\u5e8f\u5c06\u8282\u70b9\u7f16\u53f7\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\u4e00\u6761\u94fe\u4e0a\u7684\u7f16\u53f7\u662f\u8fde\u7eed\u7684\uff0c\u4e00\u4e2a\u5b50\u6811\u7684\u7f16\u53f7\u4e5f\u662f\u8fde\u7eed\u7684\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u5c06\u4e00\u4e9b\u6811\u4e0a\u95ee\u9898\u8f6c\u5316\u4e3a\u7ebf\u6027\u7684\u95ee\u9898\u3002</p> <p>\u8981\u5c06\u6811\u5212\u6210\u4e0a\u56fe\u8fd9\u6837\u7684\u7ed3\u6784\uff0c\u9700\u8981\u8fdb\u884c\u4e24\u6b21 \\(dfs\\)\uff0c\u7b2c\u4e00\u6b21 \\(dfs\\) \u8ba1\u7b97\u6bcf\u4e2a\u8282\u70b9\u7684\u6df1\u5ea6\u3001\u7236\u8282\u70b9\u3001\u8be5\u8282\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u7684\u5927\u5c0f\uff0c\u4ee5\u53ca\u8282\u70b9\u7684\u91cd\u513f\u5b50\u3002</p> <pre><code>vector&lt;int&gt; sz(n + 1); // \u8bb0\u5f55\u5b50\u6811\u5927\u5c0f\nvevtor&lt;int&gt; fa(n + 1);  // \u8bb0\u5f55\u7236\u8282\u70b9\nvector&lt;int&gt; dep(n + 1); // \u8bb0\u5f55\u6df1\u5ea6\nvector&lt;int&gt; hson(n + 1);// \u8bb0\u5f55\u91cd\u513f\u5b50\nfunction&lt;void(int,int)&gt; dfs1 = [&amp;](int u,int ffa)\n{\n    fa[u] = ffa;\n    dep[u] = dep[ffa] + 1;\n    sz[u] = 1;\n    for(auto&amp; v:g[u])\n    {\n        if(v == ffa)continue;\n        dfs1(v,u);\n        sz[u] += sz[v];\n        if(sz[v] &gt; sz[hson[u]])\n            hson[u] = v;\n    }\n};\n</code></pre> <p>\u7b2c\u4e8c\u6b21 \\(dfs\\) \u4e3a\u8282\u70b9\u7f16\u53f7\uff0c\u5e76\u4e14\u8bb0\u5f55\u6bcf\u4e2a\u8282\u70b9\u6240\u5728\u94fe\u7684\u94fe\u5934\uff1a</p> <pre><code>vector&lt;int&gt; a(n + 1);   // \u8282\u70b9\u6743\u503c\nvector&lt;int&gt; top(n + 1); // \u8282\u70b9\u6240\u5728\u94fe\u7684\u94fe\u5934\nvector&lt;int&gt; rnk(n + 1); // \u5c06\u8282\u70b9\u539f\u7f16\u53f7\u8f6c\u5316\u4e3a\u6211\u4eec\u8d4b\u503c\u7684\u65b0\u7f16\u53f7\nvector&lt;int&gt; id(n + 1);  // \u5c06\u8282\u70b9\u65b0\u7f16\u53f7\u8f6c\u5316\u4e3a\u539f\u7f16\u53f7\nint t = 0; // \u5df2\u5206\u914d\u7f16\u53f7\u7684\u6570\u91cf\nfunction&lt;void(int,int,int)&gt; dfs2 = [&amp;](int u,int ffa,int tp)\n{\n    top[u] = tp;\n    rnk[u] = ++t;\n    id[t] = u;\n    if(hson[u])d2(hson[u],u,tp);// \u91cd\u94fe\n    for(auto&amp;v:g[u])\n    {\n        if(v == ffa or hson[u] == v)continue;\n        dfs2(v,u,v);            // \u8f7b\u94fe\n    }\n};\n</code></pre> <p>\u8fd9\u6837\u5c31\u5c06\u6811\u5256\u5206\u6210\u4e86\u82e5\u5e72\u6761\u94fe\uff0c\u4ece\u4e00\u4e2a\u6811\u5f62\u7ed3\u6784\u88ab\u5212\u5206\u6210\u4e86\u7ebf\u6027\u7ed3\u6784\uff1a</p> <p>\u8fd9\u6837\u5212\u5206\u51fa\u7684\u6811\u4f1a\u6709\u4e00\u4e9b\u7279\u70b9\uff1a</p> <ul> <li> <p>\u6811\u4e0a\u6bcf\u4e2a\u8282\u70b9\u90fd\u5c5e\u4e8e\u4e14\u4ec5\u5c5e\u4e8e\u4e00\u6761\u91cd\u94fe\u3002\u6240\u6709\u7684\u91cd\u94fe\u5c06\u6574\u68f5\u6811 \u5b8c\u5168\u5256\u5206\u3002</p> </li> <li> <p>\u4e00\u9897\u5b50\u6811\u5185\u7684 DFS \u5e8f\u662f\u8fde\u7eed\u7684\u3002\u5728\u5256\u5206\u65f6 \u91cd\u8fb9\u4f18\u5148\u904d\u5386\uff0c\u6700\u540e\u6811\u7684 DFS \u5e8f\u4e0a\uff0c\u91cd\u94fe\u5185\u7684 DFS \u5e8f\u662f\u8fde\u7eed\u7684\u3002</p> </li> </ul> <p>\u56e0\u4e3a\u8fd9\u4e9b\u7279\u70b9\uff0c\u4f7f\u5f97\u6211\u4eec\u53ef\u4ee5\u5c06\u5256\u5206\u5f97\u5230\u7684\u7ebf\u6027\u6570\u7ec4\u4ea4\u7ed9\u7ebf\u6bb5\u6811\u4e4b\u7c7b\u7684\u6570\u636e\u7ed3\u6784\u7ef4\u62a4\u3002\u5f53\u8981\u4fee\u6539\u4e00\u6761\u6811\u4e0a\u8def\u5f84\u65f6\uff0c\u5c31\u662f\u4fee\u6539\u51e0\u6761\u94fe\uff0c\u6bcf\u6b21\u5bf9\u94fe\u7684\u4fee\u6539\u5c31\u662f\uff0c\u5c31\u662f\u5bf9\u8be5\u5e8f\u5217\u7684 \\([top[rnk[u]],rnk[u]]\\) \u8fd9\u4e2a\u8303\u56f4\u7684\u4fee\u6539\u3002</p> <p>\u6bd4\u5982\u8bf4\u6211\u4eec\u8981\u5c06 \\(8\\) \u53f7\u8282\u70b9\u548c \\(3\\) \u53f7\u8282\u70b9\u8def\u5f84\u4e0a\u7684\u6bcf\u4e2a\u8282\u70b9\u6743\u503c\u90fd\u52a0 \\(1\\)\uff0c\u5176\u5b9e\u5c31\u662f\u4fee\u6539\u6570\u7ec4\u4e2d \\([1,3]\\) \u548c \\([8,8]\\) \u4e24\u4e2a\u533a\u95f4\u3002\u8fd9\u4e2a\u64cd\u4f5c\u7684\u4ee3\u7801\u5b9e\u73b0\u5728\u540e\u9762\u6a21\u677f\u9898\u76ee\u4e2d\u4ecb\u7ecd\u3002</p>"},{"location":"Graph/Tree/hld/hld/#_3","title":"\u65f6\u95f4\u590d\u6742\u5ea6","text":"<p>\u5bf9\u4e8e\u4e0a\u8ff0\u7684\u8def\u5f84\u4fee\u6539\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u7ebf\u6bb5\u6811\u6216\u5dee\u5206\uff0c\u5b9e\u73b0 \\(O(\\log n)\\) \u6216 \\(O(1)\\) \u7684\u590d\u6742\u5ea6\uff0c\u53ea\u8981\u6574\u4e2a\u8def\u5f84\u4e0a\u6211\u4eec\u8981\u4fee\u6539\u7684\u94fe\u7684\u6570\u91cf\u5728\u4e00\u4e2a\u5408\u7406\u8303\u56f4\u5185\uff0c\u590d\u6742\u5ea6\u5c31\u4e0d\u4f1a\u5f88\u9ad8\u3002</p> <p>\u6240\u4ee5\u6811\u5256\u7684\u6700\u574f\u590d\u6742\u5ea6\u53d6\u51b3\u4e8e\u4e24\u70b9\u95f4\u7ecf\u8fc7\u7684\u94fe\u7684\u6700\u5927\u6570\u91cf\u3002\u5bf9\u4e8e\u91cd\u94fe\u5256\u5206\uff0c\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u6bcf\u8d70\u4e00\u6b21\u8f7b\u8fb9\uff0c\u5b50\u6811\u7684\u5927\u5c0f\u81f3\u5c11\u4f1a\u9664\u4ee5 \\(2\\)\uff0c\u56e0\u4e3a\u91cd\u5b50\u8282\u70b9\u7684\u4e2a\u6570\u662f\u6700\u591a\u7684\uff0c\u4efb\u610f\u4e00\u4e2a\u8f7b\u513f\u5b50\u7684\u5b50\u6811\u5927\u5c0f\u90fd\u4e0d\u53ef\u80fd\u8d85\u8fc7\u5f53\u524d\u5b50\u6811\u8282\u70b9\u6570\u91cf\u7684\u4e00\u534a\u3002\u90a3\u4e48\u5bf9\u4e8e\u4e00\u4e2a\u6709 \\(n\\) \u4e2a\u8282\u70b9\u7684\u6811\uff0c\u6700\u591a\u53ea\u4f1a\u6709 \\(\\log n\\) \u6761\u94fe\u3002</p> <p>\u6240\u4ee5\u5728\u5728\u4efb\u610f\u4e24\u70b9\u95f4\u79fb\u52a8\uff0c\u7ecf\u8fc7\u7684\u94fe\u4e5f\u4e0d\u4f1a\u8d85\u8fc7 \\(\\log n\\) \u6761\u3002\u6240\u4ee5\u6811\u5256\u4e5f\u53ef\u4ee5\u6c42 \\(LCA\\)\u3002</p>"},{"location":"Graph/Tree/hld/hld/#_4","title":"\u6a21\u677f","text":"<p>\u6211\u4eec\u6765\u770b\u4e0b\u9762\u8fd9\u9053\u6a21\u677f\u9898\uff1a</p> <p>P3384 \u3010\u6a21\u677f\u3011\u91cd\u94fe\u5256\u5206/\u6811\u94fe\u5256\u5206\uff1a\u5df2\u77e5\u4e00\u68f5\u5305\u542b \\(N\\) \u4e2a\u7ed3\u70b9\u7684\u6811\uff08\u8fde\u901a\u4e14\u65e0\u73af\uff09\uff0c\u6bcf\u4e2a\u8282\u70b9\u4e0a\u5305\u542b\u4e00\u4e2a\u6570\u503c\uff0c\u9700\u8981\u652f\u6301\u4ee5\u4e0b\u64cd\u4f5c\uff1a</p> <ul> <li> <p><code>1 x y z</code>\uff0c\u8868\u793a\u5c06\u6811\u4ece \\(x\\) \u5230 \\(y\\) \u7ed3\u70b9\u6700\u77ed\u8def\u5f84\u4e0a\u6240\u6709\u8282\u70b9\u7684\u503c\u90fd\u52a0\u4e0a \\(z\\)\u3002</p> </li> <li> <p><code>2 x y</code>\uff0c\u8868\u793a\u6c42\u6811\u4ece \\(x\\) \u5230 \\(y\\) \u7ed3\u70b9\u6700\u77ed\u8def\u5f84\u4e0a\u6240\u6709\u8282\u70b9\u7684\u503c\u4e4b\u548c\u3002</p> </li> <li> <p><code>3 x z</code>\uff0c\u8868\u793a\u5c06\u4ee5 \\(x\\) \u4e3a\u6839\u8282\u70b9\u7684\u5b50\u6811\u5185\u6240\u6709\u8282\u70b9\u503c\u90fd\u52a0\u4e0a \\(z\\)\u3002</p> </li> <li> <p><code>4 x</code> \u8868\u793a\u6c42\u4ee5 \\(x\\) \u4e3a\u6839\u8282\u70b9\u7684\u5b50\u6811\u5185\u6240\u6709\u8282\u70b9\u503c\u4e4b\u548c\u3002</p> </li> </ul> <p>\u8fd9\u4e2a\u677f\u5b50\u9898\u5c31\u662f\u6211\u4eec\u4e0a\u9762\u4ecb\u7ecd\u7684\uff0c\u628a\u6811\u5256\u5206\u4e00\u4e0b\uff0c\u4e22\u7ed9\u4e00\u4e2a\u7ebf\u6bb5\u6811\u53bb\u7ef4\u62a4\u5c31\u884c\u4e86\uff0c\u590d\u6742\u5ea6\u5728 \\(m\\log^2 n\\)</p> <p>\u8fd9\u91cc\u4e3b\u8981\u8bb2\u4e00\u4e0b\u4fee\u6539\u8def\u5f84\u6743\u503c\u8fd9\u4e2a\u64cd\u4f5c\u7684\u5b9e\u73b0\uff0c\u4e3b\u8981\u662f\u6015\u5927\u5bb6\u4e0d\u7406\u89e3\u5982\u4f55\u901a\u8fc7\u94fe\u5728\u6811\u4e0a\u5feb\u901f\u79fb\u52a8\uff0c\u6211\u4eec\u76f4\u63a5\u628a\u64cd\u4f5c 1 \u7684\u4ee3\u7801\u8d34\u8fc7\u6765\uff0c\u4e3b\u8981\u601d\u8def\u5c31\u662f\u4f18\u5148\u8df3\u6240\u5728\u94fe\u6df1\u5ea6\u8f83\u4f4e\u7684\uff0c\u5c31\u662f\u4e3a\u4e86\u9632\u6b62\u9519\u8fc7\u3002\u5f53\u4e24\u4e2a\u70b9\u5230\u540c\u4e00\u6761\u94fe\u4e0a\u65f6\uff0c\u5728\u6839\u636e\u4e24\u4e2a\u70b9\u6240\u5728\u6df1\u5ea6\uff0c\u4fee\u8be5\u5bf9\u533a\u95f4\u3002</p> <pre><code>if(op == 1)\n{\n    cin &gt;&gt; y &gt;&gt; z;\n    while(top[x] != top[y])\n    {\n        if(dep[top[x]] &gt; dep[top[y]])   // \u4f18\u5148\u8df3\u6240\u5728\u94fe\u6df1\u5ea6\u8f83\u4f4e\u7684\n        {\n            update(1,rnk[top[x]],rnk[x],z); // \u4fee\u6539\u94fe\n            x = fa[top[x]];\n        }\n        else \n        {\n            update(1,rnk[top[y]],rnk[y],z);\n            y = fa[top[y]];\n        }\n    }\n    if(dep[x] &gt; dep[y]) \n        update(1,rnk[y],rnk[x],z);\n    else \n        update(1,rnk[x],rnk[y],z);\n}\n</code></pre> AC\u4ee3\u7801 <p>\u8fd9\u91cc\u5199\u4e86\u597d\u591a\u95ed\u5305\u51fd\u6570\uff0c\u53ef\u80fd\u770b\u8d77\u6765\u4e0d\u662f\u5f88\u8212\u670d\uff0c\u4f46\u4f5c\u8005\u592a\u61d2\u4e86\uff0c\u6709\u613f\u610f\u4fee\u6539\u7684\u53ef\u4ee5\u63d0\u4e2a PR\uff08\u7801\u98ce\u597d\u770b\u4e9b\uff09\u3002 <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nusing ll = long long;\nusing ull = unsigned long long;\nconstexpr int MAX = 1e6 + 100;\nconstexpr ll mod = 1e9 + 7;\nconstexpr double pi = 3.1415926535;\nextern void solve();\n\nint main()\n{\n    ios::sync_with_stdio(false);\n    cin.tie(0), cout.tie(0);\n\n#ifdef LOCAL\n    freopen(\"in.in\", \"r\", stdin);\n    freopen(\"out.out\", \"w\", stdout);\n#endif\n\n    // int T = 0;\n    // for (cin &gt;&gt; T; T--;)\n        solve();\n    return 0;\n}\n\nstruct seg\n{\n    int l = 0,r = 0, a = 0,tag = 0;\n}f[MAX &lt;&lt; 3];\n\n\nvoid solve()\n{\n    int n,m,r,p;\n    cin &gt;&gt; n &gt;&gt; m &gt;&gt; r &gt;&gt; p;\n    vector&lt;int&gt; a(n + 1),sz(n + 1),fa(n + 1),top(n + 1),dep(n + 1),rnk(n + 1),id(n + 1),hson(n + 1);\n    vector&lt;vector&lt;int&gt;&gt; g(n + 1); \n    for(int i = 1;i &lt;= n;++i)cin &gt;&gt; a[i];\n    for(int i = 0;i &lt; n - 1;++i)\n    {\n        int u,v;\n        cin &gt;&gt; u &gt;&gt; v;\n        g[u].push_back(v);\n        g[v].push_back(u);\n    }\n\n    function&lt;void(int,int)&gt; d1 = [&amp;](int u,int ffa)\n    {\n        fa[u] = ffa;\n        dep[u] = dep[ffa] + 1;\n        sz[u] = 1;\n        for(auto&amp; v:g[u])\n        {\n            if(v == ffa)continue;\n            d1(v,u);\n            sz[u] += sz[v];\n            if(sz[v] &gt; sz[hson[u]])\n                hson[u] = v;\n        }\n    };\n    int t = 0;\n    function&lt;void(int,int,int)&gt; d2 = [&amp;](int u,int ffa,int tp)\n    {\n        top[u] = tp;\n        rnk[u] = ++t;\n        id[t] = u;\n        if(hson[u])d2(hson[u],u,tp);// \u91cd\u94fe\n        for(auto&amp;v:g[u])\n        {\n            if(v == ffa or hson[u] == v)continue;\n            d2(v,u,v);          // \u8f7b\u94fe\n        }\n    };\n\n    // \u6811\u94fe\u5256\u5206\n    d1(r,0);\n    d2(r,0,r);\n\n    auto push_up = [&amp;](int k) { f[k].a = f[k &lt;&lt; 1].a + f[k &lt;&lt; 1 | 1].a; };\n\n    function&lt;void(int,int,int)&gt; build = [&amp;](int k,int l,int r)  \n    {\n        f[k].l = l,f[k].r = r;\n        if(l == r)\n        {\n            f[k].a = a[id[l]];\n            return;\n        }\n        int mid = (l + r) &gt;&gt; 1;\n        build(k &lt;&lt; 1,l,mid);\n        build(k &lt;&lt; 1 | 1,mid + 1,r);\n        push_up(k);\n    };\n\n    auto add_tag = [&amp;](int k,int x)\n    {\n        (f[k].a += x * (f[k].r - f[k].l + 1)) %= p;\n        (f[k].tag += x) %= p;\n    };\n\n    auto push_down = [&amp;](int k) \n    {\n        if(f[k].tag)\n        {\n            add_tag(k &lt;&lt; 1,f[k].tag);\n            add_tag(k &lt;&lt; 1 | 1,f[k].tag);\n            f[k].tag = 0;\n        }\n    };\n\n    function&lt;int(int,int,int)&gt; ask = [&amp;](int k,int l,int r) -&gt; int\n    {\n        if(l &lt;= f[k].l and f[k].r &lt;= r)\n            return f[k].a;\n        push_down(k);   \n        int mid = (f[k].l + f[k].r) &gt;&gt; 1;\n        int res = 0;\n        if(l &lt;= mid) (res += ask(k &lt;&lt; 1,l,r)) %= p;\n        if(r &gt; mid) (res += ask(k &lt;&lt; 1 | 1,l,r)) %= p ;\n        push_up(k);\n        return res; \n    };\n\n    function&lt;void(int,int,int,int)&gt; update = [&amp;](int k,int l,int r,int x)\n    {\n        if(l &lt;= f[k].l and f[k].r &lt;= r)\n            return add_tag(k,x),void();\n        push_down(k);\n        int mid = (f[k].l + f[k].r) &gt;&gt; 1;\n        if(l &lt;= mid) update(k &lt;&lt; 1,l,r,x);\n        if(r &gt; mid) update(k &lt;&lt; 1 | 1,l,r,x);\n        push_up(k);\n    };\n\n    build(1,1,n);\n    while(m--)\n    {\n        int op,x,y,z;\n        cin &gt;&gt; op &gt;&gt; x;\n        if(op == 1)\n        {\n            cin &gt;&gt; y &gt;&gt; z;\n            while(top[x] != top[y])\n            {\n                if(dep[top[x]] &gt; dep[top[y]])update(1,rnk[top[x]],rnk[x],z),x = fa[top[x]];\n                else update(1,rnk[top[y]],rnk[y],z),y = fa[top[y]];\n            }\n            if(dep[x] &gt; dep[y]) update(1,rnk[y],rnk[x],z);\n            else update(1,rnk[x],rnk[y],z);\n        }\n        else if(op == 2)\n        {\n            cin &gt;&gt; y;\n            int res = 0;\n            while(top[x] != top[y])\n            {\n                if(dep[top[x]] &gt; dep[top[y]]) (res += ask(1,rnk[top[x]],rnk[x])) %= p,x = fa[top[x]];\n                else (res += ask(1,rnk[top[y]],rnk[y])) %= p,y = fa[top[y]];\n            }\n            if(dep[x] &gt; dep[y]) (res += ask(1,rnk[y],rnk[x])) %= p;\n            else (res += ask(1,rnk[x],rnk[y])) %= p;\n            cout &lt;&lt; res % p &lt;&lt; '\\n';\n        }\n        else if(op == 3)\n        {\n            cin &gt;&gt; z;\n            update(1,rnk[x],rnk[x] + sz[x] - 1,z);\n        }\n        else \n        {\n            cout &lt;&lt; ask(1,rnk[x],rnk[x] + sz[x] - 1) % p &lt;&lt; '\\n';\n        }\n    }\n}\n</code></pre></p>"},{"location":"Graph/Tree/hld/hld/#_5","title":"\u957f\u94fe\u5256\u5206","text":"<p>\u957f\u94fe\u5256\u5206\u548c\u91cd\u94fe\u5256\u5206\u6838\u5fc3\u601d\u60f3\u76f8\u540c\uff0c\u5c31\u662f\u5212\u5206\u91cd\u513f\u5b50\u7684\u6807\u51c6\u6539\u4e3a\u4e86\u5b50\u6811\u9ad8\u5ea6\u6700\u9ad8\u7684\u90a3\u4e2a\u513f\u5b50\u8282\u70b9\u3002</p> <p>\u957f\u94fe\u5256\u5206\u5177\u6709\u4e00\u4e9b\u6027\u8d28\uff1a</p> <ul> <li> <p>\u4ece\u4e00\u4e2a\u8282\u70b9\u8df3\u5411\u94fe\u9876\u7684\u7236\u4eb2\uff0c\u6240\u5728\u7684\u94fe\u957f\u5ea6\u4e00\u5b9a\u589e\u52a0\uff0c\u8bc1\u660e\u663e\u7136\u3002</p> </li> <li> <p>\u4ece\u4e00\u4e2a\u8282\u70b9\u8df3\u94fe\u9876\uff0c\\(O(\\sqrt{n})\\) \u6b21\u53ef\u4ee5\u5230\u8fbe\u6811\u6839\uff0c\u7ed3\u5408\u4e0a\u4e00\u6027\u8d28\u53ef\u8bc1\uff0c\u6700\u574f\u60c5\u51b5\u662f\u6bcf\u8df3\u4e00\u4e2a\u8282\u70b9\u94fe\u957f\u589e\u52a0 \\(1\\)\uff0c\u90a3\u8df3\u7684\u6b65\u6570\u5c31\u662f \\(1+2+\\cdots +\\sqrt{n}\\)\uff0c\u8fd9\u91cc\u662f\u5927\u6982\u4f30\u8ba1\uff0c\u8981\u51c6\u786e\u7b97\u4e00\u4e0b\u7684\u8bdd\u5c31\u662f\u89e3 \\(n=\\frac{(1 + x)x}{2}\\) \u8fd9\u4e2a\u5f0f\u5b50\uff0c\u89e3\u51fa\u6765\u4e5f\u662f\u4e00\u4e2a \\(\\sqrt{n}\\) \u7684\u6570\u91cf\u7ea7\u3002</p> </li> </ul>"},{"location":"Graph/Tree/hld/hld/#dp","title":"\u4f18\u5316 DP","text":"<p>\u53c2\u8003\uff1a</p> <p>\u3010\u5b66\u4e60\u7b14\u8bb0\u3011\u957f\u94fe\u5256\u5206 </p>"},{"location":"Math/Geometry/2DGeometry/2D/","title":"\u4e8c\u7ef4\u8ba1\u7b97\u51e0\u4f55\u57fa\u7840","text":""},{"location":"Math/Geometry/2DGeometry/2D/#_2","title":"\u70b9","text":"<p>\u5e73\u9762\u76f4\u89d2\u5750\u6807\u7cfb\u4e0b\u7684\u70b9\uff0c\u4e00\u822c\u7528\u4e00\u4e2a\u7ed3\u6784\u4f53\u6765\u7ef4\u62a4\u5176\u6a2a\u7eb5\u5750\u6807 \\(x,y\\)\u3002\u4e0e\u5176\u8bf4\u662f\u70b9\uff0c\u4e0d\u5982\u8bf4\u5b83\u662f\u4e00\u4e2a\u4e8c\u7ef4\u5411\u91cf\u3002\u56e0\u4e3a\u6211\u4eec\u5e38\u5e38\u4f1a\u76f4\u63a5\u62ff\u4e24\u4e2a\u70b9\u505a\u5411\u91cf\u52a0\u51cf\u8fd0\u7b97\uff0c\u5f97\u5230\u6211\u4eec\u60f3\u8981\u7684\u5411\u91cf\u3002</p>"},{"location":"Math/Geometry/2DGeometry/2D/#_3","title":"\u4e8c\u7ef4\u5411\u91cf","text":"<p>\u7531\u4e8e\u5411\u91cf\u7684\u5750\u6807\u8868\u793a\u4e0e\u70b9\u76f8\u540c\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u50cf\u70b9\u4e00\u6837\u5b58\u5411\u91cf\u5373\u53ef\uff08\u5f53\u7136\u70b9\u4e0d\u662f\u5411\u91cf\uff09\u3002</p>"},{"location":"Math/Geometry/2DGeometry/2D/#_4","title":"\u5411\u91cf\u8fd0\u7b97","text":"<ul> <li>\u5411\u91cf\u52a0\u51cf</li> </ul> <p>\u5c31\u662f\u5411\u91cf\u5750\u6807\u5bf9\u5e94\u4f4d\u7f6e\u7684\u503c\u8fdb\u884c\u52a0\u51cf\u5373\u53ef\u3002 <pre><code>// \u5411\u91cf+\nPoint Point::operator+(const Point &amp;a) const \n{\n    return Point{x + a.x, y + a.y}; \n}\n// \u5411\u91cf-\nPoint Point::operator-(const Point &amp;a) const\n{ \n    return p{x - a.x, y - a.y}; \n}\n</code></pre> \u5411\u91cf\u52a0\u51cf\u7684\u51e0\u4f55\u610f\u4e49\u901a\u8fc7\u4e0b\u9762\u4e24\u56fe\u5f88\u597d\u7406\u89e3\uff1a</p> <ul> <li>\u70b9\u4e58\uff08\u5185\u79ef\uff09</li> </ul> <p>\u6211\u4eec\u77e5\u9053\u70b9\u4e58\u7684\u7ed3\u679c\u662f\u4e00\u4e2a\u6570\uff0c\u5176\u51e0\u4f55\u610f\u4e49\u4e3a \\(\\vec{b}\\) \u5728 \\(\\vec{a}\\) \u4e0a\u7684\u6295\u5f71\u4e0e \\(|\\vec{a}|\\) \u7684\u4e58\u79ef\u3002</p> <p>\u8ba1\u7b97\u516c\u5f0f\uff1a</p> \\[ \\vec{a}\\cdot \\vec{b}=|\\vec{a}|\\cdot|\\vec{b}|\\cos{\\theta} \\] <p>\u6362\u6210\u5750\u6807\u7684\u5f62\u5f0f\uff0c\u90a3\u4e48 \\(\\vec{a}=(x_1.y_1)\\)\uff0c\\(\\vec{b}=(x_2.y_2)\\) \u70b9\u4e58\u5c31\u662f\u5bf9\u5e94\u5750\u6807\u76f8\u4e58\uff1a</p> \\[ \\vec{a}\\cdot \\vec{b}=x_1x_2+y_1y_2 \\] <pre><code>// \u6211\u4eec\u5c06\u70b9\u4e58\u91cd\u8f7d\u4e3a | \u7b26\u53f7\ndouble Point::operator|(const Point &amp;a) const \n{ \n    return x * a.x + y * a.y; \n} // \u70b9\u4e58\n</code></pre> <ul> <li>\u53c9\u4e58\uff08\u5916\u79ef\uff09</li> </ul> <p>\u53c9\u4e58\u7684\u7ed3\u679c\u662f\u4e00\u4e2a\u5411\u91cf\uff0c\u5176\u65b9\u5411\u9075\u5faa\u53f3\u624b\u6cd5\u5219\u3002\u53c9\u4e58\u7ed3\u679c\u7684\u6a21\u662f\u7531\u4e24\u4e2a\u5411\u91cf\u56f4\u6210\u7684\u5e73\u884c\u56db\u8fb9\u7684\u9762\u79ef\u3002</p> <p>\u53c9\u4e58\u6a21\u7684\u8ba1\u7b97\u516c\u5f0f\uff1a</p> \\[ \\vec{a}\\times \\vec{b}=|\\vec{a}||\\vec{b}|\\sin{\\theta} \\] <p>\u6362\u6210\u5750\u6807\u5f62\u5f0f\uff0c\u90a3\u4e48 \\(\\vec{a}=(x_1.y_1)\\)\uff0c\\(\\vec{b}=(x_2.y_2)\\) \u53c9\u4e58\u5c31\u662f\u5750\u6807\u4ea4\u53c9\u76f8\u4e58\uff1a</p> \\[ \\vec{a}\\times \\vec{b}=x_1xy_2-x_1y_2 \\] <pre><code>double Point::operator*(const Point &amp;a) const \n{ \n    return x * a.y - y * a.x; \n} // \u53c9\u4e58\n</code></pre> <p>\u5229\u7528\u5750\u6807\u5728\u7a0b\u5e8f\u4e2d\u8fd0\u7b97\u70b9\u4e58\u53c9\u4e58\uff0c\u5bf9\u4e8e\u5224\u65ad\u51e0\u4f55\u4f4d\u7f6e\u5173\u7cfb\u65f6\u975e\u5e38\u6709\u7528\u3002</p> <ul> <li>\u5411\u91cf\u53d6\u6a21</li> </ul> <p>\u5411\u91cf\u53d6\u6a21\u5c31\u662f\u53d6\u5411\u91cf\u7684\u957f\u5ea6\u3002\u6211\u4eec\u53ef\u4ee5\u5c06\u4efb\u4f55\u4e00\u4e2a\u5411\u91cf\u5e73\u79fb\u5230\u8fdc\u70b9\uff0c\u90a3\u4e48\u5411\u91cf \\(\\vec{a}=(x,y)\\) \u7684\u957f\u5ea6\u5c31\u662f\u70b9 \\((x,y)\\) \u5230\u539f\u70b9\u7684\u8ddd\u79bb\u3002</p> \\[ |a|=\\sqrt{x^2+y^2} \\] <p>\u6211\u4eec\u53ef\u4ee5\u8ba1\u7b97\u5411\u91cf\u548c\u81ea\u5df1\u7684\u70b9\u4e58\u518d\u5f00\u5e73\u65b9\u5373\u53ef</p> <pre><code>// \u5411\u91cf\u53d6\u5e73\u65b9\ndouble Point::pow() const \n{ \n    return x * x + y * y; \n}                    \n// \u5411\u91cf\u53d6\u6a21\ndouble abs(const Point &amp;p) \n{ \n    return sqrt(p.pow()); \n}\n</code></pre>"},{"location":"Math/Geometry/2DGeometry/2D/#_5","title":"\u70b9\u5230\u70b9\u7684\u8ddd\u79bb","text":"<p>\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u6709\u4e24\u79cd\u5b9a\u4e49\u6cd5\uff1a\u66fc\u54c8\u987f\u8ddd\u79bb\uff0c\u6b27\u5f0f\u8ddd\u79bb\u3002</p>"},{"location":"Math/Geometry/2DGeometry/2D/#_6","title":"\u6b27\u5f0f\u8ddd\u79bb","text":"<p>\u5176\u4e2d\u6b27\u5f0f\u8ddd\u79bb\uff08\u6b27\u51e0\u91cc\u5fb7\u8ddd\u79bb\uff09\u5c31\u662f\u76f4\u7ebf\u8ddd\u79bb\u3002\u70b9 \\(A(x_1,y_1),B(x_2,y_2)\\) \u7684\u6b27\u5f0f\u8ddd\u79bb\u4e3a\uff1a</p> \\[ |AB|=\\sqrt{(x_1-x_2)^2+(y _1-y_2)^2} \\] <pre><code>// \u70b9\u5230\u70b9\u7684\u6b27\u5f0f\u8ddd\u79bb\ndouble Point::disPoint(const Point &amp;a) const\n{\n    return sqrt((x - a.x) * (x - a.x) + (y - a.y) * (y - a.y));\n}\n</code></pre>"},{"location":"Math/Geometry/2DGeometry/2D/#_7","title":"\u66fc\u54c8\u987f\u8ddd\u79bb","text":"<p>\u5728\u4e8c\u7ef4\u7a7a\u95f4\u5185\uff0c\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u66fc\u54c8\u987f\u8ddd\u79bb\u4e3a\u5b83\u4eec\u6a2a\u5750\u6807\u4e4b\u5dee\u7684\u7edd\u5bf9\u503c\u4e0e\u7eb5\u5750\u6807\u4e4b\u5dee\u7684\u7edd\u5bf9\u503c\u4e4b\u548c\u3002\u70b9 \\(A(x_1,y_1),B(x_2,y_2)\\) \u7684\u66fc\u54c8\u987f\u8ddd\u79bb\u4e3a\uff1a</p> \\[ d(A,B) = |x_1-x_2|+|y_1-y_2| \\]"},{"location":"Math/Geometry/2DGeometry/2D/#_8","title":"\u70b9\u5230\u76f4\u7ebf\u7684\u8ddd\u79bb","text":""},{"location":"Math/Geometry/2DGeometry/2D/#_9","title":"\u516c\u5f0f\u6cd5","text":"<p>\u5df2\u77e5\u76f4\u7ebf \\(l\\) \u65b9\u7a0b\u4e3a \\(ax+by+c=0\\)\uff0c\u5e73\u9762\u4e0a\u4efb\u610f\u4e00\u70b9 \\((x_0,y_0)\\) \u5230\u8be5\u76f4\u7ebf\u8ddd\u79bb \\(d\\) \u4e3a:</p> \\[ d = \\frac{|ax_0+by_0+c|}{\\sqrt{a^2+b^2}} \\]"},{"location":"Math/Geometry/2DGeometry/2D/#_10","title":"\u5411\u91cf\u6cd5","text":"<p>\u6211\u4eec\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5411\u91cf\u53c9\u4e58\u5f97\u5230\u70b9\u5230\u76f4\u7ebf\u7684\u8ddd\u79bb\u516c\u5f0f\u3002\u6211\u4eec\u4ee5\u70b9 \\(p\\) \u5230\u76f4\u7ebf \\(ab\\) \u4e3a\u4f8b\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5750\u6807\u8ba1\u7b97\u51fa\u5411\u91cf \\(\\vec{ap},\\vec{ab}\\) \u548c\u5b83\u4eec\u53c9\u4e58\u7684\u6a21\u3002</p> <p>\u56e0\u4e3a\u53c9\u4e58\u7684\u6a21\u662f\u5bf9\u5e94\u5411\u91cf\u6240\u56f4\u6210\u5e73\u884c\u56db\u8fb9\u5f62\u7684\u9762\u79ef\uff0c\u800c\\(\\left | \\vec{ab} \\right |\\)\u662f\u5e95\u8fb9\u957f\u5ea6\uff0c\u9762\u79ef\u9664\u4ee5\u5e95\u5c31\u662f\u9ad8\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u5bf9\u5e94\u8ddd\u79bb\u3002</p> <p>\u5f88\u5bb9\u6613\u5c31\u53ef\u4ee5\u5199\u51fa\u4e0b\u9762\u7684\u516c\u5f0f\uff1a</p> \\[ d=\\frac{\\left | \\vec{ap}\\times \\vec{ab} \\right | }{\\left | \\vec{ab}\\right |} \\] <p>\u56e0\u4e3a\u4e00\u822c\u9898\u76ee\u53ea\u4f1a\u7ed9\u6211\u4eec\u4e00\u4e9b\u70b9\u505a\u6570\u636e\uff0c\u6240\u4ee5\u6211\u4eec\u4e00\u822c\u91c7\u7528\u8fd9\u4e2a\u65b9\u6cd5\u8ba1\u7b97\u70b9\u5230\u76f4\u7ebf\u7684\u8ddd\u79bb \\(d\\) \u66f4\u65b9\u4fbf\u3002</p> <pre><code>// \u70b9\u5230\u76f4\u7ebf\u7684\u8ddd\u79bb\n// a,b\u4e3a\u76f4\u7ebf\u4e0a\u4e24\u70b9\ndouble Point::disline(const Point &amp;a, const Point &amp;b) const\n{\n    Point ap = (*this) - a, ab = b - a;\n    return abs(ap * ab) / abs(ab);\n}\n</code></pre>"},{"location":"Math/Geometry/2DGeometry/2D/#_11","title":"\u70b9\u5230\u7ebf\u6bb5\u7684\u8ddd\u79bb","text":"<p>\u6c42\u70b9\u5230\u7ebf\u6bb5\u7684\u8ddd\u79bb\u5c31\u8981\u5148\u5224\u65ad\u70b9\u548c\u7ebf\u6bb5\u7684\u4f4d\u7f6e\u5173\u7cfb\uff0c\u624d\u80fd\u8ba1\u7b97\u70b9\u5230\u7ebf\u6bb5\u7684\u8ddd\u79bb\u3002</p>"},{"location":"Math/Geometry/2DGeometry/2D/#_12","title":"\u70b9\u4e0e\u7ebf\u6bb5\u7684\u4f4d\u7f6e\u5173\u7cfb","text":"<p>\u9996\u5148\u6211\u4eec\u8bbe\u4e00\u4e2a\u70b9 \\(p\\) \u548c\u4e00\u4e2a\u7ebf\u6bb5 \\(s_{a,b}\\) \uff0c\u5176\u4e2d \\(a,b\\) \u662f\u7ebf\u6bb5\u7684\u7aef\u70b9\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u5c06\u70b9\u548c\u7ebf\u6bb5\u7684\u4f4d\u7f6e\u5173\u7cfb\u5206\u4e3a\u4ee5\u4e0b\u56db\u79cd\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5411\u91cf\u7684\u70b9\u79ef\u53c9\u79ef\u6765\u5224\u65ad\u5177\u4f53\u4f4d\u7f6e\u5173\u7cfb\uff1a</p> <p>\u6211\u4eec\u5f88\u5bb9\u6613\u53d1\u73b0\u5f53\u70b9\u5728 \\(3\uff0c4\\) \u533a\u57df\u65f6\uff0c\u70b9\u548c\u7ebf\u6bb5\u7684\u5939\u89d2\u603b\u662f\u6709\u4e00\u4e2a\u949d\u89d2(\\(\\angle pab\\space or \\space \\angle pba\\))\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8ba1\u7b97\u8fd9\u4e24\u4e2a\u89d2\u7684 \\(\\cos\\) \u503c\u7684\u6b63\u8d1f\u6765\u5224\u65ad\u4ed6\u4eec\u4e2d\u662f\u5426\u6709\u949d\u89d2\u3002\u4f59\u5f26\u503c\u8ba1\u7b97\u516c\u5f0f\u53ef\u4ee5\u7531\u5411\u91cf\u70b9\u79ef\u63a8\u5bfc\u51fa\u6765\uff1a</p> \\[ \\cos{\\theta}=\\frac{\\vec{ab}\\cdot \\vec{ap}}{|\\vec{ab}||\\vec{ap}|} \\] <p>\u5e94\u4e3a\u4e24\u4e2a\u5411\u91cf\u7684\u6a21\u7684\u4e58\u79ef\u4e00\u5b9a\u4e3a\u6574\u6570\uff0c\u6240\u4ee5\u53ea\u9700\u5224\u65ad\u4e24\u4e2a\u5411\u91cf\u70b9\u79ef\u7684\u6b63\u8d1f\u3002</p> <p>\u5224\u65ad\u5b8c\u4f59\u5f26\u6b63\u8d1f\u540e\uff0c\u5982\u679c\u4e24\u4e2a\u89d2\u90fd\u662f\u9510\u89d2\uff0c\u5219\u70b9\u5c31\u53ef\u80fd\u5728 \\(1\\) \u6216 \\(2\\) \u533a\u57df\uff0c\u8fd9\u65f6\u6211\u4eec\u5c31\u8981\u5224\u65ad \\(\\angle{pab}\\) \u662f\u6b63\u89d2\u8fd8\u662f\u8d1f\u89d2\uff0c\u4e5f\u5c31\u662f\u5224\u65ad \\(\\sin{\\theta}\\) \u7684\u6b63\u8d1f\u3002\u6211\u4eec\u901a\u8fc7\u5411\u91cf\u53c9\u79ef\u53ef\u4ee5\u63a8\u5bfc\u51fa\u6b63\u5f26\u7684\u8ba1\u7b97\u516c\u5f0f\uff1a</p> \\[ \\sin{\\theta}=\\frac{\\vec{a}\\times \\vec{b}}{|\\vec{a}||\\vec{b}|} \\] <p>\u548c\u4f59\u5f26\u7c7b\u4f3c\u7684\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8ba1\u7b97\u4e24\u4e2a\u5411\u91cf\u7684\u53c9\u79ef\u7684\u7ed3\u679c\u7684\u6b63\u8d1f\u5373\u53ef\u3002\u6b63\u6570\u5c31\u5728 \\(1\\) \u533a\u57df\uff0c\u8d1f\u6570\u5728 \\(2\\) \u533a\u57df\uff0c\u4e3a \\(0\\) \u5219\u5728\u7ebf\u6bb5\u4e0a\u3002</p>"},{"location":"Math/Geometry/2DGeometry/2D/#_13","title":"\u6c42\u70b9\u5230\u7ebf\u6bb5\u7684\u8ddd\u79bb","text":"<p>\u5224\u65ad\u5b8c\u70b9\u548c\u7ebf\u6bb5\u7684\u4f4d\u7f6e\u5173\u7cfb\u4e4b\u540e\uff0c\u8ba1\u7b97\u70b9\u5230\u7ebf\u6bb5\u7684\u8ddd\u79bb\u5c31\u5f88\u7b80\u5355\u4e86\u3002</p> <p>\u5f53\u70b9\u5728\\(3\uff0c4\\)\u533a\u57df\u65f6\uff0c\u70b9\u5230\u7ebf\u6bb5\u7684\u8ddd\u79bb\u5c31\u662f\u5230\u5176\u7aef\u70b9\u7684\u8ddd\u79bb\uff0c\u5728\\(1\uff0c2\\)\u533a\u57df\u65f6\uff0c\u70b9\u5230\u7ebf\u6bb5\u7684\u8ddd\u79bb\u5c31\u662f\u5230\u5bf9\u5e94\u76f4\u7ebf\u7684\u8ddd\u79bb\u3002\u5957\u7528\u4e0a\u6587\u7684\u516c\u5f0f\u5373\u53ef\u3002</p> <pre><code>// \u70b9\u5230\u7ebf\u6bb5\u7684\u8ddd\u79bb\n// a,b\u7ebf\u6bb5\u4e24\u7aef\u70b9\ndouble Point::disSeg(const Point &amp;a, const Point &amp;b) const\n{\n    // \u5224\u65ad\u70b9\u548c\u7ebf\u6bb5\u7684\u4f4d\u7f6e\u5173\u7cfb\n    if ((((*this) - a) | (b - a)) &lt;= -eps || (((*this) - b) | (a - b)) &lt;= -eps)\n        return min(disPoint(a), disPoint(b));\n    return disline(a, b);\n}\n</code></pre>"},{"location":"Math/Geometry/2DGeometry/2D/#_14","title":"\u5229\u7528\u5411\u91cf\u6c42\u4e09\u89d2\u5f62\u9762\u79ef","text":"<p>\u6211\u4eec\u4e86\u89e3\u7684\u4e09\u89d2\u5f62\u9762\u79ef\u516c\u5f0f\u6709</p> \\[ \\begin{cases} s=\\frac{ah}{2} \\\\  s=\\frac{ab\\sin \\theta }{2}\\\\ s=\\sqrt[]{p(p-a)(p-b)(p-c)} ,(p=\\frac{a+b+c}{2} )   \\end{cases} \\] <p>\u800c\u5f53\u7ed9\u5b9a\u4e09\u4e2a\u9876\u70b9\u5750\u6807\\(a=(x_1,y_1),b=(x_2,y_2),b=(x_3,y_3)\\)\uff0c\u6c42\u4e09\u89d2\u5f62\u9762\u79ef\uff0c\u5bf9\u8ba1\u7b97\u673a\u800c\u8a00\u4e0b\u9762\u8fd9\u4e2a\u516c\u5f0f\u662f\u6700\u5408\u9002\u7684\uff1a</p> \\[ s=\\frac{(x_2-x_1)(y_3-y_1)-(y_2-y_1)(x_3-x_1)}{2} \\] <p>\u4f17\u6240\u5468\u77e5\uff0c\u8fd9\u4e2a\u516c\u5f0f\u662f\u7531\u5411\u91cf\u53c9\u4e58\u7684\u6765\u7684\uff0c\u5373\u6211\u4eec\u6c42\u51fa\u5411\u91cf\\(\\vec{ab}\uff0c\\vec{ac}\\)\uff0c\u4e8c\u7ef4\u5411\u91cf\u53c9\u4e58\u7684\u6a21\u7684\u662f\u4ee5\\(ab\uff0cac\\)\u4e3a\u4e24\u6761\u8fb9\uff0c\u6240\u56f4\u6210\u7684\u5e73\u884c\u56db\u8fb9\u5f62\u9762\u79ef\uff0c\u6211\u4eec\u6c42\u5f97\\(ab\uff0cac\\)\uff0c\u4ee4\u5176\u53d6\u4e8c\u5206\u4e4b\u4e00\u5373\u53ef\u5f97\u5230\u4e0a\u5f0f</p> <pre><code>double triangle(Point &amp;a, Point &amp;b, Point &amp;c) \n{ \n    return (b - a) * (b - c) / 2.0; \n} // \u6c42\u4e09\u89d2\u5f62\u9762\u79ef\n</code></pre>"},{"location":"Math/Geometry/2DGeometry/2D/#_15","title":"\u7ebf","text":""},{"location":"Math/Geometry/2DGeometry/2D/#_16","title":"\u76f4\u7ebf","text":"<p>\u5bf9\u4e8e\u76f4\u7ebf\uff0c\u6211\u4eec\u4e00\u822c\u8bb0\u5f55\u5176\u65b9\u7a0b\uff0c\u5982\u4e00\u822c\u5f0f \\(Ax+By+C=0\\) \uff0c\u659c\u622a\u5f0f \\(y=kx+b\\) \u7b49\uff0c\u9488\u5bf9\u9898\u76ee\u6240\u9700\u91c7\u53d6\u4e0d\u540c\u7684\u5f62\u5f0f\u3002</p> <p>\u66f4\u7b80\u4fbf\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u8bb0\u5f55\u76f4\u7ebf\u4e0a\u7684\u4e24\u70b9\uff0c\u8fd9\u6837\u5728\u8ba1\u7b97\u4e00\u4e9b\u4f4d\u7f6e\u5173\u7cfb\u65f6\u66f4\u65b9\u4fbf\u3002</p>"},{"location":"Math/Geometry/2DGeometry/2D/#_17","title":"\u6c42\u4e24\u76f4\u7ebf\u4ea4\u70b9","text":"<p>\u9996\u5148\u6211\u4eec\u8981\u5224\u65ad\u4e24\u76f4\u7ebf\u662f\u5426\u76f8\u4ea4\uff0c\u56e0\u4e3a\u6211\u4eec\u8bb0\u5f55\u7684\u662f\u76f4\u7ebf\u4e0a\u4e24\u4e2a\u70b9\uff0c\u5f88\u5bb9\u6613\u7b97\u51fa\u5176\u65b9\u5411\u5411\u91cf\uff0c\u7b97\u51fa\u65b9\u5411\u5411\u91cf\u540e\u53d6\u53c9\u4e58\u7684\u6a21\uff0c\u5982\u679c\u4e3a \\(0\\) \u5219\u4e24\u76f4\u7ebf\u5e73\u884c\u3002</p> <pre><code>// \u5224\u65ad\u76f4\u7ebf\u662f\u5426\u5e73\u884c\nbool line::is_parallel(const line&amp; b)const\n{\n    return abs(dVec * b.dVec) &lt;= eps;\n}\n</code></pre> <p>\u786e\u5b9a\u4e24\u76f4\u7ebf\u76f8\u4ea4\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8ba1\u7b97\u4ea4\u70b9\u4e86\u3002</p> <p>\u8ba1\u7b97\u8fc7\u7a0b\u9700\u8981\u521d\u4e2d\u4e09\u89d2\u5f62\u6b63\u5f26\u5b9a\u7406\u7684\u77e5\u8bc6\u3002</p> \\[ \\frac{a}{\\sin{A}}=\\frac{b}{\\sin{B}}=\\frac{c}{\\sin{C}} \\] <p>\u9996\u5148\u6211\u4eec\u7528 \\(\\vec{a}\\) \u8868\u793a\u5411\u91cf \\(\\vec{pC}\\) , \u7528 \\(\\vec{b}\\) \u8868\u793a\u65b9\u5411\u5411\u91cf \\(\\vec{pD}\\) \u3002</p> <p>\u4f46\u662f\u8fd9\u6837\u597d\u50cf\u770b\u4e0d\u51fa\u4ec0\u4e48 \uff0c\u8fde\u63a5 \\(D,C\\) \u4e24\u70b9\u3002</p> <p>\u6211\u4eec\u7528\u6b63\u5f26\u5b9a\u4e49\u53ef\u4ee5\u5199\u51fa\u4e0b\u5f0f\uff1a</p> \\[ \\frac{|\\vec{a}|}{\\sin{\\theta}}=\\frac{|\\vec{c}|}{\\sin{\\beta}}\\\\ ~\\\\ |\\vec{a}|=\\left | \\frac{|\\vec{c}|\\sin{\\theta}}{\\sin{\\beta}} \\right |  \\] <p>\\(\\vec{c}\\) \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 \\(D\uff0cC\\) \u4e24\u70b9\u5f97\u5230\uff0c \\(\\sin{\\theta}\\) \u548c \\(\\sin{\\beta}\\) \u89d2\u53ef\u4ee5\u901a\u8fc7\u4e24\u76f4\u7ebf\u65b9\u5411\u5411\u91cf \\(\\vec{AC},\\vec{BD}\\) \u548c \\(\\vec{c}\\) \u53c9\u4e58\u5f97\u5230\uff1a</p> \\[ \\sin{\\theta}=\\frac{\\vec{BD}\\times \\vec{c}}{|\\vec{BD}||\\vec{c}|}\\\\ \\] \\[ \\sin{\\beta}=\\frac{\\vec{AC}\\times \\vec{BD}}{|\\vec{AC}||\\vec{BD}|} \\] <p>\u6211\u4eec\u5c06\u4e24\u4e2a\u6b63\u5f26\u503c\u5e26\u5165\u4e0a\u5f0f\uff0c\u5316\u7b80\u5f97\uff1a</p> \\[ |\\vec{a}|= |\\vec{AC}| \\cdot \\frac{| \\vec{BD}\\times \\vec{c}  |}{| \\vec{AC}\\times \\vec{BD} |}  \\] <p>\u4e3a\u4e86\u65b9\u4fbf\u8868\u793a\u6211\u4eec\u4ee4 $K=\\frac{| \\vec{BD}\\times \\vec{c}  |}{| \\vec{AC}\\times \\vec{BD} |} $\uff0c\u6240\u4ee5\uff1a</p> \\[ |\\vec{a}|=|\\vec{AC}|\\cdot K \\] <p>\u5176\u4e2d \\(\\vec{a}\\) \u548c \\(\\vec{AC}\\) \u662f\u5e73\u884c\u7684\uff0c\u90a3\u4e48 \\(\\vec{a}\\) \u53ef\u4ee5\u901a\u8fc7 \\(\\vec{AC}\\) \u6570\u4e58\u5f97\u5230\uff1a</p> \\[ \\vec{a} = K\\cdot \\vec{AC} \\] <p>\u77e5\u9053 \\(\\vec{a}\\) \u540e\uff0c\u90a3\u4e48\u4ea4\u70b9\u5c31\u76f8\u5f53\u4e8e\u70b9 \\(C\\) \u6cbf\u7740 \\(\\vec{a}\\) \u79fb\u52a8 \\(|\\vec{a}|\\) \u7684\u957f\u5ea6\uff0c\u5c31\u5f97\u5230\u4ea4\u70b9 \\(p\\)\u3002</p> <p>\u6cbf\u7740\u5411\u91cf\u79fb\u52a8\uff0c\u6211\u53ef\u4ee5\u8f6c\u5316\u6210\u5411\u91cf\u52a0\u6cd5\uff0c\u6211\u4eec\u628a\u70b9 \\(p\\)\uff0c\u770b\u6210\u5411\u91cf \\(\\vec{Op}\\)\uff0c\u8fd9\u91cc \\(O\\) \u662f\u539f\u70b9\uff0c\u5427\u70b9 \\(C\\) \u770b\u6210 \\(\\vec{OC}\\)\uff0c\u90a3\u4e48 \\(\\vec{Op}\\) \u53ef\u4ee5\u5199\u4e3a\uff1a</p> \\[ \\vec{Op}=\\vec{OC}+\\vec{a}\\\\ \\] \\[ \\vec{Op}=\\vec{OC}+K\\cdot \\vec{AC} \\] <pre><code>// \u6c42\u4e24\u76f4\u7ebf\u4ea4\u70b9\nPoint line::get_intersection(const line&amp; b) const\n{\n    // \u76f4\u7ebf\u5e73\u884c\u8fd4\u56de\u65e0\u7a77\u5927\n    if(is_parallel(b))\n        return {INT_MAX,INT_MAX};\n\n    // \u5e26\u5165\u516c\u5f0f\n    Point c = x2 - b.x2;\n    double K = (b.dVec * c) / (dVec * b.dVec);\n    Point res = x2 + dVec * K;\n    return res;\n}\n</code></pre>"},{"location":"Math/Geometry/2DGeometry/2D/#_18","title":"\u7ebf\u6bb5","text":"<p>\u548c\u5b58\u50a8\u76f4\u7ebf\u7684\u65b9\u5f0f\u4e00\u6837\u3002</p>"},{"location":"Math/Geometry/2DGeometry/2D/#_19","title":"\u6c42\u7ebf\u6bb5\u7684\u4ea4\u70b9","text":"<p>\u6c42\u7ebf\u6bb5\u4ea4\u70b9\u5c31\u8981\u5224\u65ad\u5b83\u4eec\u7aef\u70b9\u4e4b\u95f4\u7684\u4f4d\u7f6e\u5173\u7cfb\u3002</p> <ul> <li>\u6240\u5728\u76f4\u7ebf\u76f8\u4ea4</li> </ul> <p>\u8fd9\u91cc\u6211\u4eec\u5148\u4e0d\u8003\u8651\u5e73\u884c\u7684\u60c5\u51b5\u3002\u4e24\u4e2a\u4e0d\u5e73\u884c\u7684\u7684\u7ebf\u6bb5\u5982\u679c\u6709\u4ea4\u70b9\uff0c\u90a3\u4e48\u4efb\u610f\u4e00\u4e2a\u7ebf\u6bb5\u7684\u4e24\u4e2a\u7aef\u70b9\u4e00\u5b9a\u5728\u53e6\u4e00\u4e2a\u7ebf\u6bb5\u7684\u4e24\u4fa7\uff0c\u5982\u4e0b\u56fe\uff1a</p> <p>\u90a3\u4e48\u5c31\u8981\u8ba1\u7b97\u4e24\u5bf9\u53c9\u4e58 \\(\\vec{AB}\\times\\vec{AC}\uff0c\\vec{AB}\\times \\vec{AD}\\) \u548c \\(\\vec{CD}\\times\\vec{CA}\uff0c\\vec{CD}\\times\\vec{CB}\\) \uff0c\u5982\u679c\u7b2c\u4e00\u5bf9\u53c9\u4e58\u662f\u4e00\u6b63\u4e00\u8d1f\uff0c\u90a3\u4e48\u8bf4\u660e \\(C,D\\) \u5728 \\(AB\\) \u76f4\u7ebf\u7684\u4e24\u7aef\uff0c\u7b2c\u4e8c\u5bf9\u540c\u7406\u3002</p> <p>\u8fd9\u91cc\u7684 \\(\\vec{AB},\\vec{CD}\\) \u5c31\u662f\u4e24\u4e2a\u7ebf\u6bb5\u7684\u65b9\u5411\u5411\u91cf\uff0c\u8ba1\u7b97\u662f\u62ff\u65b9\u5411\u5411\u91cf\u66ff\u6362\u5373\u53ef\u3002</p> <p>\u5982\u679c\u4e24\u7ebf\u6bb5\u6ee1\u8db3\u8fd9\u4e2a\u60c5\u51b5\uff0c\u90a3\u4e48\u76f4\u63a5\u8c03\u7528\u76f4\u7ebf\u4ea4\u70b9\u8ba1\u7b97\u5373\u53ef\u3002</p> <ul> <li>\u6240\u5728\u76f4\u7ebf\u5e73\u884c</li> </ul> <p>\u5176\u6b21\u5c31\u8003\u8651\u5e73\u884c\u7684\u60c5\u51b5\uff0c\u4e00\u822c\u5e73\u884c\u662f\u6ca1\u6709\u4ea4\u70b9\u7684\uff0c\u4f46\u662f\u8981\u8003\u8651\u5171\u7ebf\u7684\u60c5\u51b5\u3002\u8fd9\u91cc\u6211\u4eec\u89c4\u5b9a\u5f53\u4e24\u4e2a\u7ebf\u6bb5\u91cd\u5408\u65f6\uff0c\u8fd4\u56de \\(y\\)\u503c\u6700\u5c0f\u7684\uff0c\\(y\\) \u503c\u76f8\u7b49\u5c31\u8fd4\u56de \\(x\\) \u503c\u6700\u5c0f\u7684\u3002</p> <p>\u5171\u7ebf\u53c8\u5206\u4e3a\u4e0b\u9762\u51e0\u79cd\u60c5\u51b5\uff1a</p> <p>\u6211\u4eec\u89c2\u5bdf\u53d1\u73b0\uff0c\u8fd9\u65f6\u6211\u4eec\u53ea\u8981\u5224\u65ad\u7ebf\u6bb5 \\(AB\\) \u7684\u4e0a\u7aef\u70b9 \\(B\\) \u548c\u7ebf\u6bb5 \\(CD\\) \u7684\u4e0b\u7aef\u70b9 \\(C\\) \u7684\u4f4d\u7f6e\u5173\u7cfb\u5373\u53ef\u3002</p> <p>\u5982\u679c \\(C\\) \u4f4d\u4e8e \\(B\\) \u7684\u4e0b\u7aef\uff0c\u5219\u8bf4\u660e\u4e24\u4e2a\u7ebf\u6bb5\u662f\u6709\u91cd\u5408\u7684\u3002\u5426\u5219\u5c31\u662f\u65e0\u91cd\u5408\u7684\u3002</p> <p>\u5bf9\u4e8e\u4e24\u4e2a\u70b9\u4f4d\u7f6e\u7684\u6bd4\u8f83\u6211\u4eec\u53ef\u4ee5\u91cd\u8f7d \\(&lt;\\) \u64cd\u4f5c\u7b26</p> <pre><code>// \u91cd\u8f7d &lt; \u65b9\u4fbf\u627e\u7ebf\u6bb5\u4ea4\u70b9\nbool operator&lt;(const Point &amp;b) const\n{\n    if (y == b.y)\n        return x &lt; b.x;\n    return y &lt; b.y;\n}\n</code></pre> <p>\u5982\u6b64\u91cd\u8f7d\u5982\u679c\u4e24\u4e2a\u7ebf\u6bb5\u90fd\u662f\u4e0e \\(x\\) \u8f74\u5e73\u884c\u91cd\u5408\u4e5f\u53ef\u4ee5\u627e\u51fa\u6b63\u786e\u7684\u7aef\u70b9\u3002</p> <pre><code>Point mi = max(min(x1, x2), min(b.x1, b.x2));\nPoint ma = min(max(x1, x2), max(b.x1, b.x2));\n// \u5224\u65ad\u4e24\u7ebf\u6bb5\u662f\u5426\u91cd\u5408\nif (ma.x &gt;= mi.x &amp;&amp; ma.y &gt;= mi.y)\n    return mi;\n</code></pre> <p>\u53c2\u8003\u6587\u7ae0\uff1a</p> <p>Oi Wiki</p>"},{"location":"Math/Geometry/2DGeometry/Problem/","title":"Exercise","text":"\u9898\u76ee \u96be\u5ea6 \u77e5\u8bc6 HDU7324 \u66b4\u529b+\u70b9\u5230\u7ebf\u6bb5\u8ddd\u79bb LC.16.03 \u56f0\u96be \u7ebf\u6bb5\u4ea4\u70b9"},{"location":"Math/Geometry/ConvexHull/CH/","title":"\u51f8\u5305","text":""},{"location":"Math/Geometry/ConvexHull/CH/#_1","title":"\u5b9a\u4e49","text":"<p>\u51f8\u591a\u8fb9\u5f62\uff1a\u51f8\u591a\u8fb9\u5f62\u662f\u6307\u6240\u6709\u5185\u89d2\u5927\u5c0f\u90fd\u5728 \\([0,\\pi]\\) \u8303\u56f4\u5185\u7684 \u7b80\u5355\u591a\u8fb9\u5f62\u3002</p> <p>\u51f8\u5305\uff1a\u5728\u5e73\u9762\u4e0a\u80fd\u5305\u542b\u6240\u6709\u7ed9\u5b9a\u70b9\u7684\u6700\u5c0f\u51f8\u591a\u8fb9\u5f62\u53eb\u505a\u51f8\u5305\u3002</p> <p>\u66f4\u597d\u7406\u89e3\u7684\uff0c\u5728\u684c\u5b50\u4e0a\u9489\u4e0a\u82e5\u5e72\u9489\u5b50\uff0c\u62ff\u4e00\u4e2a\u6a61\u76ae\u7b4b\u5c06\u6240\u6709\u9489\u5b50\u56f4\u8d77\u6765\u7684\u56fe\u5f62\u5c31\u662f\u51f8\u5305\u3002</p>"},{"location":"Math/Geometry/ConvexHull/CH/#_2","title":"\u5355\u8c03\u6808\u6c42\u51f8\u5305","text":"<p>\u9996\u5148\u5bf9\u70b9\u8fdb\u884c\u6392\u5e8f\uff0c\u6309\u6a2a\u5750\u6807\u6392\u5e8f\uff0c\u5982\u679c\u6a2a\u5750\u6807\u76f8\u7b49\u518d\u6309\u7eb5\u5750\u6807\u6392\u5e8f\u3002</p> <p>\u663e\u7136\u6392\u5e8f\u540e\u6700\u5c0f\u7684\u5143\u7d20\u548c\u6700\u5927\u7684\u5143\u7d20\u4e00\u5b9a\u5728\u51f8\u5305\u4e0a\u3002\u800c\u4e14\u56e0\u4e3a\u662f\u51f8\u591a\u8fb9\u5f62\uff0c\u6211\u4eec\u5982\u679c\u4ece\u4e00\u4e2a\u70b9\u51fa\u53d1\u9006\u65f6\u9488\u8d70\uff0c\u8f68\u8ff9\u603b\u662f\u5de6\u62d0\u7684\uff0c\u4e00\u65e6\u51fa\u73b0\u53f3\u62d0\uff0c\u5c31\u8bf4\u660e\u8fd9\u4e00\u6bb5\u4e0d\u5728\u51f8\u5305\u4e0a\u3002\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u5355\u8c03\u6808\u6765\u7ef4\u62a4\u4e0a\u4e0b\u51f8\u58f3\u3002</p> <p>\u56e0\u4e3a\u4ece\u5de6\u5411\u53f3\u770b\uff0c\u4e0a\u4e0b\u51f8\u58f3\u6240\u65cb\u8f6c\u7684\u65b9\u5411\u4e0d\u540c\uff0c\u4e3a\u4e86\u8ba9\u5355\u8c03\u6808\u8d77\u4f5c\u7528\uff0c\u6211\u4eec\u9996\u5148\u5347\u5e8f\u679a\u4e3e\u6c42\u51fa\u4e0b\u51f8\u58f3\uff0c\u7136\u540e\u964d\u5e8f\u6c42\u51fa\u4e0a\u51f8\u58f3\u3002</p> <p>\u800c\u5de6\u62d0\u8fd8\u662f\u53f3\u62d0\u53ef\u4ee5\u901a\u8fc7\u5411\u91cf\u8ba1\u7b97\u5f97\u51fa\u3002</p> <p>\u5f53 \\(\\overrightarrow{s_1s_2}\\times \\overrightarrow{s_1p} \\le 0\\) \u65f6\uff0c\u8bf4\u660e \\(p\\) \u5728\u76f4\u7ebf \\(s_1s_2\\) \u4e0b\u65b9\uff0c\u6b64\u65f6\u5c31\u5e94\u8be5\u5c06 \\(s_2\\) \u4ece\u6808\u9876\u5f39\u51fa\u3002</p> <p>\u5f53 \\(\\overrightarrow{s_1s_2}\\times \\overrightarrow{s_1p} &gt; 0\\) \u65f6\uff0c\u5c06 \\(p\\) \u76f4\u63a5\u52a0\u5165\u5230\u6808\u4e2d\u5373\u53ef\u3002</p> <p>\u5e76\u4e14\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u7528\u6570\u7ec4 \\(f\\) \u6807\u8bb0\u5728\u51f8\u5305\u4e0a\u7684\u70b9\uff0c\\(f[i] = 1\\) \u4ee3\u8868\u70b9 \\(p[i]\\) \u5728\u51f8\u5305\u4e0a\uff0c\\(f[i] = 0\\) \u5219\u4e0d\u5728\u3002</p> <p>\u4e0b\u9762\u662f\u6c42\u51f8\u5305\u8bb0\u51f8\u5305\u5468\u957f\u7684\u6a21\u677f\uff0c\\(Point\\) \u7684\u5b9e\u73b0\u4e0e\u4e0a\u8282\u4ecb\u7ecd\u7684\u76f8\u540c\uff1a</p> <pre><code>void solve()\n{\n    int n;\n    cin &gt;&gt; n;\n    vector&lt;Point&gt; p(n);\n    for(int i = 0;i &lt; n;++i)\n        cin &gt;&gt; p[i].x &gt;&gt; p[i].y;\n    sort(p.begin(),p.end());\n    vector&lt;int&gt; st(n);\n    vector&lt;bool&gt; f(n);\n    int tp = -1;\n    for(int i = 0;i &lt; n;++i)\n    {\n        while(tp &gt; 0 and \n            (p[st[tp]] - p[st[tp - 1]]) * (p[i] - p[st[tp - 1]]) &lt;= 0)\n            f[st[tp--]] = 0;\n        f[i] = 1;\n        st[++tp] = i;\n    }\n    int cnt = tp;   // \u8bb0\u5f55\u4e0b\u51f8\u58f3\u70b9\u6570\u91cf\n    for(int i = n - 1;i &gt;= 0;--i)\n    {\n        while(tp &gt; cnt and \n            (p[st[tp]] - p[st[tp - 1]]) * (p[i] - p[st[tp - 1]]) &lt;= 0)\n            f[st[tp--]] = 0;\n        f[i] = 1;\n        st[++tp] = i;\n    }\n    double s = p[st[0]].disPoint(p[st[tp - 1]]);\n    for(int i = 0;i &lt; tp - 1;++i)\n        s += p[st[i]].disPoint(p[st[i + 1]]);\n    printf(\"%.2lf\\n\",s);\n}\n</code></pre>"},{"location":"Math/Geometry/ConvexHull/CH/#_3","title":"\u7ec3\u4e60","text":"<p>P2742 [USACO5.1] \u5708\u5976\u725bFencing the Cows /\u3010\u6a21\u677f\u3011\u4e8c\u7ef4\u51f8\u5305</p>"},{"location":"Math/NumberTheory/Fd/","title":"\u6570\u8bba\u57fa\u7840","text":""},{"location":"Math/NumberTheory/Fd/#_2","title":"\u6574\u9664\u6027\u4e0e\u7ea6\u6570","text":"<p>\u6574\u9664\u7684\u5b9a\u4e49\uff1a\u8bbe \\(a,b\\in\\mathbf{Z}\uff0ca\\ne 0\\)\u3002\u5982\u679c$ \\exists q\\in\\mathbf{Z}\\(\uff0c\u4f7f\u5f97 \\(b=aq\\)\uff0c\u90a3\u4e48\u5c31\u8bf4\\) b\\(\u53ef\u88ab\\)a$ \u6574\u9664\uff0c\u8bb0\u4f5c\\(a\\mid b\\)\uff0c\\(b\\)\u4e0d\u88ab\\(a\\)\u6574\u9664\u8bb0\u4f5c\\(a\\nmid b\\)</p> <p>\u5982\u679c\\(d\\mid a\\)\uff0c\u4e14\\(d\\ge0\\)\uff0c\u5219\\(d\\)\u662f\\(a\\)\u7684\u7ea6\u6570\u3002\u4efb\u4f55\u6b63\u6574\u6570\\(a\\)\u5747\u53ef\u88ab\u5e73\u51e1\u7ea6\u6570\\(1\\)\u548c\u5176\u81ea\u8eab\\(a\\)\u6240\u6574\u9664\uff0c\u6574\u6570\\(a\\)\u7684\u975e\u5e73\u51e1\u7ea6\u675f\u79f0\u4e3a\\(a\\)\u7684\u56e0\u5b50\u3002\\(eg\uff1a20\\)\u7684\u56e0\u5b50\u4e3a2\u30014\u30015\u300110$</p>"},{"location":"Math/NumberTheory/Fd/#_3","title":"\u7d20\u6570\u4e0e\u5408\u6570","text":"<p>\u5982\u679c\u4e00\u4e2a\u6574\u6570\\(a&gt;0\\)\u4e14\u53ea\u80fd\u88ab\u5e73\u51e1\u7ea6\u6570\u548c\u5176\u81ea\u8eab\u6240\u6574\u9664\uff0c\uff0c\u5219\u8fd9\u4e2a\u6570\u662f\u7d20\u6570\u3002\u4e00\u4e2a\u6574\u6570\\(a&gt;1\\)\u4e14\u4e0d\u662f\u7d20\u6570\uff0c\u90a3\u4e48\u5b83\u5c31\u662f\u5408\u6570\u3002\u79f0\u6574\u6570\u4e3a\u57fa\u672c\u5355\u4f4d\uff0c\u5e76\u4e14\u5b83\u65e2\u4e0d\u662f\u7d20\u6570\u4e5f\u4e0d\u662f\u5408\u6570\u3002</p>"},{"location":"Math/NumberTheory/Fd/#_4","title":"\u9664\u6cd5\u5b9a\u7406\u3001\u4f59\u6570\u548c\u7b49\u6a21","text":"<p>\u9664\u6cd5\u5b9a\u7406\uff1a\u5bf9\u4e8e\u4efb\u610f\u6574\u6570\\(a\\)\u548c\u4efb\u610f\u6b63\u6574\u6570\\(n\\)\uff0c\u5b58\u5728\u552f\u4e00\u6574\u6570\\(q\\)\u548c\\(r\\)\uff0c\u6ee1\u8db3\\(0\\le r&lt;n\\)\u4e14\\(a=qn+r\\)\u3002 \u79f0\\(q=\\left \\lfloor a/n \\right \\rfloor\\)\u4e3a\u9664\u6cd5\u7684\u5546\uff0c\u503c\\(r=a\\space mod \\space b\\)\u4e3a\u9664\u6cd5\u7684\u4f59\u6570\u3002 \u6211\u4eec\u6839\u636e\u6574\u6570\u6a21\\(n\\)\u7684\u4f59\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u6240\u6709\u6574\u6570\u5212\u5206\u6210\\(n\\)\u4e2a\u7b49\u4ef7\u7c7b\u3002\u5305\u542b\u6574\u6570\\(a\\)\u6a21\\(n\\)\u7b49\u4ef7\u7c7b\u4e3a</p> \\[ [a]_n=\\{ a+kn:k\\in Z\\} \\] <p>\u4f8b\u5982\uff0c\\([3]_7=\\{\\dots ,-11,-4,3,10,17,\\dots\\}\\)\uff0c\u8fd9\u4e2a\u96c6\u5408\u540c\u65f6\u53ef\u4ee5\u8868\u793a\u4e3a\\([-4]_7\\)\u548c\\([10]_7\\),\\(a \\in [b]_n\\)\u548c\\(a\\equiv b(mod\\space n)\\)\uff0c\u662f\u7b49\u4ef7\u7684\u3002\u6240\u6709\u8fd9\u7c7b\u7b49\u4ef7\u7c7b\u7684\u96c6\u5408\u662f\uff1a</p> \\[ Z_n=\\{[a]_n \uff1a0\\le a\\le n-1\\} \\]"},{"location":"Math/NumberTheory/Fd/#_5","title":"\u516c\u7ea6\u6570\u548c\u6700\u5927\u516c\u7ea6\u6570","text":"<p>\u5982\u679c\\(d\\)\u662f\\(a\\)\u7684\u7ea6\u6570\u5e76\u4e14\u4e5f\u662f\\(b\\)\u7684\u7ea6\u6570\uff0c\u5219\\(d\\)\u662f\\(a\u3001b\\)\u7684\u516c\u7ea6\u6570\u3002 \u516c\u7ea6\u6570\u7684\u4e00\u6761\u91cd\u8981\u6027\u8d28\u662f\uff1a</p> \\[ d\\mid a\u4e14d\\mid b\uff0c\u5219d\\mid (a+b)\u4e14d\\mid (a-b) \\] <p>\u66f4\u4e00\u822c\u7684\u5bf9\u4efb\u610f\u6574\u6570\\(x\\)\u548c\\(y\\)\uff0c\u6709\uff1a</p> \\[ d\\mid a\u4e14d\\mid b\uff0c\u5219d\\mid (ax+by) \\] <p>\u5e76\u4e14\u5982\u679c\\(a\\mid b\\)\uff0c\u90a3\u4e48\\(\\left | a \\right |\\le \\left | b \\right |\\)\uff0c\u6216\u8005\\(b=0\\),\u800c\u8fd9\u8bf4\u660e\uff1a</p> \\[ a\\mid b\u4e14b\\mid a\uff0c\u5219a=\\pm b \\] <p>\u516c\u7ea6\u6570\u4e2d\u6700\u5927\u7684\u79f0\u4e3a\u6700\u5927\u516c\u7ea6\u6570\uff0c\u8bb0\u4f5c\\(gcd(a,b)\\).\u5b9a\u4e49\\(gcd(0,0)=0\\)\uff0c\u90a3\u4e48\\(gcd\\)\u51fd\u6570\u6709\u4ee5\u4e0b\u6027\u8d28\uff1a - \\(gcd(a,b)=gcd(b,a)\\) - \\(gcd(a,b)=gcd(-a,b)\\) - \\(gcd(a,b)=gcd(|a|,|b|)\\) - \\(gcd(a,0)=|a|\\) - \\(gcd(a,ka)=|a|\\)</p>"},{"location":"Math/NumberTheory/Fd/#1","title":"\u5b9a\u74061","text":"<p>\u5982\u679c\u4efb\u610f\u6574\u6570\\(a\\)\u548c\\(b\\)\u6b65\u90fd\u4e3a\\(0\\)\uff0c\u5219\\(gcd(a,b)\\)\u662f\\(a\\)\u4e0e\\(b\\)\u7684\u7ebf\u6027\u7ec4\u5408\u96c6\\(\\{ax+by\uff1ax,y\\in Z\\}\\)\u4e2d\u7684\u6700\u5c0f\u6b63\u5143\u7d20\u3002</p>"},{"location":"Math/NumberTheory/Fd/#2","title":"\u5b9a\u74062","text":"<p>\u5bf9\u4efb\u610f\u6574\u6570\\(a\\)\u548c\\(b\\)\uff0c\u5982\u679c\\(d\\mid a\u4e14d\\mid b\uff0c\u5219d\\mid gcd(a,b)\\)</p>"},{"location":"Math/NumberTheory/Fd/#3","title":"\u5b9a\u74063","text":"<p>\u5bf9\u6240\u6709\u6574\u6570\\(a\\)\u548c\\(b\\)\u4ee5\u53ca\u4efb\u610f\u975e\u8d1f\u6574\u6570\\(n\\)\uff0c\u6709</p> \\[ gcd(an,bn)=n\\space gcd(a,b) \\]"},{"location":"Math/NumberTheory/Fd/#_6","title":"\u4e92\u8d28\u6570","text":"<p>\u5982\u679c\u4e24\u4e2a\u6574\u6570\\(a\\)\u548c\\(b\\)\u53ea\u6709\u516c\u7ea6\u6570\\(1\\)\uff0c\u5373\\(gcd(a,b)=1\\)\uff0c\u5219\\(a\u3001b\\)\u79f0\u4e3a\u4e92\u8d28\u6570.</p>"},{"location":"Math/NumberTheory/Fd/#4","title":"\u5b9a\u74064","text":"<p>\u5bf9\u4efb\u610f\u6574\u6570 \\(a\u3001b\\) \u548c\\(p\\)\uff0c\u5982\u679c\\(gcd(a,p)=1\\)\u4e14\\(gcd(b,p)=1\\)\uff0c\u5219\\(gcd(ab,p)=1\\)</p> <p>\u7531\u6b64\u53ef\u5f97\uff0c\u5bf9\u4e8e\u4efb\u610f\u6574\u6570\\(n_1,n_2,n_3\\dots n_k\\) \uff0c\u5982\u679c\u5bf9\u4efb\u610f\\(i\\ne j\\)\uff0c\u90fd\u6709\\(gcd(n_i,n_j)=1\\)\uff0c\u5219\u79f0\u6574\u6570 \\(n_1,n_2,n_3\\dots n_k\\)\u4e24\u4e24\u4e92\u8d28\u3002</p>"},{"location":"Math/NumberTheory/Fd/#_7","title":"\u552f\u4e00\u56e0\u5b50\u5206\u89e3\u5b9a\u7406","text":"<p>\u5408\u6570 \\(a\\) \u4ec5\u80fd\u4ee5\u4e00\u79cd\u65b9\u5f0f\u5199\u6210\u5982\u4e0b\u4e58\u79ef\u5f62\u5f0f\uff1a</p> \\[ a=P^{e_1}_1 P^{e_2}_2\\cdots P^{e_r}_r \\] <p>\u5176\u4e2d \\(P_i\\) \u4e3a\u7d20\u6570\uff0c\\(P_1&lt;P_2&lt;P_3\\cdots &lt;P_r\\)\uff0c\u4e14 \\(e_i\\) \u4e3a\u6b63\u6574\u6570\u3002</p>"},{"location":"Math/NumberTheory/Fd/#_8","title":"\u6a21\u8fd0\u7b97","text":"<p>\u5b9a\u4e49\uff1a\u8bbe \\(a,b\\in Z\\) \u4e14 \\(b&gt;0\\),\u5982\u679c \\(q,r\\in Z\\) \u6ee1\u8db3 \\(a=qb+r\\) \u4e14 \\(0\\le r&lt;b\\) \uff0c\\(a\\) \u6a21 \\(b\\) \u7b49\u4e8e \\(r\\) \u8bb0\u4f5c</p> \\[ a\\space mod \\space b=r \\] <ul> <li>\u8d1f\u6570\u53d6\u6a21\uff1a\u5c06 \\(a\\) \u4e0d\u65ad\u7684\u52a0\u4e0a \\(b\\) \u76f4\u5230\u7ed3\u679c\u5927\u4e8e \\(0\\) \uff0c\u8fd9\u4e2a\u7ed3\u679c\u5c31\u662f\u6a21\u8fd0\u7b97\u7684\u7ed3\u679c</li> </ul>"},{"location":"Math/NumberTheory/Fd/#_9","title":"\u6a21\u8fd0\u7b97\u7684\u6027\u8d28","text":"<ul> <li>\\(b\\mid a\\Leftrightarrow a\\space mod\\space b=0\\)</li> <li>\\((a+b)mod\\space n=(a\\space mod \\space n+b\\space mod\\space n)mod\\space n\\) </li> <li>\\((a-b)mod\\space n=(a\\space mod \\space n-b\\space mod\\space n)mod\\space n\\)</li> <li>\\((a\\times  b)mod\\space n=(a\\space mod \\space n\\times b\\space mod\\space n)mod\\space n\\)</li> <li>\u9664\u6cd5\u4e0d\u5177\u6709\u8fd9\u6837\u7684\u6027\u8d28</li> </ul>"},{"location":"Math/NumberTheory/Fd/#_10","title":"\u79ef\u6027\u51fd\u6570","text":""},{"location":"Math/NumberTheory/Fd/#_11","title":"\u5b9a\u4e49","text":"<p>\u6570\u8bba\u51fd\u6570\uff1a\u6307\u5b9a\u4e49\u57df\u4e3a\u6b63\u6574\u6570\u7684\u51fd\u6570\u3002\u6570\u8bba\u51fd\u6570\u4e5f\u53ef\u4ee5\u89c6\u4f5c\u4e00\u4e2a\u6570\u5217\u3002</p> <p>\u82e5\u51fd\u6570 \\(f(n)\\) \u6ee1\u8db3 \\(f(1) = 1\\) \u4e14\u5bf9\u4e8e\u4efb\u610f\u4e24\u4e2a\u4e92\u8d28\u7684\u6574\u6570 \\(a,b\\)\uff0c\u6709 \\(f(ab) = f(a)f(b)\\)\uff0c\u5219 \\(f(n)\\) \u4e3a\u79ef\u6027\u51fd\u6570\u3002</p> <p>\u82e5\u51fd\u6570 \\(f(n)\\) \u6ee1\u8db3 \\(f(1) = 1\\) \u4e14\u5bf9\u4e8e\u4efb\u610f\u4e24\u4e2a\u6574\u6570 \\(a,b\\)\uff0c\u6709 \\(f(ab) = f(a)f(b)\\)\uff0c\u5219 \\(f(n)\\) \u4e3a\u5b8c\u5168\u79ef\u6027\u51fd\u6570\u3002</p>"},{"location":"Math/NumberTheory/Fd/#_12","title":"\u6027\u8d28","text":"<p>\u82e5 \\(f(x)\\) \u548c \\(g(x)\\) \u90fd\u662f\u79ef\u6027\u51fd\u6570\uff0c\u5219\u4e00\u4e0b\u51fd\u6570 \\(h(x)\\) \u4e5f\u662f\u79ef\u6027\u51fd\u6570\uff1a</p> \\[ \\begin{matrix} h(x) =&amp;f(x^p)\\\\ h(x) =&amp;f^p(x)\\\\ h(x) =&amp;f(x)g(x)\\\\ h(x) =&amp;\\sum_{d\\mid x}f(d)g(\\frac{x}{d}) \\end{matrix} \\]"},{"location":"Math/NumberTheory/Inv/Inv/","title":"\u4e58\u6cd5\u9006\u5143","text":""},{"location":"Math/NumberTheory/Inv/Inv/#_2","title":"\u5b9a\u4e49","text":"<p>\u5982\u679c\u4e00\u4e2a\u7ebf\u6027\u540c\u4f59\u65b9\u7a0b \\(ax \\equiv 1 \\pmod b\\)\uff0c\u5219 \\(x\\) \u79f0\u4e3a \\(a \\bmod b\\) \u7684\u9006\u5143\uff0c\u8bb0\u4f5c \\(a^{-1}\\)\u3002</p> <p>\u9006\u5143\u5b58\u5728\u7684\u524d\u63d0\u662f\\(gcd(a,b)=1\\)\uff0c\u5373\\(a\u3001b\\)\u4e92\u8d28</p> <p>\u4e58\u6cd5\u9006\u5143\u5176\u5b9e\u5c31\u662f\u6a21\\(p\\)\u610f\u4e49\u4e0b\u7684\u5012\u6570\u3002</p> <p>\u4e58\u6cd5\u9006\u5143\u4e0d\u4f1a\u5177\u4f53\u4f5c\u4e3a\u4e00\u4e2a\u8003\u70b9\u51fa\u9898\u76ee\uff0c\u53ea\u4f1a\u5728\u4e00\u4e9b\u7b54\u6848\u8f93\u51fa\u9700\u8981\u53d6\u6a21\u65f6\uff0c\u6211\u4eec\u7684\u6c42\u89e3\u8fc7\u7a0b\u4e2d\u9047\u5230\u9664\u6cd5\u5c31\u8981\u7528\u4e58\u6cd5\u9006\u5143\u6765\u66ff\u6362\uff0c\u56e0\u4e3a\u6a21\u610f\u4e49\u4e0b\u7684\u9664\u6cd5\u662f\u4e0d\u80fd\u76f4\u63a5\u8fdb\u884c\u8ba1\u7b97\u3002</p> <p>\u4f8b\u5982\u6211\u4eec\u4e0b\u9762\u7684\u9664\u6cd5\u5c31\u8981\u66ff\u6362\u6210\u4e58\u6cd5\u9006\u5143\uff1a</p> \\[ a / b(mod\\space p)\\rightarrow a\\times inv(b) (mod\\space p) \\] <p>\u5373\u5728\u6a21\\(p\\)\u7684\u60c5\u51b5\u4e0b\\(a\\)\u9664\\(b\\)\u8981\u66ff\u6362\u6210\\(a\\)\u4e58\\(b\\)\u7684\u9006\u5143</p>"},{"location":"Math/NumberTheory/Inv/Inv/#_3","title":"\u6269\u5c55\u6b27\u51e0\u91cc\u5fb7","text":"<p>[NOIP2012 \u63d0\u9ad8\u7ec4] \u540c\u4f59\u65b9\u7a0b</p> <p>\\(ax \\equiv 1 \\pmod b\\)\u5176\u5b9e\u5c31\u662f\u7b49\u4ef7\u4e8e\\(ax+by=1\\)\uff0c\u56e0\u4e3a\\(a\u3001b\\)\u4e92\u8d28\uff0c\\(gcd(a,b)=1\\)\uff0c\u5f0f\u5b50\u5c31\u662f\\(ax+by=gcd(a,b)\\)\uff0c\u53ef\u4ee5\u7528\u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5\uff0c\u8ba1\u7b97\\(x\uff0cy\\)\u7684\u89e3\u5373\u53ef\u3002</p> <p><pre><code>typedef long long ll;\nll exgcd(ll a,ll b,ll&amp; x,ll&amp; y){\n    if(!b){\n        x=1,y=0;\n        return a;\n    }\n    int d=exgcd(b,a%b,x,y),x0=x,y0=y;\n    x=y0;\n    y=x0-a/b*y0;\n    return d;\n}\nll inv(ll a,ll p){\n    ll x,y;\n    exgcd(a,p,x,y);\n    return (x%p+p)%p;\n}\n</code></pre> \u65f6\u95f4\u590d\u6742\u5ea6\u4f4d\uff1a\\(O(\\log n)\\)\uff0c\u9002\u7528\u4e8e\u4efb\u4f55\u6570</p>"},{"location":"Math/NumberTheory/Inv/Inv/#_4","title":"\u8d39\u9a6c\u5c0f\u5b9a\u7406","text":"<p>\u5b9a\u7406\u5185\u5bb9\uff1a\u5982\u679c \\(p\\) \u662f\u8d28\u6570\uff0c\u800c\u6574\u6570 \\(a\\) \u4e0d\u662f \\(p\\) \u7684\u500d\u6570\uff0c\u5219\u6709 \\(a^{p-1}\\equiv 1(mod\\space p)\\) \uff0c\u5c06\u5f0f\u5de6\u8fb9\u62c6\u5f00\u5c31\u80fd\u5f97\u5230 \\(a\\cdot a^{p-2}\\equiv 1(mod\\space p)\\) \uff0c\u6839\u636e\u9006\u5143\u5b9a\u4e49\u53ef\u4ee5\u77e5\u9053 \\(a^{p-2}\\) \u5c31\u662f \\(a\\) \u7684\u9006\u5143\uff0c\u76f4\u63a5\u5229\u7528\u5feb\u901f\u5e42\u8ba1\u7b97\u5373\u53ef\u3002</p> <p><pre><code>ll qpow(ll a,ll b, ll p){\n    ll res = 1;\n    while(b &gt; 0){\n        if(b &amp; 1) res = res * a % p;\n        a = a * a % p;\n        b &gt;&gt;= 1;\n    }\n    return res;\n}\nll inv(ll a,ll p){\n    return qpow(a,p-2);\n}\n</code></pre> \u65f6\u95f4\u590d\u6742\u5ea6\u4f4d\uff1a\\(O(\\log n)\\)\uff0c\u53ea\u4f7f\u7528\u4e8e\u8d28\u6570</p>"},{"location":"Math/NumberTheory/Inv/Inv/#n","title":"\u9012\u63a8\u6253\u8868\u6c42n\u4e2a\u6570\u7684\u9006\u5143","text":"<p>\u4e0a\u9762\u4e24\u79cd\u65b9\u6cd5\u53ea\u9002\u7528\u4e8e\u5bf9\u5355\u4e2a\u6570\u8fdb\u884c\u9006\u5143\u6c42\u89e3\uff0c\u5982\u679c\u5bf9\\(1\\dots n\\)\uff0c\u7684\u6240\u6709\u6570\u6c42\u5173\u4e8e\\(p\\)\u7684\u9006\u5143\uff0c\u7528\u4e0a\u9762\u7684\u65b9\u6cd5\u80af\u4f1a\u8d85\u65f6\u3002\u4e0b\u9762\u4ecb\u7ecd\u4e00\u79cd\\(O(n)\\)\u7684\u65b9\u6cd5\u3002</p> <p>\u9996\u5148\u6211\u4eec\u77e5\u9053\\(1\\times 1\\equiv 1(mod\\space p)\\)\uff0c\u6240\u4ee5\u5728\u6a21\\(p\\)\u7684\u60c5\u51b5\u4e0b\uff0c\\(1\\)\u7684\u9006\u5143\u5c31\u662f\\(1\\)\u3002</p> <p>\u6211\u4eec\u518d\u6765\u770b\u5176\u4ed6\u60c5\u51b5\uff1a\u8bbe\u6211\u4eec\u8981\u6c42\\(i\\)\u7684\u9006\u5143\\(i^{-1}\\)\uff0c\u6211\u4eec\u4ee4\\(k=\\left \\lfloor \\frac{p}{i}\\right \\rfloor\\)\uff0c\\(j=p\\space mod\\space i\\)\uff0c\u6709\\(p=ki+j\\)\u3002\u6211\u4eec\u4f1a\u5f97\u5230\\(ki+j\\equiv 0(mod\\space p)\\)\uff0c\u6211\u4eec\u5de6\u53f3\u540c\u65f6\u4e58\u4ee5\\(i^{-1}\\times j^{-1}\\)\uff0c\u5c31\u53ef\u5df2\u5f97\u5230\uff1a</p> \\[ kj^{-1}+i^{-1}\\equiv 0(mod\\space p)\\\\ ~\\\\ i^{-1}\\equiv -kj^{-1}(mod\\space p) \\] <p>\u6211\u4eec\u518d\u5c06\\(j=p\\ mod\\space i\\)\u548c\\(k=\\left \\lfloor \\frac{p}{i}\\right \\rfloor\\)\u5e26\u5165\uff0c\u5f97\u5230\uff1a</p> \\[ i^{-1}\\equiv -\\left \\lfloor \\frac{p}{i}\\right \\rfloor (p\\space mod\\space i)^{-1}(mod \\space p) \\] <p>\u56e0\u4e3a \\(p\\space mod\\space i\\) \u4e00\u5b9a\u662f\u5c0f\u4e8e \\(i\\) \u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u4ece\u4ee5\u524d\u7b97\u8fc7\u7684\u9006\u5143\u63a8\u5bfc\u5f97 \\(i\\) \u7684\u9006\u5143\uff0c\u7136\u540e\u5c06\u5176\u5b58\u5165\u5230\u4e00\u4e2a\u6570\u7ec4\u91cc\uff0c\u4f7f\u7528\u65f6\u76f4\u63a5\u67e5\u8be2\u5373\u53ef\u3002</p> <p>\u4e3a\u4e86\u9632\u6b62\u51fa\u73b0\u8d1f\u6570\uff0c\u8ba1\u7b97\u65f6\u53ef\u4ee5\u52a0\u4e0a\u4e00\u4e2a \\(p\\) \u518d\u6a21 \\(p\\) \u3002 <pre><code>ll inv[MAX];//\u8bb0\u5f55\u9006\u5143\nvoid init(){\n    inv[1]=1;\n    for(int i=2;i&lt;=n;++i)\n        inv[i]=(ll)(p-p/i)*inv[p%i]%p;\n}\n</code></pre> \u3010\u6a21\u677f\u3011\u4e58\u6cd5\u9006\u5143 \u3010\u6a21\u677f\u3011\u4e58\u6cd5\u9006\u5143 2  \u8fd9\u9898\u5361\u5e38\uff0c\u7528\u5feb\u8bfb\u624d\u80fd\u8fc7</p>"},{"location":"Math/NumberTheory/Inv/Inv/#_5","title":"\u9012\u63a8\u6c42\u9636\u4e58\u9006\u5143","text":"<p>\u8bb0\\(n!\\)\u7684\u9006\u5143\u4e3a\\(inv[n!]\\)\uff0c\\((n - 1)!\\)\u7684\u9006\u5143\u4e3a\\(inv[(n - 1)!]\\)</p> <p>\u6709\\((n)! \\times inv[n!] \\equiv 1(mod\\space p)\\)</p> <p>\u6240\u4ee5\\((n - 1)! \\times n\\times inv[n!] \\equiv 1(mod\\space p)\\)</p> <p>\u6839\u636e\u8fd9\u4e2a\u540c\u4f59\u65b9\u7a0b\u4e0d\u96be\u770b\u51fa\\(n\\times inv[n!]\\)\u662f\\((n - 1)!\\)\u7684\u4e00\u4e2a\u9006\u5143</p> <p>\u56e0\u6b64\u53ef\u4ee5\u5148\u7528\u5feb\u901f\u5e42\u6c42\u51fa\\(n!\\)\u7684\u9006\u5143\uff0c\u518d\u53cd\u5411\u9012\u63a8\\(1~n\\)\u6240\u6709\u6570\u9636\u4e58\u7684\u9006\u5143</p> <pre><code>ll P[MAX], inv[MAX];\n\n// qpow\u4e3a\u4e0a\u6587\u5feb\u901f\u5e42\n\n// n\u53d6\u9898\u76ee\u7684\u6570\u636e\u8303\u56f4\uff0c\u6bd4\u59822e5\nvoid init(ll n, ll p) {\n    P[0] = 1;\n    for(int i = 1; i &lt;= n; i ++ ) P[i] = (i * P[i - 1]) % p;\n    inv[n] = qpow(P[n], p - 2, p); // \u8d39\u9a6c\u5c0f\u5b9a\u7406\u6c42n!\u9006\u5143\n    for(int i = n - 1; i &gt;= 0; i -- ) inv[i] = (inv[i + 1] * (i + 1)) % p;\n    // \u9012\u63a8\u6c42\u9636\u4e58\u9006\u5143\n}\n</code></pre> <p>\u9636\u4e58\u9006\u5143\u7684\u5e94\u7528\u2014\u2014\u6c42\u6a21p\u610f\u4e49\u4e0b\u7684\u7ec4\u5408\u6570</p> <p>Codeforces Round 964 (Div. 4) E</p> <p>\u89c2\u5bdf\u7ec4\u5408\u6570\u8ba1\u7b97\u516c\u5f0f \\(C_n^k = \\frac{n!}{m!(n - m)!}\\)\uff0c\u5982\u679c\u8981\u6c42\u6a21p\u610f\u4e49\u4e0b\u7684\\(C_n^k\\)\uff0c\u65e0\u6cd5\u901a\u8fc7\u9664\u6cd5\u53d6\u6a21\u6765\u5f97\u5230\u6b63\u786e\u7684\u7ed3\u679c\uff0c\u6240\u4ee5\u5fc5\u987b\u8f6c\u5316\u4e3a\u6c42\u4e58\u6cd5\u9006\u5143\u518d\u5bf9\u4e58\u6cd5\u53d6\u6a21\u3002\u8fd9\u91cc\u5c31\u9700\u8981\u7528\u5230\u9636\u4e58\u7684\u9006\u5143\u6765\u6c42\u5e26\u6a21\u6570\u7ec4\u5408\u6570\u3002</p> <p><pre><code>// \u5728\u4e3b\u51fd\u6570\u4e2d\u4f18\u5148\u8c03\u7528\u4e0a\u6587init()\u51fd\u6570\u521d\u59cb\u5316\ninline ll comb(ll n, ll m, ll p) {\n    if(n &lt; m) return 0 % mod;\n    return ((P[n] * inv[m]) % p * inv[n - m]) % p;\n}\n</code></pre> \u6ce8\u610f\uff1a\u8fd9\u91cc\u6c42\u5e26\u6a21\u6570\u7684\u7ec4\u5408\u6570\u7684\u65b9\u6cd5\u5fc5\u987b\u5728\u9898\u76ee\u7ed9\u5b9a\u7684p\u4e3a\u8d28\u6570\u7684\u524d\u63d0\u4e0b\u624d\u80fd\u4f7f\u7528\uff0c\u5426\u5219\u65e0\u6cd5\u80af\u5b9a\\(C_n^k\\)\u7684\u9006\u5143\u5b58\u5728\u3002</p> <p>\u53c2\u8003\u6587\u7ae0\uff1a Oi-Wiki \u4e58\u6cd5\u9006\u5143</p>"},{"location":"Math/NumberTheory/Qpow/qpow/","title":"\u5feb\u901f\u5e42","text":""},{"location":"Math/NumberTheory/Qpow/qpow/#_2","title":"\u4e3a\u4ec0\u4e48\u8981\u7528\u5feb\u901f\u5e42","text":"<p>\u8ba1\u7b97\\(a^b\\space mod\\space p\\)\uff0c\u5176\u4e2d\\(a,b\\)\u662f\u975e\u5e38\u5927\u7684\u6570\u3002\u8fd9\u65f6\u5982\u679c\u5c06\\(a^b\\)\u4e00\u4e2a\u4e00\u4e2a\u7d2f\u4e58\u8ba1\u7b97\u7684\u8bdd\u4f1a\u5f88\u6162\uff0c\u5373\u4f7f\u4ed6\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\\(O(n)\\)\uff0c\u5e76\u4e14\u8fd9\u6837\u4e00\u4e2a\u5927\u7684\u6570\u5b57\u5f88\u96be\u5b58\u50a8\u5728\u8ba1\u7b97\u673a\u4e2d(\\(int,long long\\)\u90fd\u4f1a\u6ea2\u51fa)\uff0c\u8fd9\u65f6\u5c31\u9700\u8981\u5feb\u901f\u5e42\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002</p> <p>\u5728\\(RSA\\)\u52a0\u5bc6\u4e2d\u5c31\u4f7f\u7528\u4e86\u5feb\u901f\u5e42\u7b97\u6cd5</p>"},{"location":"Math/NumberTheory/Qpow/qpow/#_3","title":"\u539f\u7406","text":"<p>\u5feb\u901f\u5e42\u5176\u5b9e\u5c31\u662f\u5229\u7528\u4e86\u5206\u6cbb\u7684\u601d\u60f3\uff0c\u5c06 \\(a^b\\) \u5206\u6210 \\(a^{b/2}\\) \u548c \\(a^{b/2}\\) \u4e24\u4e2a\u90e8\u5206\uff0c\u4e00\u76f4\u7ec6\u5206\uff0c\u76f4\u5230\u5e42\u6b21 \\(b=1\\) \uff0c\u518d\u5c06\u8fd9\u4e9b\u7ed3\u679c\u7d2f\u4e58\u8d77\u6765\uff0c\u5e76\u4e14\u5229\u7528\u6a21\u8fd0\u7b97\u7684\u6027\u8d28\uff0c\u5728\u7d2f\u4e58\u8fc7\u7a0b\u4e2d\u4e0d\u65ad\u53d6\u6a21\uff0c\u9632\u6b62\u6ea2\u51fa\uff0c\u6700\u540e\u5c31\u53ef\u4ee5\u5f97\u5230\u6700\u540e\u7684\u7b54\u6848\u3002</p>"},{"location":"Math/NumberTheory/Qpow/qpow/#_4","title":"\u9012\u5f52\u5b9e\u73b0","text":"<p>\u9012\u5f52\u7684\u601d\u8def\u975e\u5e38\u7b80\u5355\uff0c\u5e38\u89c4\u5957\u8def\u3002 <pre><code>typedef unsigned long long ull;\null a, n, p;\null q_pow(ull a, ull n,ull p) {\n    if (n == 1) return a;\n    ull c = q_pow(a, n &gt;&gt; 1, p) % p;\n    if (n &amp; 1) return c * c % p * a % p;\n    return c * c % p;\n}\n</code></pre></p>"},{"location":"Math/NumberTheory/Qpow/qpow/#_5","title":"\u975e\u9012\u5f52\u5b9e\u73b0","text":"<p>\u975e\u9012\u5f52\u9700\u8981\u5229\u7528\u5230\u4e8c\u8fdb\u5236\u3002\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u6570\u5b57\u6211\u4eec\u90fd\u53ef\u4ee5\u628a\u5b83\u5199\u6210\u4e8c\u8fdb\u5236\u7d2f\u52a0\u7684\u5f62\u5f0f\uff0c\\(e.g.5=2^2+2^0\\)\uff0c\u6240\u4ee5\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u628a\u5e42\\(b\\)\u5199\u6210\u4e00\u4e2a\u4e8c\u8fdb\u5236\u7d2f\u52a0\u7684\u5f62\u5f0f\uff0c\u518d\u5229\u7528\u5e42\u7684\u8fd0\u7b97\u89c4\u5219\uff0c\u5c31\u53ef\u4ee5\u5c06\\(a\\)\u5199\u6210\u4e00\u4e32\u6570\u7684\u4e58\u79ef\uff0c\\(e.g\uff1a3^5=3^{2^2+2^0}=3^{2^2}\\times 3^{2^0}\\)\uff0c\u8fd9\u6837\u4e5f\u8fbe\u5230\u4e86\u5c06\u5e42\u6b21\u4e8c\u5206\u7684\u6548\u679c\uff0c\u5e76\u4e14\u6211\u53ef\u4ee5\u76f4\u63a5\u5c06\u5e42\u6b21\u5199\u6210\u4e8c\u8fdb\u5236\u7684\u5f62\u5f0f\\(3^{(101)_2}\\)\uff0c\u6bcf\u4e2a\u4e8c\u8fdb\u5236\u4f4d\u4e3a\\(1\\)\u7684\u4f4d\u7f6e\uff0c\u90fd\u662f\u6211\u4eec\u8981\u7d2f\u4e58\u7684\u5e42\u6b21\u3002</p> <p>\u5199\u4ee3\u7801\u65f6\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u904d\u5386\u5e42\u6b21\\(b\\)\u7684\u4e8c\u8fdb\u5236\u4f4d\uff0c\u7b49\u4e8e\\(1\\)\u7684\u5c31\u5c06\u5176\u4e58\u8d77\u6765\uff0c\u5e76\u4e14\u4e0d\u65ad\u53d6\u6a21\u4fdd\u8bc1\u4e0d\u6ea2\u51fa\uff0c\u6700\u540e\u904d\u5386\u5b8c\\(b\\)\u7684\u4e8c\u8fdb\u5236\u4f4d\uff0c\u5faa\u73af\u7ed3\u675f\uff0c\u5f97\u5230\u7684\u4e58\u79ef\u5c31\u662f\u7ed3\u679c\u3002</p>"},{"location":"Math/NumberTheory/Qpow/qpow/#_6","title":"\u4ee3\u7801\u5b9e\u73b0","text":"<pre><code>typedef long long ll;\nll a, b, p;\nll qpow(ll a, ll b) {\n    ll res = 1;\n    while (b &gt; 0) {\n        if (b &amp; 1) res = res * a % p;\n        a = a * a % p;\n        b &gt;&gt;= 1;\n    }\n    return res;\n}\n</code></pre> <p>\u6d1b\u8c37\u6a21\u677f\u7ec3\u4e60</p>"},{"location":"Math/NumberTheory/sieve/sieve/","title":"\u7b5b\u6cd5","text":""},{"location":"Math/NumberTheory/sieve/sieve/#_1","title":"\u5f15\u5165","text":"<p>\u5f88\u591a\u9898\u76ee\u4e2d\uff0c\u9700\u8981\u6211\u4eec\u8ba1\u7b97\u51fa\u5c0f\u4e8e\u7b49\u4e8e \\(n\\) \u7684\u6240\u6709\u7d20\u6570\u3002</p> <p>\u5982\u679c\u6bcf\u4e2a\u6570\u5b57\u8fdb\u884c\u4e00\u6b21\u8d28\u6570\u68c0\u9a8c\uff0c\u662f \\(O(n\\sqrt{n})\\)\uff0c\u5f53 \\(n\\) \u5230 \\(1e6\\) \u65f6\uff0c\u8fd9\u6837\u6548\u7387\u5c31\u5f88\u5dee\u4e86\u3002</p> <p>\u8fd9\u5c31\u8981\u7528\u5230\u7b5b\u6cd5\u4e86\u3002</p>"},{"location":"Math/NumberTheory/sieve/sieve/#_2","title":"\u57c3\u6c0f\u7b5b","text":"<p>\u7b5b\u6cd5\u7684\u6838\u5fc3\u601d\u60f3\u5c31\u662f\uff1a\u8d28\u6570\u7684\u500d\u6570\u4e0d\u662f\u8d28\u6570\u3002</p> <p>\u987a\u7740\u8fd9\u4e2a\u601d\u8def\uff0c\u6211\u4eec\u9996\u5148\u5047\u8bbe\u6240\u6709\u6570\u90fd\u6807\u8bb0\u4f4d\u8d28\u6570\uff0c\u6211\u4eec\u7528\u4e00\u4e2a\u6570\u7ec4 <code>is_p</code> \u6765\u8bb0\u5f55\u662f\u5426\u4e3a\u7d20\u6570\uff0c\\(1\\) \u8868\u793a\u662f\uff0c\\(0\\) \u8868\u793a\u5426\u3002</p> <p>\u4ece \\(2\\) \u5f00\u59cb\uff0c\u5c06\u5c06\u9047\u5230\u7684\u6240\u6709\u7d20\u6570\u7684\u500d\u6570\u7684 <code>is_p</code> \u90fd\u6539\u6210 \\(0\\)\u3002</p> <pre><code>// N \u5728 1e5 ~ 1e7 \u90fd\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u66f4\u5927\u8303\u56f4\u53ef\u80fd\u5c31\u9700\u8981\u5176\u4ed6\u65b9\u6cd5\u6765\u5224\u65ad\u7d20\u6570\u4e86 \nvector&lt;bool&gt; is_p(MAX,true);\nvoid init() {\n    is_p[0] = is_p[1] = 0;\n    for(int i = 2;i &lt; N;++i) {\n        if(!is_p[i]) continue; // \u4e0d\u662f\u7d20\u6570\u76f4\u63a5\u8df3\u8fc7\n        // \u4ece 2 ~ i - 1 \u7684\u500d\u6570\u90fd\u5df2\u7ecf\u904d\u5386\u8fc7\u4e86\n        for(int j = i * i;j &lt; N;j += i) \n            is_p[j] = 0;    // \u7b5b\u8c03\u7d20\u6570\u7684\u500d\u6570\n    }\n}\n</code></pre> <p>\u57c3\u6c0f\u7b5b\u7684\u590d\u6742\u5ea6\u662f \\(O(n\\log{n}\\log{n})\\)\u3002\u5927\u591a\u6570\u60c5\u51b5\u90fd\u591f\u7528\u4e86\uff0c\u9898\u76ee\u4e5f\u4e0d\u4f1a\u6545\u610f\u5361\u7b5b\u6cd5\u7684\u590d\u6742\u5ea6\u3002</p> <p>\u4f46\u4e5f\u6709\u4e00\u4e9b\u4f18\u5316\u53ef\u4ee5\u505a\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u5176\u5b9e\u4e0d\u5fc5\u8981\u5c06 \\([1,n]\\) \u8303\u56f4\u5185\u7684\u6240\u6709\u6570\u5b57\u90fd\u904d\u5386\u4e00\u904d\uff0c\u6211\u4eec\u53ea\u8981\u904d\u5386 \\([1,\\sqrt{n}]\\) \uff0c\u5c31\u53ef\u4ee5\u5c06 \\([1,n]\\) \u8303\u56f4\u5185\u7684\u8d28\u6570\u90fd\u7b5b\u51fa\u6765\u4e86\u3002</p> <pre><code>vector&lt;bool&gt; is_p(MAX,true);\nvoid init() {\n    is_p[0] = is_p[1] = 0;\n    for(int i = 2;i * i &lt; N;++i) {\n        if(!is_p[i]) continue; // \u4e0d\u662f\u7d20\u6570\u76f4\u63a5\u8df3\u8fc7\n        // \u4ece 2 ~ i - 1 \u7684\u500d\u6570\u90fd\u5df2\u7ecf\u904d\u5386\u8fc7\u4e86\n        for(int j = i * i;j &lt; N;j += i) \n            is_p[j] = 0;    // \u7b5b\u8c03\u7d20\u6570\u7684\u500d\u6570\n    }\n}\n</code></pre>"},{"location":"Math/NumberTheory/sieve/sieve/#_3","title":"\u6b27\u62c9\u7b5b\uff08\u7ebf\u6027\u7b5b\uff09","text":"<p>\u5728\u57c3\u6c0f\u7b5b\u4e2d\uff0c\u540c\u4e00\u4e2a\u5408\u6570\u53ef\u80fd\u4f1a\u88ab\u7b5b\u597d\u591a\u6b21\uff0c\u5982\uff1a\\(30 = 2 \\times 3\\times 5\\)\uff0c\\(30\\) \u5c31\u4f1a\u88ab \\(2,3,5\\) \u90fd\u7b5b\u4e00\u904d\u3002</p> <p>\u90a3\u6211\u4eec\u5c31\u8981\u6d88\u9664\u8fd9\u6837\u7684\u91cd\u590d\uff0c\u8fd9\u91cc\u7684\u60f3\u6cd5\u5c31\u662f\uff1a\u8ba9\u6bcf\u4e2a\u5408\u6570\u90fd\u88ab\u5176\u6700\u5c0f\u7684\u8d28\u56e0\u6570\u7b5b\u51fa\u53bb\u3002\u6bd4\u5982\uff1a\u8bbe \\(p_1\\) \u662f \\(n\\) \u7684\u6700\u5c0f\u8d28\u56e0\u6570\uff0c\\(n'=\\frac{n}{p_1}\\)\uff0c\u90a3\u4e48\u5728\u6b27\u62c9\u7b5b\u4e2d\uff0c\\(n\\) \u901a\u8fc7 \\(n'\\times p_1\\) \u7b5b\u53bb\u3002 </p> <p>\u8fd9\u91cc\u6211\u4eec\u7528\u4e00\u4e2a\u6570\u7ec4 <code>pri</code> \u6765\u8bb0\u5f55\u5df2\u7ecf\u7b5b\u51fa\u7684\u7d20\u6570\u3002\u5148\u7ed9\u51fa\u4ee3\u7801\uff1a</p> <pre><code>vector&lt;bool&gt; is_p(MAX,true);\nvector&lt;int&gt; pri;\nvoid init() {\n    is_p[0] = is_p[1] = 0;\n    for(int i = 2;i &lt; MAX;++i) {\n        if(is_p[i]) {\n            pri.push_back(i);\n        }\n        for(auto&amp; j : pri) {\n            if(i * j &gt; MAX) break;\n            // j \u662f i * j \u7684\u6700\u5c0f\u8d28\u56e0\u6570\n            is_p[i * j] = 0;\n            if(i % j == 0) {\n                break;\n            }\n        }\n    }\n}\n</code></pre> <p>\u56e0\u4e3a <code>pri</code> \u7684\u6570\u7ec4\u91cc\uff0c\u8d28\u6570\u4e00\u5b9a\u662f\u4ece\u5c0f\u5230\u8fbe\u6392\u5217\u7684\uff0c\u6240\u4ee5\u5982\u679c \\(i\\) \u7684\u56e0\u6570\u91cc\u6709 \\(j\\) \u4e86\uff0c<code>pri</code> \u540e\u9762\u7684\u8d28\u6570\u679a\u4e3e\u7684\u8d28\u6570 \\(j'\\) \u5c31\u4e0d\u518d\u662f \\(i \\times j'\\) \u7684\u6700\u5c0f\u8d28\u56e0\u6570\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u9009\u62e9\u76f4\u63a5 <code>break</code>\u3002\u540e\u9762\u6bd4 \\(i * j\\) \u5927\u7684\uff0c\\(j\\) \u7684\u500d\u6570\uff0c\u4f1a\u7531\u540e\u9762\u679a\u4e3e\u7684\u5176\u4ed6\u6570\u5b57\u53bb\u7b5b\u6389\u3002</p> <p>\u901a\u8fc7\u4e00\u6b21\u6b27\u62c9\u6652\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\uff0c\u6211\u4eec\u540c\u65f6\u4e5f\u6c42\u5f97\u4e86 \\([1,n]\\) \u6240\u6709\u6570\u5b57\u7684\u6700\u5c0f\u8d28\u56e0\u6570\u3002</p>"},{"location":"Math/NumberTheory/sieve/sieve/#_4","title":"\u6c42\u56e0\u6570\u4e2a\u6570","text":"<p>\u6211\u4eec\u8bb0 \\(d_i\\) \u4e3a\u6570\u5b57 \\(i\\) \u56e0\u6570\u4e2a\u6570\uff0c\u8bb0 \\(cnt_i\\) \u4e3a\u6570\u5b57 \\(i\\) \u6700\u5c0f\u8d28\u56e0\u6570\u7684\u5e42\u6b21\u3002\\(d_i\\) \u53ef\u4ee5\u7531\u4e00\u4e0b\u516c\u5f0f\u7b97\u5f97\uff1a</p> \\[ d_i = \\prod_{i=1}^{m}(c_i + 1)  \\] <p>\u5176\u4e2d \\(c_i\\) \u8868\u793a\u6570\u5b57 \\(i\\) \u7684\u8d28\u56e0\u6570 \\(p_i\\) \u7684\u5e42\u6b21\u3002</p> <p>\u8bc1\u660e</p> <p>\u7531\u552f\u4e00\u5206\u89e3\u5b9a\u7406\u53ef\u77e5\uff0c\\(i\\) \u53ef\u4ee5\u5206\u89e3\u4e3a\uff1a</p> \\[ a=p^{c_1}_1 p^{c_2}_2\\cdots p^{c_r}_r \\] <p>\u5bf9\u4e8e\u6bcf\u4e2a\u8d28\u56e0\u6570 \\(p_i\\) \uff0c\u6211\u4eec\u53ef\u4ee5\u9009 \\([0,c_i]\\) \u4e2a\uff0c\u6765\u7ec4\u6210\u6211\u4eec\u7684\u56e0\u6570\uff0c\u6839\u636e\u4e58\u6cd5\u539f\u7406\uff0c\u80fd\u5f97\u5230\u56e0\u6570\u4e2a\u6570\u4e3a\uff1a</p> \\[ d_i = \\prod_{i=1}^{m}(c_i + 1)  \\] <p>\u7b5b\u6cd5\u6c42\u56e0\u6570\u4e2a\u6570\u7684\u601d\u8def\u5982\u4e0b\uff1a</p> <ul> <li> <p>\u5f53 \\(i\\) \u4e3a\u8d28\u6570\u65f6\uff0c\\(cnt_i = 1\uff0cd_i = 2\\)</p> </li> <li> <p>\u5f53 \\(j\\) \u662f \\(i\\) \u7684\u56e0\u6570\u65f6\uff08\\(i,j\\) \u7684\u542b\u4e49\u540c\u4e0a\u6587\u7ebf\u6027\u7b5b\uff09\uff1a</p> </li> </ul> \\[ \\begin{matrix} cnt_{i\\times j} = cnt_i + 1\\\\ d_{i \\times j} = \\frac{d_i}{cnt_i}\\times (cnt_{i \\times j} + 1) \\end{matrix} \\] <ul> <li>\u5f53 \\(j\\) \u4e0d\u662f \\(i\\) \u7684\u56e0\u6570\u65f6\uff0c\\(j\\) \u662f\u8d28\u6570\uff0c\u8bf4\u660e \\(i,j\\) \u4e92\u8d28\uff0c\\(d_i\\) \u53c8\u662f\u79ef\u6027\u51fd\u6570\uff1a</li> </ul> \\[ \\begin{matrix} cnt_{i\\times j} = 1\\\\ d_{i \\times j} = d_i \\times d_j \\end{matrix} \\] <p>\u5b9e\u73b0\u5982\u4e0b\uff1a</p> <pre><code>vector&lt;bool&gt; is_p(MAX,true);\nvector&lt;int&gt; pri;\nvector&lt;int&gt; d(MAX),cnt(MAX);\nvoid init() {\n    is_p[0] = is_p[1] = 0;\n    for(int i = 2;i &lt; MAX;++i) {\n        if(is_p[i]) {\n            pri.push_back(i);\n            d[i] = 2;\n            cnt[i] = 1;\n        }\n        for(auto&amp; j : pri) {\n            if(i * j &gt; MAX) break;\n            is_p[i * j] = 0;\n            if(i % j == 0) {\n                cnt[i * j] = cnt[i] + 1;\n                d[i * j] = d[i] / cnt[i] * (cnt[i * j] + 1);\n                break;\n            }\n            // \u6700\u5c0f\u8d28\u56e0\u6570\u4e3a j\uff0c\u4e14\u5e42\u6b21\u4e3a 1\n            cnt[i * j] = 1;\n            // \u79ef\u6027\u51fd\u6570\u5b9a\u4e49\n            d[i * j] = d[i] * d[j]; \n        }\n    }\n}\n</code></pre> <p>\u5bf9\u4e8e\u4e00\u4e9b\u79ef\u6027\u51fd\u6570\uff0c\u7b5b\u6cd5\u90fd\u80fd\u505a\u5230\u7ebf\u6027\u65f6\u95f4\u5185\u9012\u63a8\u6c42\u89e3\uff0c\u5982\uff1a\u56e0\u6570\u548c\uff0c\u6b27\u62c9\u51fd\u6570\uff0c\u83ab\u6bd4\u4e4c\u65af\u51fd\u6570\u7b49\uff0c\u8fd9\u4e9b\u53ef\u4ee5\u53c2\u8003: OI Wiki \u7b5b\u6cd5</p> <p>\u53c2\u8003\u6587\u7ae0\uff1a</p> <p>OI Wiki \u7b5b\u6cd5</p> <p>\u79ef\u6027\u51fd\u6570 CSDN</p>"},{"location":"Math/Numerical/NtsMethod/Nt/","title":"\u725b\u987f\u8fed\u4ee3\u6cd5","text":""},{"location":"Math/Numerical/NtsMethod/Nt/#_2","title":"\u5f15\u5165","text":"<p>\u725b\u987f\u8fed\u4ee3\u6cd5\uff0c\u53c8\u53eb\u725b\u987f-\u62c9\u592b\u900a\uff08\u62c9\u5f17\u68ee\uff09\u65b9\u6cd5\uff0c\u662f\u725b\u987f\u5728\\(17\\)\u4e16\u7eaa\u63d0\u51fa\u7684\uff0c\u6c42\u89e3\u5728\u503c\u57df\u8303\u56f4\u5185\u8fde\u7eed\u5355\u8c03\u51fd\u6570 \\(f(x)\\) \u8fd1\u4f3c\u96f6\u70b9\u7684\u7b97\u6cd5\uff0c\u5373\u6c42\u65b9\u7a0b \\(f(x)=0\\) \u7684\u8fd1\u4f3c\u89e3\u3002</p>"},{"location":"Math/Numerical/NtsMethod/Nt/#_3","title":"\u7b97\u6cd5\u601d\u8def","text":"<p>\u521d\u59cb\u65f6\u6211\u4eec\u4ece \\(f(x) = 0\\)\u7684\u4e00\u4e2a\u8fd1\u4f3c\u89e3 \\(x_0\\) \u5f00\u59cb\u3002\u6211\u4eec\u505a \\(f(x)\\)\u5728 \\((x_0,f(x_0))\\)\u5904\u7684\u5207\u7ebf\uff0c\u5c06\u5207\u7ebf\u4e0e \\(x\\) \u8f74\u4ea4\u70b9\u5b9a\u4e3a \\(x_1\\)\uff0c\u8fd9\u4e2a \\(x_1\\) \u5c31\u662f\u4e00\u4e2a\u6bd4 \\(x_0\\) \u66f4\u7cbe\u786e\u7684\u70b9\uff0c\u6211\u4eec\u7167\u8fd9\u4e2a\u8fc7\u7a0b\u4e00\u76f4\u8fed\u4ee3\u4e0b\u53bb\uff0c\u76f4\u5230\u627e\u5230\u7b26\u53f7\u7cbe\u5ea6\u7684\u89e3\u5373\u53ef\u3002</p> <p>\u6839\u636e\u4e0a\u9762\u7684\u601d\u8def\u6211\u4eec\u53ef\u4ee5\u5199\u51fa\u9012\u63a8\u516c\u5f0f\uff0c\u6211\u4eec\u9996\u5148\u8bbe\u5f53\u524d\u8fd1\u4f3c\u89e3\u4e3a \\(x_i\\) \uff0c\u90a3\u4e48\u53ef\u4ee5\u5199\u51fa\u4e0b\u9762\u7684\u5f0f\u5b50\uff1a</p> \\[ f'(x_i)=\\frac{f(x_i)}{x_i-x_{i+1}} \\] <p>\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u5199\u51fa\u9012\u63a8\u4e0b\u4e00\u4e2a\u8fd1\u4f3c\u89e3\u7684\u5173\u7cfb\u5f0f\uff1a</p> \\[ x_{i+1}=x_i-\\frac{f(x_i)}{f'(x_i)} \\] <p>\u6709\u4e86\u9012\u63a8\u5f0f\u4ee3\u7801\u5199\u8d77\u6765\u5c31\u5bb9\u6613\u4e86\uff0c\u53ea\u8981\u4e00\u76f4\u7528\u4e0a\u5f0f\u8fed\u4ee3\uff0c\u76f4\u5230\u8fbe\u5230\u7cbe\u5ea6\u8981\u6c42\uff0c\u5c31\u9000\u51fa\u5faa\u73af\u5373\u53ef\u3002</p> <p>\u4e0b\u9762\u4ee5\u6c42\u89e3\u5e73\u65b9\u6839\u4e3a\u4f8b\uff1a</p> <pre><code>constexpr double eps = 1e-10;\ndouble Newton_sqrt(double n)\n{\n    double x = 1;\n    while(1)\n    {\n        double next_x = (x + n / x) / 2;\n        if(abs(next_x - x) &lt; eps)break;\n        x = next_x;\n    }\n    return x;\n}\n</code></pre> <p>\u53c2\u8003\u6587\u7ae0\uff1a</p> <p>Oi-Wiki</p>"},{"location":"Math/Numerical/QSqrt/QSqrt/","title":"\u5feb\u901f\u5e73\u65b9\u6839\u5012\u6570\u7b97\u6cd5","text":""},{"location":"Math/Numerical/QSqrt/QSqrt/#_2","title":"\u5f15\u5165","text":"<p>\u5982\u679c\u4e0d\u8c03\u7528\u5e93\u51fd\u6570\\(sqrt\\)\uff0c\u5e94\u8be5\u600e\u4e48\u6c42\u4e00\u4e2a\u6570\u7684\u5e73\u6cd5\u6839\u5462\uff1f</p> <p>\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u60f3\u5230\u5c06\u4e00\u4e2a\u6570\u7684\u5e73\u65b9\u6839\u8f6c\u5316\u6210\u65b9\u7a0b\u7684\u5f62\u5f0f\uff0c\u6c42\u89e3 \\(n\\) \u7684\u5e73\u65b9\u6839\u5176\u5b9e\u5c31\u662f\u6c42\u89e3\u4e0b\u9762\u7684\u65b9\u7a0b\uff1a</p> \\[ \\sqrt{n}=x \\] <p>\u5de6\u53f3\u5e73\u65b9\u5f97\uff1a</p> \\[ n=x^2 \\] <p>\u4e5f\u5c31\u662f\u6c42 \\(f(x)=x^2 - n\\space (x\\ge 0)\\) \u7684\u96f6\u70b9\u3002\u6211\u4eec\u4ee5 \\(n=2\\)\u4e3a\u4f8b\u753b\u51fa\u51fd\u6570\u56fe\u50cf\uff1a</p> <p>\u6211\u4eec\u4f1a\u53d1\u73b0\u5728\u5b9a\u4e49\u57df\u5185\u51fd\u6570\u662f\u5355\u8c03\u8fde\u7eed\u7684\uff0c\u90a3\u4e48\u6c42\u96f6\u70b9\u7684\u65b9\u6cd5\u5c31\u5f88\u591a\u4e86\uff0c\u4e8c\u5206\u6cd5\uff0c\u725b\u987f\u8fed\u4ee3\u6cd5\u90fd\u53ef\u4ee5\u5f88\u597d\u7684\u89e3\u51b3\u8be5\u95ee\u9898\u3002</p> <p>\u540e\u6587\u5c06\u7684\u7b97\u6cd5\u5c31\u662f\u5bf9\u725b\u987f\u6cd5\u7684\u4f18\u5316\uff0c\u90a3\u4e48\u6211\u4eec\u5148\u6765\u770b\u770b\uff0c\u4e00\u822c\u725b\u987f\u6cd5\u662f\u5982\u4f55\u6c42\u89e3\u7684\u3002</p>"},{"location":"Math/Numerical/QSqrt/QSqrt/#_3","title":"\u725b\u987f\u8fed\u4ee3\u6cd5\u6c42\u89e3\u5e73\u65b9\u6839","text":"<p>\u51fd\u6570\u4e0a\u6587\u5df2\u7ecf\u5199\u51fa\u6765\u4e86\\(f(x) = x^2-n\\)\u3002\u6839\u636e\u725b\u987f\u8fed\u4ee3\u6cd5\u7684\u9012\u63a8\u5f0f\u6211\u4eec\u53ef\u4ee5\u5199\u51fa\u8fed\u4ee3\u7684\u65b9\u7a0b\uff1a</p> \\[ x_{i+1} = x_i-\\frac{f(x_i)}{f'(x_i)}\\\\ \\] \\[ x_{i+1} = x_i-\\frac{x_i^2-n}{2x_i} \\] \\[ x_{i+1} = \\frac{x_i+\\frac{n}{x_i}}{2} \\] <p>\u6709\u4e86\u8fed\u4ee3\u516c\u5f0f\u4ee3\u7801\u5c31\u5f88\u597d\u5199\u4e86\uff1a</p> <pre><code>constexpr double eps = 1e-10;//\u63a7\u5236\u7cbe\u5ea6\ndouble Newton_sqrt(double n)\n{\n    double x = 1;\n    while(1)\n    {\n        double next_x = (x + n / x) / 2;//\u9012\u63a8\u516c\u5f0f\n        if(abs(next_x - x) &lt; eps)break; //\u8fbe\u5230\u7cbe\u5ea6\u8981\u6c42\u5c31\u8df3\u51fa\n        x = next_x;\n    }\n    return x;\n}\n</code></pre> <p>\u725b\u987f\u8fed\u4ee3\u6cd5\u6536\u655b\u901f\u7387\u662f\u5e73\u65b9\u7ea7\u7684\uff0c\u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(\\log{n})\\)</p> <p>\u800c\u7531\u683c\u96f7\u683c\u00b7\u6c83\u4ec0\u63d0\u51fa\u7684\u7b97\u6cd5\u53ea\u8981 \\(O(1)\\) \u5c31\u53ef\u4ee5\u7b97\u51fa\u8db3\u591f\u7cbe\u786e\u7684\u5e73\u65b9\u6839\u3002</p>"},{"location":"Math/Numerical/QSqrt/QSqrt/#_4","title":"\u5feb\u901f\u5e73\u65b9\u6839\u7b97\u6cd5","text":"<p>\u9996\u5148\u6211\u4eec\u8981\u76f4\u5230\uff0c\u725b\u987f\u6cd5\u7684\u6548\u7387\u548c\u521d\u59cb\u503c\u7684\u9009\u62e9\u5173\u7cfb\u5f88\u5927\uff0c\u521d\u59cb\u503c\u8d8a\u63a5\u8fd1\u6700\u7ec8\u7b54\u6848\uff0c\u6240\u9700\u8fed\u4ee3\u7684\u6b21\u6570\u8d8a\u5c11\uff0c\u725b\u987f\u6cd5\u7684\u6548\u7387\u5c31\u8d8a\u9ad8\u3002</p> <p>\u90a3\u4e48\u60f3\u8981\u5feb\u901f\u5f97\u5230\u5e73\u65b9\u6839\u7684\u503c\uff0c\u9996\u5148\u8981\u77e5\u9053\u4e00\u4e2a\u8db3\u591f\u63a5\u8fd1\u7b54\u6848\u7684\u8fd1\u4f3c\u89e3\u3002</p> <p>\u4ec0\u4e48\u725b\u9b54\uff1f\u6211\u60f3\u5feb\u901f\u77e5\u9053\u7b54\u6848\uff0c\u9996\u5148\u5f97\u77e5\u9053\u7b54\u6848\uff1f\u6362\u4e00\u822c\u4eba\u5df2\u7ecf\u653e\u5f03\u8fd9\u4e2a\u4f18\u5316\u601d\u8def\u4e86\uff0c\u4f46\u662f\u683c\u96f7\u683c\u00b7\u6c83\u4ec0\u63d0\u51fa\u4e00\u79cd\u7edd\u5999\u7684\u65b9\u6cd5\u3002</p>"},{"location":"Math/Numerical/QSqrt/QSqrt/#ieee","title":"IEEE \u6d6e\u70b9\u6570\u5b58\u50a8\u65b9\u6cd5","text":"<p>\u9996\u5148\u6211\u4eec\u6765\u590d\u4e60\u4e00\u4e0b\u7531IEEE\u63d0\u51fa\u7684\u6d6e\u70b9\u6570\u7684\u4e8c\u8fdb\u5236\u50a8\u5b58\u6807\u51c6\u3002</p> <p>\u6211\u4eec\u4ee5 \\(float\\) \u4e3a\u4f8b\uff0c\u6807\u51c6\u89c4\u5b9a\u6d6e\u70b9\u51fa\u7531\u4e09\u90e8\u5206\u7ec4\u6210\uff1a</p> <p>\u8be5\u5b58\u50a8\u6807\u51c6\u7c7b\u4f3c\u4e8e\u79d1\u5b66\u8ba1\u6570\u6cd5\uff08\u5176\u5b9e\u5c31\u662f\u4e8c\u8fdb\u5236\u7684\u79d1\u5b66\u8ba1\u6570\u6cd5\uff09\uff0c\u5176\u4e2d \\(S\\) \u8868\u793a\u6570\u5b57\u7684\u6b63\u8d1f\u3002\\(E\\) \u8868\u793a\u7684\u662f\u5e42\u6b21\uff0c\u76f8\u5f53\u79d1\u5b66\u8ba1\u6570\u6cd5\\(10\\)\u53f3\u4e0a\u89d2\u7684\u6570\u5b57\uff0c\\(M\\) \u8868\u793a\u6709\u6548\u6570\u5b57\u3002</p> <p>\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u4e00\u4e2a\u5341\u8fdb\u5236\u7684\u79d1\u5b66\u8ba1\u6570\u6cd5 \\(-1\\times3.46\\times 10^{13}\\)\uff0c\u5982\u679c\u628a\u4ed6\u6309\u4e0a\u9762\u7684\u6807\u51c6\u5206\u7c7b\uff0c\\(-1\\)\u5c31\u662f\u4e0a\u9762\u7684 \\(S\\) \uff0c\\(13\\)\u5c31\u662f\u4e0a\u9762\u7684 \\(E\\) \uff0c\\(3.46\\)\u5c31\u662f\u4e0a\u9762\u7684 \\(M\\)\u3002</p> <p>\u4f46\u662f \\(E\\) \u548c \\(M\\)\uff0c\u53c8\u6709\u4e00\u4e9b\u7ec6\u8282\u4e0e\u5341\u8fdb\u5236\u4e0d\u540c\u3002</p> <ul> <li>\\(E\\)\u7684\u4e0d\u540c\uff1a \\(E\\)\u6709 \\(8\\) \u4e2a\u6bd4\u7279\u4f4d\uff0c\u53ef\u4ee5\u8868\u793a \\([0,255]\\) \u7684\u6570\u5b57\uff0c\u4f46\u662f\u4e3a\u4e86\u8868\u793a\u8d1f\u5e42\u6b21\uff0c\u6700\u540e\u771f\u5b9e\u7684\u5e42\u6b21\u8981\u51cf\u53bb \\(127\\) \uff0c\u5373\u4e3a \\(E-127\\) \uff0c\u6240\u4ee5 \\(float\\) \u7684\u5e42\u6b21\u8303\u56f4\u5e94\u8be5\u662f \\([-127,128]\\)\u3002</li> </ul> <p></p> <ul> <li>\\(M\\)\u7684\u4e0d\u540c\uff1a   \u4e3a\u4e86\u4fdd\u8bc1\u6709\u6548\u6570\u5b57\u8868\u793a\u7684\u552f\u4e00\u6027\uff0c\u79d1\u5b66\u8ba1\u6570\u6cd5\u89c4\u5b9a\u4e86\uff0c\u6709\u6548\u6570\u5b57\u4e2d\u5c0f\u6570\u70b9\u524d\u7684\u6570\u53ea\u80fd\u6709\u4e00\u4f4d\uff0c\u4e14\u8be5\u4f4d\u4e0d\u80fd\u4e3a \\(0\\) \uff0c\u4f46\u662f\u4e8c\u8fdb\u5236\u4e2d\u6bcf\u4f4d\u53ea\u80fd\u662f \\(0\\) \u6216 \\(1\\) \uff0c\u6240\u4ee5\u8be5\u4f4d\u53ea\u80fd\u662f \\(1\\)\uff0c\u5982\u679c\u53ea\u80fd\u662f \\(1\\) \u7684\u8bdd\u5176\u5b9e\u5c31\u6ca1\u5fc5\u8981\u5b58\u50a8\u4e86\uff0c\u5728\u7528\u5230\u65f6\u5019\u76f4\u63a5\u524d\u4e00\u4f4d\u8865 \\(1\\) \u5373\u53ef\u3002</li> </ul>"},{"location":"Math/Numerical/QSqrt/QSqrt/#_5","title":"\u4f18\u5316\u601d\u8def","text":""},{"location":"Math/Numerical/QSqrt/QSqrt/#float","title":"\\(float\\)\u7c7b\u578b","text":"<p>\u56e0\u4e3a\u683c\u96f7\u683c\u00b7\u6c83\u4ec0\u6700\u521d\u5199\u51fa\u7684\u5feb\u901f\u5e73\u65b9\u6839\u5012\u6570\u7b97\u6cd5\u662f \\(float\\) \u7c7b\u578b\u7684\uff0c\u6240\u4ee5\u8fd9\u91cc\u5148\u5c06 \\(float\\) \u7c7b\u578b\u3002</p> <p>\u6211\u4eec\u8ba8\u8bba\u7684\u6c42\u5e73\u65b9\u6839\u7684\u6570\u4e00\u5b9a\u662f\u6b63\u6570\uff0c\u90a3\u4e48\u6d6e\u70b9\u6570\u5b58\u50a8\u4e2d\u7684 \\(S\\) \u4e00\u5b9a\u4e3a \\(0\\) \u8fd9\u91cc\u5c31\u5ffd\u7565\u5b83\u3002</p> <p>\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u4e0a\u9762\u6807\u51c6\u4e2d\u7684 \\(M,E\\) \u8868\u793a\u4e00\u4e2a\u6d6e\u70b9\u6570\uff1a</p> \\[ x =  (1+\\frac{M}{2^{23}})\\times 2^{E-127} \\] <p>\u597d\u50cf\u53d8\u5f97\u66f4\u590d\u6742\u4e86\u554a\uff0c\u5582\uff01\u522b\u6025\u6765\u770b\u770b\u5927\u4f6c\u662f\u5982\u4f55\u5316\u7b80\u5b83\u7684\u3002</p> <p>\u6211\u4eec\u628a\u4e0a\u9762\u6c42\u89e3\u5e73\u65b9\u6839\u7684\u65b9\u7a0b\u62ff\u4e0b\u6765\uff0c\u5e26\u5165\u4e0a\u9762\u7684\u6d6e\u70b9\u6570\u8868\u8fbe\u5f0f\uff1a</p> \\[ \\sqrt{n}=x\\\\ \\] \\[ n^{\\frac{1}{2}}=x\\\\ \\] \\[ [(1+\\frac{M}{2^{23}})\\times 2^{E-127}]^{\\frac{1}{2}}=x \\] <p>\u5999\u7684\u6765\u4e86\uff0c\u5de6\u53f3\u540c\u65f6\u53d6\u5bf9\u6570\uff1a</p> \\[ \\log_2{[(1+\\frac{M}{2^{23}})\\times 2^{E-127}]^{\\frac{1}{2}}}=\\log_2{x} \\] \\[ \\frac{1}{2}\\times \\log_2{[(1+\\frac{M}{2^{23}})\\times 2^{E-127}]}=\\log_2{x} \\] \\[ \\frac{1}{2}\\times [\\log_2{(1+\\frac{M}{2^{23}})}+\\log_2{2^{E-127}}]=\\log_2{x} \\] \\[ \\frac{1}{2}\\times [\\log_2{(1+\\frac{M}{2^{23}})}+E-127]=\\log_2{x} \\] <p>\u5316\u7b80\u5230\u8fd9\u597d\u50cf\u5361\u4f4f\u4e86\u3002\\(\\log_2{(1+\\frac{M}{2^{23}})}\\) \u4e0d\u662f\u5f88\u597d\u5904\u7406\u3002\u53ef\u4ee5\u6ce8\u610f\u5230 \\(M\\) \u662f\u4e00\u4e2a \\(23bit\\)\u7684\u4e8c\u8fdb\u5236\u6570\uff0c\u90a3\u4e48 \\(\\frac{M}{2^{23}}\\) \u7684\u503c\u4e00\u5b9a\u4ecb\u4e8e \\([0,1]\\) \u4e4b\u95f4\u3002\u6211\u4eec\u753b\u51fa \\(\\log_2{(1+x)}\\) \u5728\u5b9a\u4e49\u57df \\([0,1]\\) \u7684\u51fd\u6570\u56fe\u50cf\uff1a</p> <p>\u6211\u4eec\u53d1\u73b0\u8fd9\u4e2a\u51fd\u6570\u5728 \\([0,1]\\) \u4e4b\u95f4\u548c\u548c \\(f(x)=x\\) \u975e\u5e38\u63a5\u8fd1\uff0c\u90a3\u4e48\u6211\u4eec\u76f4\u63a5\u7528 \\(\\frac{M}{2^{23}}\\) \u6765\u66ff\u6362 \\(\\log_2{(1+\\frac{M}{2^{23}})}\\)\uff0c\u518d\u5e26\u5165\u4e0a\u5f0f\u5f97\uff1a</p> \\[ \\frac{1}{2}\\times (\\frac{M}{2^{23}}+E-127)=\\log_2{x}\\\\ \\] <p>\u518d\u5316\u7b80\u51e0\u6b65\uff0c\u6211\u4eec\u80fd\u5f97\u5230\u4e0b\u5f0f\uff1a</p> \\[ \\frac{1}{2}\\times [\\frac{1}{2^{23}}\\times(2^{23}\\times E+M)-127]=\\log_2{x}\\\\ \\] <p>\u6211\u4eec\u4f1a\u53d1\u73b0\u4e00\u4e2a\u5f88\u719f\u6089\u7684\u5f62\u5f0f \\(2^{23}\\times E+M\\) \uff0c\u8fd9\u4e0d\u5c31\u662f \\(n\\) \u8fd9\u4e2a\u6d6e\u70b9\u6570\u7684\u4e8c\u8fdb\u5236\u5f62\u5f0f\u8868\u793a\u7684\u6574\u6570\u5417\uff1f\u6ca1\u770b\u51fa\u6765\uff1f\\(E\\times 2^{23}\\) \u4e0d\u5c31\u662f\u628a \\(E\\) \u7684\u4e8c\u8fdb\u5236\u4f4d\u5de6\u79fb \\(23\\) \u4f4d\u5417\uff0c\u7136\u540e\u52a0\u4e0a \\(M\\) \u8fd9\u4e2a\u6570\u3002\u628a\u4e0a\u9762\u7684\u56fe\u62ff\u4e0b\u6765\u5c31\u5f88\u76f4\u89c2\u4e86\u3002</p> <p>\u6211\u4eec\u5199\u7a0b\u5e8f\u65f6\u5c31\u53ef\u4ee5\u4ee5\u6574\u6570\u7684\u5f62\u5f0f\u6765\u5904\u7406\u8fd9\u7684\u6570\u636e\u5373\u53ef\uff0c\u4e0b\u9762\u6211\u4eec\u4ee5 \\(N\\) \u6765\u8868\u793a \\(n\\) \u7684\u4e8c\u8fdb\u5236\u5f62\u5f0f\u6240\u8868\u793a\u7684\u6574\u6570\u3002</p> <p>\u90a3\u4e48\u4e0a\u9762\u7684\u5f0f\u5b50\u5c31\u53ef\u4ee5\u8fdb\u4e00\u6b65\u5316\u7b80\uff1a</p> \\[ \\frac{1}{2}\\times (\\frac{1}{2^{23}}\\times N-127)=\\log_2{x}\\\\ \\] <p>\u6211\u4eec\u628a\u53f3\u8fb9\u7684 \\(\\log_2{x}\\) \u4e5f\u4ee5\u540c\u6837\u7684\u8fc7\u7a0b\u5316\u7b80\u6210\u76f8\u540c\u7684\u5f62\u5f0f\uff1a</p> \\[ \\frac{1}{2}\\times (\\frac{1}{2^{23}}\\times N-127)=\\frac{1}{2^{23}}\\times X-127\\\\ \\] \\[ X=\\frac{1}{2} N + 2^{22}\\cdot 127 \\] <p>\u7528\u8fd9\u4e2a\u5f0f\u5b50\u6c42\u51fa \\(X\\) \u518d\u4ee5\u6d6e\u70b9\u6570\u7684\u5f62\u5f0f\u8bfb\u53d6\u6570\u636e\u5c31\u80fd\u5f97\u5230\u4e00\u4e2a\u8fd8\u7b97\u63a5\u8fd1\u7b54\u6848\u7684\u521d\u59cb\u503c\u3002</p> <p>\u4f46\u662f\u6211\u4eec\u5728\u7528 \\(x\\) \u66ff\u6362 \\(\\log_2{x}\\) \u7684\u8fc7\u7a0b\u624d\u7c97\u7cd9\u4e86\uff0c\u56e0\u4e3a \\(\\log_2{x}\\) \u53ea\u6709\u5728 \\([0,1]\\) \u533a\u95f4\u7684\u4e24\u4e2a\u7aef\u70b9\u624d\u975e\u5e38\u63a5\u8fd1\uff0c\u5f53\u5728\u533a\u95f4\u7684\u4e2d\u95f4\u65f6\u8bef\u5dee\u8fd8\u662f\u6bd4\u8f83\u5927\u7684\uff0c\u5982\u679c\u60f3\u8ba9\u6574\u4f53\u533a\u95f4\u7684\u8bef\u5dee\u5c0f\u4e00\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06 \\(x\\) \u76f4\u7ebf\u5411\u4e0a\u79fb\u52a8\u4e00\u70b9\uff0c\u5373\u5c06 \\(x\\) \u53d8\u4e3a \\(x + \\varepsilon\\)\u3002\u6700\u7ec8\u4f53\u73b0\u5728\u7ed3\u679c\u5f0f\u4e2d\u5c31\u662f\u7ed9 \\(2^{23}\\cdot 127\\) \u52a0\u4e0a\u4e00\u4e2a\u4fee\u6b63\u503c\u3002</p> <p>\u4f46\u662f\u8fd9\u4e2a\u4fee\u6b63\u503c\u662f\u591a\u5c11\u6bd4\u8f83\u597d\u5462\uff0c\u6211\u4eec\u4ece \\(2^{23}\\cdot 127\\) \u5f00\u59cb\u5411\u4e24\u8fb9\u66b4\u529b\u641c\u7d22\u4e00\u4e0b\uff0c\u4f1a\u53d1\u73b0\u5f53\u5e38\u6570\u662f\\(531,961,421\\) \u7cbe\u5ea6\u662f\u6bd4\u8f83\u4e0d\u9519\u7684\u3002</p> <p>\u6211\u4eec\u518d\u8fdb\u884c\u4e00\u6b21\u725b\u987f\u8fed\u4ee3\u5c31\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u7cbe\u5ea6\u8fd8\u53ef\u4ee5\u7684\u7b54\u6848\uff1a</p> <pre><code>float Q_sqrt(float n)\n{\n    int N, X;\n    float x;\n    N = *(int*)&amp;n;\n    // 0x1FB5164D -&gt; 531,961,421\n    X = 0x1FB5164D + (N &gt;&gt; 1);\n    x = *(float*)&amp;X;\n    x = (x + n / x) / 2;    // 1st iteration\n    return x;\n}\n</code></pre> <p>\u4e3a\u4ec0\u4e48\u8bf4\u7cbe\u5ea6\u8fd8\u53ef\u4ee5\u5462\uff1f\u56e0\u4e3a\u53d7\u9650\u4e8e \\(float\\) \u578b\u53d8\u91cf\uff0c\u6700\u7ec8\u7b97\u51fa\u7684\u503c\u7cbe\u5ea6\u4e5f\u4e0d\u4f1a\u8d85\u8fc7 \\(10^{-8}\\) \uff0c\u6240\u4ee5\u4e0b\u9762\u6211\u4eec\u7528\u7c7b\u4f3c\u7684\u601d\u8def\u63a8\u5bfc \\(double\\) \u7c7b\u578b\u7684\u5feb\u901f\u5e73\u65b9\u6839\u3002</p>"},{"location":"Math/Numerical/QSqrt/QSqrt/#double","title":"\\(double\\)\u7c7b\u578b","text":"<p>\u6709\u4e86\u4e0a\u9762\u7684\u63a8\u5bfc\u7684\u57fa\u7840\uff0c\u4e0b\u9762\u63a8\u5bfc\u4f1a\u7b80\u5355\u5f88\u591a\u3002</p> <p>\u6211\u4eec\u5148\u628a \\(double\\) \u7c7b\u578b\u7684\u7ec4\u6210\u62ff\u51fa\u6765\u770b\u770b\uff1a</p> <p>\u6211\u4eec\u5f88\u5bb9\u6613\u5c31\u80fd\u5199\u51fa\u5b83\u7684\u6d6e\u70b9\u6570\u8868\u8fbe\u5f0f\uff1a</p> \\[ x =  (1+\\frac{M}{2^{52}})\\times 2^{E-1023 } \\] <p>\u90a3\u4e48 \\(\\frac{1}{2}\\log_2{n}=\\log_2{x}\\) \u5c31\u53ef\u4ee5\u5316\u7b80\u4e3a\uff1a</p> \\[ X = \\frac{1}{2}N+2^{51}\\cdot 1023 \\] <p>\u8fd9\u91cc\u4e0d\u662f\u5f88\u597d\u627e\u5230\u4e00\u4e2a\u4fee\u6b63\u91cf\u6765\u5f97\u5230\u4e00\u4e2a\u8db3\u591f\u7d27\u7f3a\u7684\u8fd1\u4f3c\u89e3\uff0c\u6240\u4ee5\u53ea\u80fd\u591a\u8fdb\u884c\u4e24\u6b21\u725b\u987f\u6cd5\uff0c\u6765\u5f97\u5230\u8db3\u591f\u7cbe\u786e\u7684\u7b54\u6848\u3002</p> <pre><code>double Q_sqrt(double n)\n{\n    ll N,X;\n    double x;\n    N = *(ll*)&amp;n;\n  // 0x1FF8000000000000ll -&gt; 1023 * (1 &lt;&lt; 51)\n    X = 0x1FF8000000000000ll + (N &gt;&gt; 1);\n    x = *(double*)&amp;X;\n    x = (x + n / x) / 2;    // 1st iteration\n    x = (x + n / x) / 2;    // 2nd iteration\n    x = (x + n / x) / 2;    // 3th iteration\n    return x;\n}   \n</code></pre>"},{"location":"Math/Numerical/QSqrt/QSqrt/#_6","title":"\u5feb\u901f\u6c42\u5e73\u65b9\u6839\u5012\u6570","text":"<p>\u5bf9\u4e8e \\(3D\\) \u56fe\u50cf\u5904\u7406\u6765\u8bf4\u6c42\u5e73\u65b9\u6839\u5012\u6570\u662f\u975e\u5e38\u91cd\u8981\u7684\uff0c\u800c\u7531\u683c\u96f7\u683c\u00b7\u6c83\u4ec0\u5199\u51fa\u7684\u5feb\u901f\u6c42\u5e73\u65b9\u6839\u5012\u6570\u7b97\u6cd5\u6781\u5927\u7684\u63d0\u9ad8\u7684\u6c42\u89e3\u5e73\u65b9\u6839\u5012\u6570\u7684\u6548\u7387\uff0c\u4e4b\u540e\u4e5f\u88ab\u8fd0\u7528\u5230\u6e38\u620f \u300a\u96f7\u795e\u4e4b\u95243\u300b\u7684\u6e90\u7801\u4e2d\u3002</p> <p>\u5feb\u901f\u6c42\u5e73\u65b9\u6839\u5012\u6570\u7b97\u6cd5\u7684\u539f\u7406\u548c\u4e0a\u6587\u4ecb\u7ecd\u7684\u76f8\u540c\uff0c\u53ea\u4e0d\u8fc7\u5e42\u6b21\u6362\u6210\u4e86 \\(-\\frac{1}{2}\\) \u3002</p> <pre><code>float Q_rsqrt( float number )\n{\n    long i;\n    float x2, y;\n    const float threehalfs = 1.5F;\n\n    x2 = number * 0.5F;\n    y  = number;\n    i  = * ( long * ) &amp;y;                       // evil floating point bit level hacking\n    i  = 0x5f3759df - ( i &gt;&gt; 1 );               // what the fuck? \n    y  = * ( float * ) &amp;i;\n    y  = y * ( threehalfs - ( x2 * y * y ) );   // 1st iteration\n//  y  = y * ( threehalfs - ( x2 * y * y ) );   // 2nd iteration, this can be removed\n\n    return y;\n}\n</code></pre> <p>\u73b0\u5728\u6765\u770b\u5b66\u4e60\u5feb\u901f\u5e73\u65b9\u6839\u7b97\u6cd5\u597d\u50cf\u6ca1\u4ec0\u4e48\u5fc5\u8981\uff0c\u56e0\u4e3a\u5404\u4e2a\u786c\u4ef6\u5382\u5546\u90fd\u5bf9\u5e73\u65b9\u6839\u7b97\u6cd5\u6709\u5f88\u591a\u786c\u4ef6\u4e0a\u7684\u4f18\u5316\uff0c\u8ba1\u7b97\u901f\u5ea6\u5f88\u5feb\u3002</p> <p>\u4f46\u662f\u8fd9\u6bb5\u4ee3\u7801\u53ef\u4ee5\u8bf4\u5bf9\u6e38\u620f\u5386\u53f2\u4ea7\u751f\u4e86\u5de8\u5927\u5f71\u54cd\uff0c\u5728\u90a3\u4e2a\u6ca1\u6709\u663e\u5361\u7684\u5e74\u4ee3\uff0c\u8ba9\u4eba\u4eec\u53ef\u4ee5\u73a9\u5230 \\(3D\\) \u4f5c\u54c1\uff0c\u4e0d\u5f97\u4e0d\u8bf4\u5728\u90a3\u4e2a\u53d7\u9650\u4e8e\u786c\u4ef6\u7684\u5e74\u4ee3\uff0c\u4eba\u4eba\u90fd\u662f\u7b97\u6cd5\u4f18\u5316\u5927\u5e08\u3002</p>"},{"location":"Others/Git/","title":"Index","text":""},{"location":"Others/Git/#_1","title":"\u62c9\u53d6\u8fdc\u7aef","text":"<pre><code>git log \n</code></pre>"},{"location":"Others/Git/#_2","title":"\u7248\u672c\u56de\u9000","text":"<pre><code>git reset [--soft | --mixed | --hard] [HEAD]\n</code></pre> <ul> <li> <p>--mixed \u4e3a\u9ed8\u8ba4\u9009\u9879\uff0c\u4f7f\u2f64\u65f6\u53ef\u4ee5\u4e0d\u2f64\u5e26\u8be5\u53c2\u6570\u3002\u8be5\u53c2\u6570\u5c06\u6682\u5b58\u533a\u7684\u5185\u5bb9\u9000\u56de\u4e3a\u6307\u5b9a\u63d0\u4ea4\u7248\u672c\u5185\u5bb9\uff0c\u2f2f\u4f5c\u533a\u2f42\u4ef6\u4fdd\u6301\u4e0d\u53d8\u3002</p> </li> <li> <p>--soft \u53c2\u6570\u5bf9\u4e8e\u2f2f\u4f5c\u533a\u548c\u6682\u5b58\u533a\u7684\u5185\u5bb9\u90fd\u4e0d\u53d8\uff0c\u53ea\u662f\u5c06\u7248\u672c\u5e93\u56de\u9000\u5230\u67d0\u4e2a\u6307\u5b9a\u7248\u672c\u3002</p> </li> <li> <p>--hard \u53c2\u6570\u5c06\u6682\u5b58\u533a\u4e0e\u2f2f\u4f5c\u533a\u90fd\u9000\u56de\u5230\u6307\u5b9a\u7248\u672c\u3002\u5207\u8bb0\u2f2f\u4f5c\u533a\u6709\u672a\u63d0\u4ea4\u7684\u4ee3\u7801\u65f6\u4e0d\u8981\u2f64\u8fd9\u4e2a\u547d\u4ee4\uff0c\u56e0\u4e3a\u2f2f\u4f5c\u533a\u4f1a\u56de\u6eda\uff0c\u4f60\u6ca1\u6709\u63d0\u4ea4\u7684\u4ee3\u7801\u5c31\u518d\u4e5f\u627e\u4e0d\u56de\u4e86\uff0c\u6240\u4ee5\u4f7f\u2f64\u8be5\u53c2\u6570\u524d\u2f00\u5b9a\u8981\u614e\u91cd\u3002</p> </li> </ul> <p>HEAD \u8bf4\u660e\uff1a</p> <p>\u53ef\u76f4\u63a5\u5199\u6210 commit id\uff0c\u8868\u793a\u6307\u5b9a\u9000\u56de\u7684\u7248\u672c</p> <ul> <li> <p>HEAD \u8868\u793a\u5f53\u524d\u7248\u672c</p> </li> <li> <p>HEAD^ \u4e0a\u2f00\u4e2a\u7248\u672c</p> </li> <li> <p>HEAD^^ \u4e0a\u4e0a\u2f00\u4e2a\u7248\u672c</p> </li> </ul> <p>\u4e5f\u53ef\u4ee5\u4f7f\u2f64 ~\u6570\u5b57 \u8868\u793a\uff1a</p> <ul> <li> <p>HEAD~0 \u8868\u793a\u5f53\u524d\u7248\u672c</p> </li> <li> <p>HEAD~1 \u4e0a\u2f00\u4e2a\u7248\u672c</p> </li> <li> <p>HEAD~2 \u4e0a\u4e0a\u2f00\u4e2a\u7248\u672c</p> </li> </ul>"},{"location":"Others/Git/#commit","title":"commit \u65e5\u5fd7","text":"<p>\u663e\u793a commit \u7684\u8bb0\u5f55\uff1a</p> <pre><code>git log [&lt;options&gt;] [&lt;revision-range&gt;] [[--] &lt;path&gt;\u2026\u200b]\n</code></pre> <p>\u4f7f\u7528 --graph \u53ef\u4ee5\u66f4\u7f8e\u89c2\u7684\u663e\u793a\u63d0\u4ea4\u8bb0\u5f55\u3002</p>"},{"location":"Others/JSON/","title":"Index","text":"<p>JSON\uff08JavaScript Object Notation, JS\u5bf9\u8c61\u7b80\u8c31\uff09\u662f\u4e00\u79cd\u8f7b\u91cf\u7ea7\u7684\u6570\u636e\u4ea4\u6362\u683c\u5f0f\u3002\u5b83\u91c7\u7528\u5b8c\u5168\u72ec\u7acb\u4e8e\u7f16\u7a0b\u8bed\u8a00\u7684\u6587\u672c\u683c\u5f0f\u6765\u5b58\u50a8\u548c\u8868\u793a\u6570\u636e\u3002\u7b80\u6d01\u548c\u6e05\u6670\u7684\u5c42\u6b21\u7ed3\u6784\u4f7f\u5f97 JSON \u6210\u4e3a\u7406\u60f3\u7684\u6570\u636e\u4ea4\u6362\u8bed\u8a00\u3002 \u6613\u4e8e\u4eba\u9605\u8bfb\u548c\u7f16\u5199\uff0c\u540c\u65f6\u4e5f\u6613\u4e8e\u673a\u5668\u89e3\u6790\u548c\u751f\u6210\uff0c\u5e76\u6709\u6548\u5730\u63d0\u5347\u7f51\u7edc\u4f20\u8f93\u6548\u7387\u3002</p>"},{"location":"Others/JSON/#_1","title":"\u57fa\u7840\u8bed\u6cd5","text":"<p>JSON \u8bed\u6cd5\u662f JavaScript \u5bf9\u8c61\u8868\u793a\u8bed\u6cd5\u7684\u5b50\u96c6\u3002json \u5bf9\u8c61\u4e2d\u6bcf\u4e2a\u5143\u7d20\u7684\u90fd\u662f\u4ee5 <code>key : value</code> \u7684\u5f62\u5f0f\u6765\u7ec4\u7ec7\u7684\u3002\u901a\u5e38 value \u53ef\u4ee5\u662f\u5bf9\u3001\u6570\u7ec4\u3001\u6570\u5b57\uff08\u6574\u5f62\u6216\u6d6e\u70b9\uff09\u3001\u5e03\u5c14\u503c\u3001null\u3002</p> <p>\u4e00\u4e2a json \u5bf9\u8c61\u7531 \u4e00\u5bf9 <code>{}</code> \u6269\u8d77\u6765\u3002\u4e00\u4e2a json \u6570\u7ec4\u7531 <code>[]</code> \u6269\u8d77\u6765\uff0c\u4e0b\u9762\u662f\u4e00\u4e2a json \u7684\u6570\u636e\uff1a</p> <pre><code>{\n  \"name\": \"John Doe\",\n  \"age\": 30,\n  \"isEmployed\": true,\n  \"address\": {\n    \"street\": \"123 Main St\",\n    \"city\": \"Anytown\",\n    \"state\": \"CA\",\n    \"country\": \"USA\"\n  },\n  \"hobbies\": [\"reading\", \"traveling\", \"coding\"],\n  \"friends\": [\n    {\n      \"name\": \"Jane Smith\",\n      \"age\": 28\n    },\n    {\n      \"name\": \"Tom Johnson\",\n      \"age\": 32\n    }\n  ]\n}\n</code></pre> <p>\u8fd9\u662f\u4e00\u4e2a\u63cf\u8ff0\u4e00\u4e2a\u4eba\u7684JSON\u6570\u636e\u3002\u4e0b\u9762\u662f\u5bf9\u5176\u5404\u4e2a\u90e8\u5206\u7684\u89e3\u91ca\uff1a</p> <ol> <li>name: \u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u8868\u793a\u6b64\u4eba\u7684\u540d\u5b57\uff0c\u8fd9\u91cc\u662f\"John Doe\"\u3002</li> <li>age: \u4e00\u4e2a\u6570\u5b57\uff0c\u8868\u793a\u6b64\u4eba\u7684\u5e74\u9f84\uff0c\u8fd9\u91cc\u662f30\u3002</li> <li>isEmployed: \u4e00\u4e2a\u5e03\u5c14\u503c\uff0c\u8868\u793a\u6b64\u4eba\u662f\u5426\u5728\u804c\uff0c\u8fd9\u91cc\u662ftrue\u3002</li> <li> <p>address: \u4e00\u4e2a\u5bf9\u8c61\uff0c\u5305\u542b\u6b64\u4eba\u7684\u5730\u5740\u4fe1\u606f\u3002</p> <ul> <li>street: \u8857\u9053\u5730\u5740\uff0c\u8fd9\u91cc\u662f\"123 Main St\"\u3002</li> <li>city: \u57ce\u5e02\u540d\uff0c\u8fd9\u91cc\u662f\"Anytown\"\u3002</li> <li>state: \u5dde\u6216\u7701\u4efd\u540d\uff0c\u8fd9\u91cc\u662f\"CA\"\u3002</li> <li>country: \u56fd\u5bb6\u540d\uff0c\u8fd9\u91cc\u662f\"USA\"\u3002</li> </ul> </li> <li> <p>hobbies: \u4e00\u4e2a\u6570\u7ec4\uff0c\u5305\u542b\u6b64\u4eba\u7684\u7231\u597d\u3002\u8fd9\u91cc\u6709\u4e09\u4e2a\u7231\u597d\uff1a\"reading\", \"traveling\", \"coding\"\u3002</p> </li> <li> <p>friends: \u4e00\u4e2a\u6570\u7ec4\uff0c\u5305\u542b\u6b64\u4eba\u7684\u670b\u53cb\u4fe1\u606f\u3002\u6bcf\u4e2a\u670b\u53cb\u90fd\u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5305\u542b\u4ed6\u4eec\u7684\u540d\u5b57\u548c\u5e74\u9f84\u3002</p> <ul> <li>\u7b2c\u4e00\u4e2a\u670b\u53cb\u7684\u540d\u5b57\u662f\"Jane Smith\"\uff0c\u5e74\u9f84\u662f28\u3002</li> <li>\u7b2c\u4e8c\u4e2a\u670b\u53cb\u7684\u540d\u5b57\u662f\"Tom Johnson\"\uff0c\u5e74\u9f84\u662f32\u3002</li> </ul> </li> </ol>"},{"location":"Others/JSON/#_2","title":"\u5e8f\u5217\u5316\u4e0e\u53cd\u5e8f\u5217\u5316","text":"<p>JSON\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u662f\u6570\u636e\u5904\u7406\u4e2d\u7684\u4e24\u4e2a\u91cd\u8981\u6982\u5ff5\uff0c\u7279\u522b\u662f\u5728\u7f16\u7a0b\u548c\u7f51\u7edc\u901a\u4fe1\u4e2d\u3002\u5b83\u4eec\u5206\u522b\u7528\u4e8e\u5c06\u6570\u636e\u5bf9\u8c61\uff08\u5982\u6570\u7ec4\u3001\u5bf9\u8c61\u7b49\uff09\u8f6c\u6362\u4e3aJSON\u683c\u5f0f\u7684\u5b57\u7b26\u4e32\uff0c\u4ee5\u53ca\u5c06JSON\u683c\u5f0f\u7684\u5b57\u7b26\u4e32\u8f6c\u6362\u56de\u6570\u636e\u5bf9\u8c61\u3002</p> <p>\u5728JSON\u5e8f\u5217\u5316\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6570\u636e\u5bf9\u8c61\u7684\u5c5e\u6027\u548c\u503c\u88ab\u8f6c\u6362\u6210JSON\u683c\u5f0f\u7684\u5b57\u7b26\u4e32\u8868\u793a\u3002\u4f8b\u5982\uff0c\u4e00\u4e2aJavaScript\u5bf9\u8c61 <code>{ name: \"John Doe\", age: 30 }</code> \u53ef\u80fd\u4f1a\u88ab\u5e8f\u5217\u5316\u4e3a JSON \u5b57\u7b26\u4e32 <code>\"{\"name\":\"John Doe\",\"age\":30}\"</code>\u3002</p> <p>\u5728JSON\u53cd\u5e8f\u5217\u5316\u7684\u8fc7\u7a0b\u4e2d\uff0cJSON\u5b57\u7b26\u4e32\u88ab\u89e3\u6790\u5e76\u8f6c\u6362\u56de\u539f\u59cb\u7684\u6570\u636e\u5bf9\u8c61\u3002\u4f8b\u5982\uff0cJSON \u5b57\u7b26\u4e32 <code>\"{\"name\":\"John Doe\",\"age\":30}\"</code> \u53ef\u80fd\u4f1a\u88ab\u53cd\u5e8f\u5217\u5316\u4e3a\u4e00\u4e2aJavaScript\u5bf9\u8c61 <code>{ name: \"John Doe\", age: 30 }</code>\u3002</p>"},{"location":"Others/xmake/","title":"Index","text":""},{"location":"Others/xmake/#_1","title":"\u7b80\u4ecb","text":"<p>\u5b98\u7f51\u94fe\u63a5</p> <p>xmake \u662f\u4e00\u4e2a\u57fa\u4e8e Lua \u7684\u8f7b\u91cf\u7ea7\u8de8\u5e73\u53f0\u6784\u5efa\u5de5\u5177\uff0c\u4f7f\u7528 xmake.lua \u7ef4\u62a4\u9879\u76ee\u6784\u5efa\uff0c\u76f8\u6bd4 makefile/CMakeLists.txt\uff0c\u914d\u7f6e\u8bed\u6cd5\u66f4\u52a0\u7b80\u6d01\u76f4\u89c2\uff0c\u5bf9\u65b0\u624b\u975e\u5e38\u53cb\u597d\uff0c\u77ed\u65f6\u95f4\u5185\u5c31\u80fd\u5feb\u901f\u5165\u95e8\uff0c\u80fd\u591f\u8ba9\u7528\u6237\u628a\u66f4\u591a\u7684\u7cbe\u529b\u96c6\u4e2d\u5728\u5b9e\u9645\u7684\u9879\u76ee\u5f00\u53d1\u4e0a\u3002</p> <p>xmake \u8fd8\u6709\u5185\u7f6e\u7684\u5305\u4f9d\u8d56\u7ba1\u7406\uff0c\u901a\u8fc7 lua \u8bed\u8a00\u7684\u7b80\u5355\u914d\u7f6e\uff0c\u5373\u53ef\u5b9e\u73b0\u5bf9 C/C++ \u4e09\u65b9\u5e93\u7684\u7ba1\u7406\uff0c xmake \u8fd8\u6709\u5176\u81ea\u5e26\u7684\u5b98\u65b9\u5e93 xrepo\u3002</p> <p>xrepo \u662f\u4e00\u4e2a\u57fa\u4e8e Xmake \u7684\u8de8\u5e73\u53f0 C/C++ \u5305\u7ba1\u7406\u5668\u3002</p> <p>\u5b83\u57fa\u4e8e xmake \u63d0\u4f9b\u7684\u8fd0\u884c\u65f6\uff0c\u4f46\u5374\u662f\u4e00\u4e2a\u5b8c\u6574\u72ec\u7acb\u7684\u5305\u7ba1\u7406\u7a0b\u5e8f\uff0c\u76f8\u6bd4 vcpkg/homebrew \u6b64\u7c7b\u5305\u7ba1\u7406\u5668\uff0cxrepo \u80fd\u591f\u540c\u65f6\u63d0\u4f9b\u66f4\u591a\u5e73\u53f0\u548c\u67b6\u6784\u7684 C/C++ \u5305\u3002</p>"},{"location":"Others/xmake/#_2","title":"\u5feb\u901f\u4f7f\u7528","text":""},{"location":"Others/xmake/#_3","title":"\u521b\u5efa\u9879\u76ee","text":"<pre><code>xmake create [\u9879\u76ee\u540d] [-l \u9879\u76ee\u4f7f\u7528\u7684\u8bed\u8a00] [-P \u5df2\u6709\u9879\u76ee\u8def\u5f84]\n</code></pre> <p>\u6211\u4f7f\u7528 <code>xmake create hello</code> \u6765\u521b\u5efa\u5b98\u65b9\u4e3a\u6211\u4eec\u51c6\u5907\u7684\u793a\u4f8b\u9879\u76ee\uff0c\u5176\u9879\u76ee\u7ed3\u6784\u5982\u4e0b\uff1a</p> <pre><code>hello\n\u251c\u2500\u2500 src\n\u2502   \u2514\u2500\u2500 hello.cpp\n\u2514\u2500\u2500 xmake.lua\n</code></pre> <p>\u8fd9\u91cc\u53ef\u4ee5\u5927\u81f4\u770b\u4e00\u4e0b xmake.lua \u7684\u5185\u5bb9</p> hello.cppxmake.lua <pre><code>#include &lt;iostream&gt;\n\nint main(int argc, char** argv) {\n    std::cout &lt;&lt; \"hello world!\" &lt;&lt; std::endl;\n    return 0;\n}\n</code></pre> <pre><code>add_rules(\"mode.debug\", \"mode.release\") -- \u6dfb\u52a0\u8c03\u8bd5\u6a21\u5f0f\u548c\u53d1\u884c\u6a21\u5f0f\n\ntarget(\"hello\")    -- \u6784\u5efa\u76ee\u6807\n    set_kind(\"binary\")  -- \u76ee\u6807\u7c7b\u578b\n    add_files(\"src/*.cpp\")  -- \u6784\u5efa\u76ee\u6807\u6240\u9700\u6e90\u6587\u4ef6\n</code></pre> <p>\u5b83\u89c4\u5b9a\u4e86\u4e00\u4e2a\u8981\u6784\u5efa\u7684\u76ee\u6807 \"hello\" \uff0c\u4ee5\u53ca\u8fd9\u4e2a\u76ee\u6807\u7684\u7c7b\u578b\u548c\u6240\u9700\u6e90\u6587\u4ef6\u3002</p> <p>\u4e00\u4e2a\u9879\u76ee\u4e2d\u53ef\u4ee5\u6709\u591a\u4e2a target \u76ee\u6807\u3002\u76ee\u6807\u7684\u79cd\u7c7b\u53ef\u4ee5\u662f\uff1a\u53ef\u4ee5\u6267\u884c\u7a0b\u5e8f \"binary\"\uff0c\u9759\u6001\u5e93 \"static\"\uff0c\u52a8\u6001\u5e93 \"shared\"\u3002</p>"},{"location":"Others/xmake/#_4","title":"\u6784\u5efa\u9879\u76ee","text":"<p>\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u6765\u6784\u5efa\u6307\u5b9a target\uff0c\u5f53\u6211\u4eec\u7701\u7565 target \u65f6\uff0cxmake \u4f1a\u4e3a\u6211\u4eec\u6784\u5efa\u6240\u6709\u7684 target\u3002 </p> <pre><code>xmake build [target_name]\nxmake b [target_name]\n</code></pre> <p>\u8fd9\u91cc\u6784\u5efa\u65f6\uff0c\u662f\u5904\u4e8e release \u6a21\u5f0f\u4e0b\uff0c\u8bf4\u660e xmake \u9ed8\u8ba4\u7684\u6784\u5efa\u6a21\u5f0f\u5c31\u662f release\u3002\u60f3\u8981\u5207\u6362\u4e3a debug \u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\uff1a</p> <pre><code>xmake config -m debug\n</code></pre> <p>\u6784\u5efa\u7684\u9879\u76ee\u53ef\u6267\u884c\u7a0b\u5e8f\u4f1a\u653e\u4e0b\u5982\u4e0b\u8def\u5f84\uff1a</p> <p></p>"},{"location":"Others/xmake/#_5","title":"\u8fd0\u884c\u7a0b\u5e8f","text":"<pre><code>xmake run [target_name]\nxmake r [target_name]\n</code></pre> <p>\u4e0e build \u76f8\u540c\u7684\uff0c\u5982\u679c\u6211\u4eec\u7701\u7565 target \uff0c\u4ed6\u4f1a\u8fd0\u884c\u6240\u6709\u7684 target\u3002</p> <p></p>"},{"location":"Others/xmake/#_6","title":"\u6e05\u7406\u7f13\u5b58","text":"<pre><code>xmake clean [target_name]\nxmake c [target_name]\n</code></pre> <p>\u6e05\u7406\u5bf9\u5e94\u76ee\u6807\u7684\u7f13\u5b58\uff0c\u6ce8\u610f\u5982\u679c\u4f60\u5904\u4e8e debug \u6a21\u5f0f\u4e0b\uff0c\u53ea\u4f1a\u6e05\u7406 debug \u7684\u7f13\u5b58\uff0c\u5904\u4e8e release \u540c\u7406\u3002</p>"},{"location":"Others/xmake/config/","title":"Config","text":""},{"location":"Others/xmake/config/#_1","title":"\u63cf\u8ff0\u57df","text":""},{"location":"Others/xmake/config/#_2","title":"\u914d\u7f6e\u57df","text":""},{"location":"Others/xmake/config/#api","title":"API \u63a5\u53e3","text":""},{"location":"String/KMP/KMP/","title":"KMP","text":""},{"location":"String/KMP/KMP/#_1","title":"\u7b80\u4ecb","text":"<p>\u7b80\u4ecb\uff1a \\(KMP\\) \u7b97\u6cd5\u662f \\(D.E.Knuth\u3001J,H,Morris\\) \u548c \\(V.R.Pratt\\) \u53d1\u8868\u7684\u4e00\u4e2a\u6a21\u5f0f\u5339\u914d\u7b97\u6cd5\uff0c\u53ef\u4ee5\u5927\u5927\u907f\u514d\u91cd\u590d\u904d\u5386\u7684\u60c5\u51b5\uff08\u5373\u6d88\u9664\u4e86\u4e3b\u4e32\u6307\u9488\u56de\u6eaf\u7684\uff09\uff0c\u4ece\u800c\u63d0\u9ad8\u7b97\u6cd5\u6548\u7387\u3002</p>"},{"location":"String/KMP/KMP/#_2","title":"\u6734\u7d20\u5339\u914d\u7b97\u6cd5","text":"<p>\u7ed9\u6211\u4eec\u4e00\u4e2a\u4e3b\u4e32\u548c\u6a21\u5f0f\u4e32\uff0c\u8981\u6211\u4eec\u5728\u6a21\u5f0f\u4e32\u4e2d\u627e\u5230\u4e3b\u4e32\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u6bd4\u8f83\u5bb9\u6613\u60f3\u5230\u7684\u66b4\u529b\u8fd9\u505a\u6cd5\u5c31\u662f\u4ece\u4e3b\u4e32\u7684\u5f00\u5934\u4e0e\u6a21\u5f0f\u4e32\u4e00\u4e00\u8fdb\u884c\u6bd4\u8f83\u3002</p> <p>\u5982\u679c\u9047\u5230\u5b57\u7b26\u4e0d\u540c\uff0c\u5c31\u5c06\u4e24\u4e2a\u6307\u9488\u56de\u9000\uff0c\u91cd\u65b0\u5f00\u59cb\u5339\u914d\u3002</p> <p>\u8fd9\u6837\u7684\u95ee\u9898\u4e5f\u5f88\u660e\u663e\uff0c\u5f53\u6a21\u5f0f\u4e32\u548c\u4e3b\u4e32\u4e2d\u6709\u5927\u91cf\u91cd\u590d\u5b57\u7b26\u65f6\uff0c\u7b97\u6cd5\u7684\u6548\u7387\u5c31\u4f1a\u5341\u5206\u4f4e\u4e0b\uff0c\u5982\uff1a\u6a21\u5f0f\u4e32\u4e3a\uff1a\\(aaaaaab\\)\u4e3b\u4e32\u4e3a\\(aaab\\)\uff0c\u6bcf\u6b21\u5339\u914d\u90fd\u8981\u5b8c\u6574\u904d\u5386\u4e3b\u4e32\uff0c\u7136\u4f1a\u56de\u6eaf\u5230\u4e3b\u4e32\u5f00\u5934\uff0c\u7ee7\u7eed\u4e0b\u4e00\u6b21\u5339\u914d\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(nm)\\)\uff0c\\(n\\)\u4e3a\u6a21\u5f0f\u4e32\u957f\u5ea6\uff0c\\(m\\)\u4e3a\u4e3b\u4e32\u957f\u5ea6\u3002</p> <p>KMP\u7b97\u6cd5\u5c31\u662f\u5bf9\u6b64\u8fdb\u884c\u7684\u4f18\u5316\uff0c\u6709\u6548\u7684\u51cf\u5c11\u4e86\\(j\\)\u6307\u9488\u65e0\u610f\u4e49\u7684\u56de\u6eaf\u3002</p>"},{"location":"String/KMP/KMP/#kmp_1","title":"KMP \u7b97\u6cd5","text":""},{"location":"String/KMP/KMP/#next","title":"next \u6570\u7ec4\u6c42\u89e3","text":"<p>\u5df2\u7ecf\u5728\u4e4b\u524d\u7684\u535a\u5ba2\u8bb2\u89e3\u8fc7\u4e86\uff0c\u53ef\u4ee5\u53bb\u770b\u770b\uff1a\\(KMP\\)\u7b97\u6cd5\uff08\\(C\\)\u8bed\u8a00\uff09\u2014\u2014next\u6570\u7ec4\u7684\u6c42\u89e3</p>"},{"location":"String/KMP/KMP/#kmp_2","title":"KMP \u5b9e\u73b0","text":"<p>\u6709\u4e86\\(next\\)\u6570\u7ec4\uff0c\\(KMP\\)\u5c31\u5f88\u597d\u5b9e\u73b0\u4e86\uff0c\u5c31\u662f\u5728\u4e24\u4e2a\u4e32\u4e0d\u5339\u914d\u65f6\uff0c\u5c06\u4e3b\u4e32\u6307\u9488\u56de\u6eaf\u5230\\(next\\)\u6570\u7ec4\u4e2d\u8ba1\u7b97\u51fa\u7684\u4f4d\u7f6e\u5373\u53ef\u3002 <pre><code>int kmp(string&amp; p, string&amp; s, int pos) {\n    int i = pos, j = 0, cnt = 0;\n    getNext(s);\n    while (i &lt; p.size()) {\n        if (j == -1 || p[i] == s[j])\n            ++j, ++i;\n        else j = nex[j];\n        if (j == s.size()) {\n            cnt++;\n            j = nex[j];\n        }\n    }\n    return cnt;\n}\n</code></pre></p>"},{"location":"String/KMP/KMP/#nextval","title":"nextval \u6570\u7ec4","text":"<p>\u867d\u7136\u73b0\u5728\u7684 \\(next\\) \u6570\u7ec4\u5bf9\u56de\u6eaf\u6709\u5f88\u5927\u7684\u4f18\u5316\uff0c\u4f46\u662f\u4f9d\u7136\u4f1a\u51fa\u73b0\u4e00\u4e9b\u65e0\u610f\u4e49\u7684\u56de\u6eaf\uff0c\u5982\uff1a</p> <p>\u6211\u4eec\u56de\u6eaf\u4e00\u6b21\u540e\u662f</p> <p>\u8fd9\u4e00\u6b65\u662f\u5b8c\u5168\u6ca1\u6709\u610f\u4e49\u7684\uff0c\\(B\\) \u5df2\u8fd1\u4e0d\u5339\u914d\u4e86\uff0c\u524d\u9762\u7684 \\(B\\) \u4e00\u5b9a\u662f\u4e0d\u5339\u914d\u7684\u3002\u800c\u5bfc\u81f4\u8fd9\u6837\u7684\u539f\u56e0\u4e5f\u5f88\u7b80\u5355\u5c31\u662f\uff1a\\(s[j]=s[next[j]]\\)\uff0c\u6211\u4eec\u53ea\u8981\u5728\u6c42\u89e3 \\(next\\) \u6570\u7ec4\u65f6\u52a0\u4e0a\u4e00\u5c42\u5224\u65ad\u5373\u53ef\u3002</p> <pre><code>void getNext(string&amp; s) {\n    nex[0] = -1;\n    int i = -1, j = 0;\n    while (j &lt; s.size()) {\n        if (i == -1 || s[i] == s[j]) {\n            if (s[++j] == s[++i])nex[j] = nex[i];\n            else nex[j] = i;\n        }\n        else i = nex[i];\n    }\n}\n</code></pre> <p>\u53c2\u8003\u6587\u7ae0: KMP\u7b97\u6cd5\u2014\u7ec8\u4e8e\u5168\u90e8\u5f04\u61c2\u4e86 \u300a\u5927\u8bdd\u6570\u636e\u7ed3\u6784\u300b B-\u7ad9KMP\u7b97\u6cd5\u6613\u61c2\u7248</p>"},{"location":"String/KMP/Problems/","title":"Exercise","text":"\u9898\u76ee \u96be\u5ea6 \u77e5\u8bc6 \u5b57\u7b26\u4e32\u8f6c\u6362 \u56f0\u96be \u77e9\u9635\u5feb\u901f\u5e42+dp+KMP"},{"location":"String/Manacher/Manacher/","title":"\u9a6c\u62c9\u8f66","text":"<p>\u56de\u6587\u4e32\u5b9a\u4e49\uff1a\u5373\u6b63\u7740\u770b\u53cd\u7740\u770b\u90fd\u4e00\u6837\u7684\u5b57\u7b26\u4e32\uff0c\u5982\\(aba\u3001aaa\u3001cac\\)\uff0c\u56de\u6587\u4e32\u53ef\u4ee5\u5206\u4e3a\u5947\u56de\u6587\u4e32\u548c\u5076\u56de\u6587\u4e32\uff0c\\(abba\\)\u5c31\u662f\u4e00\u4e2a\u5076\u56de\u6587\u4e32\uff0c\\(aba\\)\u5c31\u662f\u4e00\u4e2a\u5947\u56de\u6587\u4e32</p>"},{"location":"String/Manacher/Manacher/#_1","title":"\u6c42\u6700\u957f\u56de\u6587\u4e32\u7684\u4e00\u822c\u601d\u8def","text":"<p>\u4f8b\u9898 -\u3010\u6a21\u677f\u3011manacher \u7b97\u6cd5</p> <p>\u6c42\u6700\u957f\u56de\u6587\u5b50\u4e32\u7684\u65b9\u6cd5\uff0c\u6700\u5bb9\u6613\u60f3\u5230\u7684\u5c31\u662f\u66b4\u529b\u679a\u4e3e\uff0c\u5c06\u6240\u6709\u7684\u56de\u6587\u5b50\u4e32\u90fd\u627e\u51fa\u6765\uff0c\u7136\u540e\u627e\u505a\u5927\u7684\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u76f8\u5f53\u9ad8\u4e86\\(O(n^3)\\)\u3002</p> <p>\u8fd8\u6709\u6bd4\u8f83\u5bb9\u6613\u60f3\u5230\u7684\u5c31\u662f\u533a\u95f4\\(dp\\)\uff0c\u60f3\u6cd5\u5c31\u662f\\(S[i]\\)\u5230\\(S[j]\\)\u662f\u56de\u6587\u4e32\u7684\u524d\u63d0\u662f\\(S[i+1]\\)\u5230\\(s[j-1]\\)\u662f\u56de\u6587\u4e32\uff0c\u662f\u533a\u95f4\\(dp\\)\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f\\(O(n^2)\\)\uff0c\u5bf9\u4e8e\u66b4\u529b\u679a\u4e3e\u6765\u8bf4\u6709\u6240\u4f18\u5316\u3002</p> <p>\u8fd8\u6709\u53e6\u4e00\u79cd\u679a\u4e3e\u7684\u65b9\u6cd5\uff0c\u662f\u4e2d\u5fc3\u6269\u6563\u6cd5\uff0c\u5229\u7528\u4e86\u56de\u6587\u4e32\u7684\u5bf9\u79f0\u6027\uff0c\u679a\u4e3e\u6bcf\u4e00\u4e2a\u5b57\u7b26\uff0c\u7136\u540e\u4ece\u4e2d\u5fc3\u5411\u4e24\u8fb9\u6bd4\u8f83\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e5f\u4e3a\\(O(n^2)\\)</p> <p>\u4eca\u5929\u4ecb\u7ecd\u7684\u8fd9\u4e2a\u7b97\u6cd5\u53ef\u4ee5\u5c06\u65f6\u95f4\u590d\u6742\u5ea6\u964d\u5230\u7ebf\u6027\u7684\\(O(n)\\)\u3002</p>"},{"location":"String/Manacher/Manacher/#_2","title":"\u7b97\u6cd5\u601d\u8def","text":"<p>\u9a6c\u62c9\u8f66\u7b97\u6cd5\u5145\u5206\u5229\u7528\u4e86\u56de\u6587\u4e32\u7684\u5bf9\u79f0\u6027\u548c\u4e4b\u524d\u904d\u5386\u8fc7\u7684\u533a\u95f4\u3002\u7b97\u6cd5\u7684\u4e3b\u8981\u601d\u8def\u662f\u7ef4\u62a4\u4e00\u4e2a\u6700\u53f3\u56de\u6587\u5b50\u4e32\uff0c\u5229\u7528\u8be5\u533a\u95f4\u7684\u5bf9\u79f0\u6027\uff0c\u8ba1\u7b97\u5f53\u524d\u904d\u5386\u4f4d\u7f6e\u4e3a\u4e2d\u5fc3\u7684\u56de\u6587\u534a\u5f84\uff0c\u56de\u6587\u534a\u5f84\u5c31\u662f\u4ece\u4e2d\u5fc3\uff08\u5982\u679c\u4e3a\u5947\u56de\u6587\u4e32\uff0c\u5c31\u5305\u542b\u4e2d\u5fc3\u4f4d\u7f6e\uff09\u5230\u56de\u6587\u4e32\u4e00\u7aef\u7684\u8ddd\u79bb\u3002</p> <p>\u6211\u4eec\u8bbe\u6709\u5b57\u7b26\u4e32\\(S\\)\uff0c\\(S[l\\dots r]\\)\u4e3a\u4e32\\(S\\)\u4e2d\u533a\u95f4\u4e3a\\([l,r]\\)\u7684\u5b50\u4e32\uff0c\\(S[i]\\)\u8868\u793a\u4e32\\(S\\)\u4e2d\u7b2c\\(i\\)\u4e2a\u5b57\u7b26\uff0c\u6211\u4eec\u7528\\(d[i]\\)\u8868\u793a\u4ee5\u7b2c\\(i\\)\u4e2a\u5b57\u7b26\u4e3a\u4e2d\u5fc3\u7684\u56de\u6587\u534a\u5f84\u3002\u4e3a\u4e86\u4fbf\u4e8e\u7406\u89e3\u6211\u4eec\u8fd9\u91cc\u5148\u53ea\u8003\u8651\u5947\u56de\u6587\u4e32\u3002</p>"},{"location":"String/Manacher/Manacher/#_3","title":"\u5904\u7406\u5947\u56de\u6587\u4e32","text":"<p>\u6211\u4eec\u73b0\u5728\u7ef4\u62a4\u4e00\u4e2a\u6700\u53f3\u56de\u6587\u5b50\u4e32\\(S[l\\dots r]\\)\uff0c\u8bbe\u8be5\u56de\u6587\u4e32\u7684\u4e2d\u5fc3\u662f\\(S[mid]\\)\uff0c\u8bbe\u8fd9\u4e2a\u56de\u6587\u5b50\u4e32\u7684\u56de\u6587\u534a\u5f84\u4e3a\\(d[mid]\\)\u3002\u90a3\u4e48\u6211\u4eec\u8981\u6c42\u7684\u5f53\u524d\u4f4d\u7f6e\u7684\u56de\u6587\u534a\u5f84\\(d[i]\\)\u5c31\u8981\u6709\u4e0b\u7684\u51e0\u79cd\u60c5\u51b5</p> <ul> <li>\\(i\\) \u5728 \\([l,r]\\) \u7684\u8303\u56f4\u5185</li> </ul> <p>\u6211\u4eec\u5047\u8bbe\\(j\\)\u4e3a\\(i\\)\u5173\u4e8e\\(mid\\)\u7684\u5bf9\u79f0\u70b9\uff0c\u5bf9\u5e94\\(j\\)\u53c8\u6709\u4e09\u79cd\u60c5\u51b5\uff1a</p> <p>\u4ee5 \\(j\\) \u4e3a\u4e2d\u5fc3\u7684\u56de\u6587\u5b50\u4e32\u5728 \\([l,r]\\) \u5185</p> <p>\u6839\u636e\u56de\u6587\u4e32\u7684\u5bf9\u79f0\u6027\uff0c\u6211\u4eec\u5f88\u5bb9\u6613\u5c31\u53ef\u4ee5\u77e5\u9053\\(d[i]=d[j]\\)</p> <p>\u4ee5\\(j\\)\u4e3a\u4e2d\u5fc3\u56de\u6587\u5b50\u4e32\u6709\u90e8\u5206\u5728\u6700\u53f3\u56de\u6587\u5b50\u4e32\u7684\u5916\u9762</p> <p>\u663e\u800c\u6613\u89c1\u7684\uff0c\\(j-l=r-i=c\\)\uff0c\\([j-c,j+c]\\) \u53ef\u4ee5\u7531 \\(mid\\) \u5bf9\u79f0\u5230 \\(i\\) \uff0c\u6240\u4ee5 \\([i-c,i+c]\\) \u662f\u56de\u6587\u5b50\u4e32\uff0c\u90a3\u4e48\u4ee5 \\(i\\) \u4e3a\u4e2d\u5fc3\u7684\u56de\u6587\u534a\u5f84\u8fd8\u53ef\u4ee5\u7ee7\u7eed\u589e\u52a0\u5417\uff1f\u7b54\u6848\u662f\u4e0d\u884c\uff0c\u5047\u5982\u6211\u4eec\u8ba9 \\(i\\) \u7684\u56de\u6587\u534a\u5f84\u518d\u589e\u52a0 \\(1\\) \u3002</p> <p>\u56fe\u4e2d\u7eff\u8272\u7684\u65b9\u5757\u90fd\u662f\u901a\u8fc7\u5bf9\u79f0\u6027\u5f97\u5230\u7684\u76f8\u7b49\u7684\u5b57\u7b26\uff0c\u4f46\u662f\u6700\u53f3\u548c\u6700\u5de6\u7684\u4e24\u4e2a\u7eff\u8272\u65b9\u5757\u4e00\u5b9a\u662f\u4e0d\u76f8\u7b49\u7684\uff0c\u56e0\u4e3a\u5982\u679c\u76f8\u7b49\\(d[mid]\\)\u4e5f\u4f1a\u589e\u52a0\uff0c\u4ece\u800c\u4f7f\u5f97\u6700\u53f3\u56de\u6587\u5b50\u4e32\u5305\u542b\u4ed6\u4eec\uff0c\u4f46\u662f\u8fd9\u91cc\u5e76\u6ca1\u6709\u5305\u542b\uff0c\u6240\u4ee5\u6700\u5de6\u548c\u6700\u53f3\u7684\u4e24\u4e2a\u5b57\u7b26\u4e00\u5b9a\u4e0d\u76f8\u7b49\uff0c\u4e0e\u5bf9\u79f0\u6027\u5f97\u5230\u7684\u7ed3\u8bba\u76f8\u6096\uff0c\u6240\u4ee5\u4ee5\\(i\\)\u4e3a\u4e2d\u5fc3\u7684\u56de\u6587\u534a\u5f84\u5c31\u662f\\(r-i-1\\) \u3002</p> <p>\u4ee5\\(j\\)\u4e3a\u4e2d\u5fc3\u7684\u56de\u6587\u5b50\u4e32\u7684\u5de6\u8fb9\u754c\u548c\u6700\u53f3\u56de\u6587\u5b50\u4e32\u91cd\u5408</p> <p>\u8fd9\u79cd\u60c5\u51b5\u6211\u4e5f\u53ef\u4ee5\u5f88\u5bb9\u6613\u7684\u770b\u51fa\\(d[i]\\ge d[j]\\)\u7684\uff0c\u8fd9\u65f6\\(d[i]\\)\u662f\u53ef\u4ee5\u7ee7\u7eed\u589e\u52a0\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u8981\u7528\u4e2d\u5fc3\u6269\u6563\u6cd5\u6765\u6c42\u5f97\\(d[i]\\) \u3002</p> <ul> <li>\\(i\\)\u5728\\([l,r]\\)\u5916</li> </ul> <p>\u8fd9\u65f6\u6211\u4eec\u4e0d\u80fd\u5229\u7528\u5bf9\u79f0\u6027\u6765\u5224\u65ad\u56de\u6587\u534a\u5f84\uff0c\u5c31\u8981\u7528\u4e2d\u5fc3\u6269\u6563\u6cd5\u6765\u6c42\\(d[i]\\)\u7684\u503c\u3002</p> <p>\u7b97\u6cd5\u8fd0\u884c\u8fc7\u7a0b\u79cd\uff0c\u5982\u679c\u6709\u6bd4\\([l,r]\\)\u66f4\u9760\u53f3\u7684\u56de\u6587\u5b50\u4e32\u533a\u95f4\uff0c\u5c31\u8981\u66f4\u65b0\u6700\u53f3\u56de\u6587\u5b50\u4e32</p>"},{"location":"String/Manacher/Manacher/#_4","title":"\u7ed3\u8bba","text":"<p>\u6839\u636e\u4e0a\u9762\u7684\u5206\u6790\uff0c\u6211\u4eec\u5f88\u5bb9\u6613\u53ef\u4ee5\u770b\u51fa\uff1a</p> <ul> <li> <p>\u5f53 \\(i\\) \u5728 \\([l,r]\\) \u5185\u65f6 \\(d[i]=min(d[j],r-i+1)\\) </p> </li> <li> <p>\u5f53\u8fb9\u754c\u91cd\u5408\u65f6\uff0c\u8981\u4e2d\u5fc3\u6269\u6563\u6cd5\u6c42 \\(d[i]\\) </p> </li> <li> <p>\u5f53 \\(i\\) \u5728 \\([l,r]\\) \u5916\u65f6\uff0c\u8981\u4e2d\u5fc3\u6269\u6563\u6cd5\u6c42 \\(d[i]\\) \u3002</p> </li> </ul>"},{"location":"String/Manacher/Manacher/#_5","title":"\u5904\u7406\u5076\u56de\u6587\u4e32","text":"<p>\u4e0a\u9762\u7684\u65b9\u6cd5\u53ea\u9002\u7528\u4e8e\u5224\u65ad\u5947\u56de\u6587\u4e32\uff0c\u56e0\u4e3a\u5076\u56de\u6587\u4e32\u6ca1\u6709\u4e2d\u5fc3\u5b57\u7b26\uff0c\u5c31\u4e0d\u9002\u7528\u4e86\u3002\u6211\u4eec\u53ef\u4ee5\u518d\u6bcf\u4e2a\u5b57\u7b26\u4e4b\u95f4\u52a0\u5165\u7279\u6b8a\u5b57\u7b26\uff0c\u5947\u56de\u6587\u4e32\u7684\u4e2d\u5fc3\u4e0d\u53d8\uff0c\u5076\u56de\u6587\u4e32\u7684\u4e2d\u5fc3\u5c31\u53d8\u6210\u4e86\u7279\u6b8a\u5b57\u7b26\u3002</p> <p>\u6211\u4eec\u8fd8\u53ef\u4ee5\u5728\u5b57\u7b26\u9996\u4f4d\u52a0\u4e0a\u4e24\u4e2a\u4e0d\u540c\u7684\u7279\u6b8a\u5b57\u7b26\uff0c\u8fd9\u6837\u8fb9\u754c\u4e5f\u4e0d\u7528\u8003\u8651\u4e86\u3002</p> <p>eg\uff1aabcba -&gt; @#a#b#c#b#a#</p> <p>\u7ecf\u8fc7\u8fd9\u6837\u5904\u7406\uff0c\u6211\u4eec\u8ba1\u7b97\u51fa\u7684\u56de\u6587\u4e32\u957f\u5ea6\u6df7\u5165\u4e86#\uff0c\u8be5\u5982\u4f55\u5904\u7406\uff1f\u5176\u5b9e\u8ba1\u7b97\u51fa\u7684\u56de\u6587\u4e32\u534a\u5f84 \\(d[i]-1\\) \u5c31\u662f\u5bf9\u5e94\u4e0d\u5e26#\u7684\u56de\u6587\u4e32\u957f\u5ea6\u3002</p>"},{"location":"String/Manacher/Problems/","title":"Exercise","text":"\u9898\u76ee \u96be\u5ea6 \u77e5\u8bc6 P3805 \u63d0\u9ad8+/\u7701\u9009- Manacher\u6a21\u677f Link with Centrally Symmetric Strings Manacher\u53d8\u5f62"},{"location":"String/StringHash/Problem/","title":"Exercise","text":"\u9898\u76ee \u96be\u5ea6 \u77e5\u8bc6 LC.1316 \u56f0\u96be \u66b4\u529b+\u5b57\u7b26\u4e32\u54c8\u5e0c CF1200E 2000 \u66b4\u529b+\u5b57\u7b26\u4e32\u54c8\u5e0c CF1849C 1600 \u66b4\u529b+\u5b57\u7b26\u4e32\u54c8\u5e0c"},{"location":"String/StringHash/StringHash/","title":"\u8fdb\u5236\u54c8\u5e0c","text":""},{"location":"String/StringHash/StringHash/#_2","title":"\u7b80\u4ecb","text":"<p>\u5b57\u7b26\u4e32\u54c8\u5e0c\u662f\u5e38\u89c1\u7684\u5b57\u7b26\u4e32\u5904\u7406\u624b\u6bb5\uff0c\u4e00\u822c\u7684\u5b57\u7b26\u4e32\u54c8\u5e0c\u51fd\u6570\u4f1a\u91c7\u7528\u8fdb\u5236\u54c8\u5e0c\uff0c\u5373\u5c06\u4e00\u4e2a\u5b57\u7b26\u4e32\u8f6c\u5316\u4e3a\u4e00\u4e2a \\(P\\) \u8fdb\u5236\u6570\uff0c\u5c06\u8fd9\u4e2a\u6570\u5f53\u4f5c \\(key\\) \u503c\u3002</p>"},{"location":"String/StringHash/StringHash/#_3","title":"\u8fdb\u5236\u54c8\u5e0c\u51fd\u6570","text":"<p>\u8bbe\u5b9a\u4e00\u4e2a \\(P\\) \u8fdb\u5236\u6570\uff0c\u548c\u6a21\u6570 \\(M\\) \uff0c\u6211\u4eec\u628a\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u6bcf\u4e00\u4e2a\u5b57\u7b26\u770b\u4f5c\u8be5 \\(P\\) \u8fdb\u5236\u6570\u4e0a\u7684\u4e00\u4f4d\uff0c\u5c06\u5176\u8f6c\u5316\u4e3a \\(P\\) \u8fdb\u5236\u6570\uff0c\u5f97\u5230\u7684\u503c\u5c31\u662f\u8fdb\u5236\u54c8\u5e0c\u7684 \\(key\\) \u3002</p> <p>\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u8bbe\u5b57\u7b26\u4e32 \\(S=abcde\\)\uff0c\u6211\u4eec\u5c06\u5b83\u8f6c\u5316\u6210 \\(P\\) \u8fdb\u5236\u6570:</p> \\[ h_S=(a\\times P^4 + b\\times P^3 + c\\times  P^2 + d\\times P^1 + e\\times P^0) \\% M \\] <p>\u8fd9\u91cc\u7684\u5b57\u7b26\u53ef\u4ee5\u7528\u5728\u5b57\u6bcd\u8868\u4e2d\u7684\u6b21\u5e8f\u66ff\u6362\uff0c\u4e5f\u53ef\u4e5f\u7528 \\(ASCii\\) \u7801\u6765\u66ff\u6362\u3002</p> <p>\\(P\\) \u8fdb\u5236\u4e00\u822c\u4f1a\u9009\u53d6 \\(31,131,1313,13131\\) \u7b49\uff0c\u53ef\u4ee5\u6709\u6548\u51cf\u5c11\u51b2\u7a81\u3002</p>"},{"location":"String/StringHash/StringHash/#bkdrhash","title":"BKDRHash","text":"<p>\u8be5\u51fd\u6570\u5728\u5b9e\u73b0\u65f6\u91c7\u7528\u4e86\u4e00\u79cd\"\u9690\u5f0f\u53d6\u4f59\u6cd5\"\uff0c\u5373\u81ea\u7136\u6ea2\u51fa\u6cd5\u3002\u6211\u4eec\u5c06\u54c8\u5e0c\u503c \\(h\\) \u8bbe\u5b9a\u4e3a \\(unsigned\\space long\\space long\\) \uff0c\u8fd9\u6837\u5728\u7d2f\u52a0\u8fc7\u7a0b\u4e2d\uff0c\u8d85\u51fa \\(ull\\) \u7684\u8303\u56f4\u5c31\u76f8\u5f53\u4e8e\u5bf9\u5176\u6a21 \\(2^{64}\u22121\\) \u3002\u8fd9\u6837\u53ef\u4ee5\u907f\u514d\u7684\u4f4e\u6548\u7684\u53d6\u6a21\u8fd0\u7b97\u3002</p> <pre><code>typedef unsigned long long ull;\nconst int p = 131;\null BKDRHash(const char* s)\n{\n    ull h = 0;\n    while(*s)h += h * p + (*s++);\n    return h;\n}\n</code></pre>"},{"location":"String/StringHash/StringHash/#_4","title":"\u53cc\u54c8\u5e0c\u6cd5","text":"<p>\u4f7f\u7528\u54c8\u5e0c\uff0c\u6211\u4eec\u6700\u4e0d\u5e0c\u671b\u770b\u9053\u51fa\u73b0\u51b2\u7a81\u3002\u5bf9\u4e8e\u8fdb\u5236\u54c8\u5e0c\uff0c\u4e3a\u4e86\u907f\u514d\u51b2\u7a81\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e24\u7ec4\u4e0d\u540c\u7684\u8fdb\u5236\\(P\\)\u548c\u6a21\u6570\\(M\\)\uff0c\u8ba1\u7b97\u5f97\u5230\u4e24\u4e2a\u54c8\u5e0c\u503c\uff0c\u5c06\u8fd9\u4e24\u54c8\u5e0c\u503c\u5f62\u6210\u7684\u4e8c\u5143\u7ec4\u4f5c\u4e3a\\(key\\)\uff0c\u5373</p> \\[ h_S = &lt;h_1,h_2&gt; \\] <pre><code>const ll p[] = {29,31};\nconst ll M[] = {int(1e9 + 9), 998244353};\npair&lt;ll,ll&gt; DHash(const char* s)\n{\n    pair&lt;ll,ll&gt; h = {0,0};\n    while(*s)\n    {\n        h.first += (h.first * p[0] + *s) % M[0];\n        h.second += (h.second * p[1] + *s) % M[1];\n        s++;\n    }\n    return h;\n}\n</code></pre>"},{"location":"String/StringHash/StringHash/#_5","title":"\u8ba1\u7b97\u5b50\u4e32\u54c8\u5e0c\u503c","text":"<p>\u7531\u4e8e\u5c06\u5b57\u7b26\u4e32\u8f6c\u5316\u6210\u4e86 \\(P\\) \u8fdb\u5236\u6570\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u628a\u5bf9\u5b57\u7b26\u4e32\u7684\u64cd\u4f5c\u770b\u51fa\u5bf9 \\(P\\) \u8fdb\u5236\u6570\u7684\u64cd\u4f5c\uff0c\u5bf9\u6570\u7684\u64cd\u4f5c\u5f80\u5f80\u6bd4\u5bf9\u5b57\u7b26\u4e32\u64cd\u4f5c\u66f4\u52a0\u5bb9\u6613\u3002</p> <p>\u4f8b\u5982\uff0c\u6211\u4eec\u8981\u62fc\u63a5\u4e24\u4e2a\u5b57\u7b26\u4e32 \\(xy\\) \u548c \\(cyb\\) \uff0c\u8f6c\u5316\u6210\u5bf9\u6570\u7684\u64cd\u4f5c\uff0c\u5c31\u662f \\(h_{xy}\\times P ^{3} + h_{cyb}\\) \uff0c\u5373\u5c06 \\(h_{xy}\\) \u5de6\u79fb \\(3\\) \u4f4d\uff0c\u5728\u52a0\u4e0a \\(h_{cyb}\\) \uff0c\u4f1a\u53d1\u73b0\u8fd9\u548c \\(10\\) \u8fdb\u5236\u6570\u62fc\u63a5\u4e00\u6a21\u4e00\u6837\u3002</p> <p>\u90a3\u4e48\u622a\u53d6\u4e00\u4e2a\u5b50\u4e32\u4e5f\u5c31\u5f88\u5bb9\u6613\u4e86\uff0c\u4f8b\u5982\u4ece \\(abcdef\\) \u4e2d\u622a\u53d6\u5b50\u4e32 \\(cde\\)</p> \\[ h_{abcde} - h_{ab} \\times P^{3} \\] <p>\u6211\u4eec\u53ef\u4ee5\u770b\u51fa\u8ba1\u7b97\u4e00\u4e2a\u5b50\u4e32\u7684\u54c8\u5e0c\u503c\uff0c\u9700\u8981\u524d\u7f00\u4e32\u7684\u54c8\u5e0c\u503c\uff0c\u6211\u4eec\u7528\u4e00\u4e2a\u6570\u7ec4 \\(hsh[i]\\) \u8868\u793a\u5230\u7b2c \\(i\\) \u4e2a\u4f4d\u7f6e\u7684\u54c8\u5e0c\u503c\uff0c\u90a3\u4e48\u4e00\u4e2a\u533a\u95f4\u4e3a \\([l,r]\\) \u7684\u5b50\u4e32\u7684\u54c8\u5e0c\u503c\u5c31\u662f</p> \\[ hsh[r] - hsh[l-1]\\times P^{r - l + 1} \\] <p>\u4e3a\u4e86\u63d0\u9ad8\u6548\u7387\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06 \\(P^i\\) \u63d0\u524d\u9884\u5904\u7406\u597d\uff0c\u5b58\u5230\u6570\u7ec4 \\(pM[]\\) \u4e2d\u3002\u5e76\u4e14\u5c06\u8981\u5904\u7406\u7684\u5b57\u7b26\u4e32\u7684\u524d\u7f00\u4e32\u7684\u54c8\u5e0c\u503c\u9884\u5904\u7406\u51fa\u6765\uff0c\u5b58\u5230\u6570\u7ec4 \\(hsh[]\\) \u4e2d\u3002</p> <pre><code>// \u521d\u59cb\u5316\nSHash()\n{\n    tot = 0;\n    for(int i = 0;i &lt; 2;++i)\n    {\n        pM[i][0] = 1;\n        hsh[i][0] = 0;\n    }\n}\n\n// \u6dfb\u52a0\u7ef4\u62a4\u7684\u5b57\u7b26\nvoid add(char ch)\n{\n    ++tot;\n    for(int i = 0;i &lt; 2;++i)\n    {\n        pM[i][tot] = pM[i][tot - 1] * p[i] % M[i];\n        hsh[i][tot] = (hsh[i][tot - 1] * p[i] + ll(ch)) % M[i];\n    }\n}\n</code></pre> <p>\u5355\u54c8\u5e0c\u4e5f\u662f\u540c\u7406\u3002</p>"},{"location":"String/StringHash/StringHash/#_6","title":"\u5b57\u7b26\u4e32\u54c8\u5e0c\u7684\u5e94\u7528","text":""},{"location":"String/StringHash/StringHash/#_7","title":"\u6700\u957f\u56de\u6587\u5b50\u4e32","text":"<p>\u6211\u4eec\u8bbe\u4e32 \\(S\\) \u662f\u4e00\u4e2a\u65e0\u9650\u957f\u7684\u4e32\uff0c\u5176\u4e2d \\(S[l,r]\\) \u662f\u4e00\u4e2a\u6700\u957f\u56de\u6587\u5b50\u4e32\uff0c\u90a3\u4e48\u4e00\u5b9a\u6ee1\u8db3 \\(S[l+1,r-1],S[l+2,r-2]\\dots\\) \u4e5f\u4e00\u5b9a\u662f\u56de\u6587\u4e32\uff0c\u4f46$S[l-1,r+1],S[l-2,r+2]\\dots $\u4e00\u5b9a\u4e0d\u662f\u56de\u6587\u4e32 \uff0c\u6240\u4ee5\u8be5\u95ee\u9898\u6ee1\u8db3\u5355\u8c03\u6027\u3002</p> <p>\u6211\u4eec\u679a\u4e3e\u6bcf\u4e2a\u4e2d\u5fc3\uff0c\u4e8c\u5206\u53bb\u627e\u8be5\u4f4d\u7f6e\u7684\u56de\u6587\u534a\u5f84\u5373\u53ef\u3002\u590d\u6742\u5ea6\u662f \\(O(n\\log n)\\)\u3002</p>"},{"location":"String/StringHash/StringHash/#_8","title":"\u6700\u957f\u516c\u5171\u5b50\u5b57\u7b26\u4e32","text":"<p>\u8981\u6c42\u4ece \\(m\\) \u4e2a\u603b\u957f\u5ea6\u4e0d\u8d85\u8fc7 \\(n\\) \u7684\u5b57\u7b26\u4e32\u4e2d\u627e\u5230\u6700\u957f\u516c\u5171\u5b50\u5b57\u7b26\u4e32\u3002</p> <p>\u540c\u6837\u662f\u4e8c\u5206\uff0c\u56e0\u4e3a\u5982\u679c\u957f\u5ea6\u4e3a \\(k\\) \u7684\u516c\u5171\u5b50\u4e32\u662f\u5b58\u5728\u7684\uff0c\u90a3\u4e48\u957f\u5ea6\u4e3a \\(k-1,k-2,\\dots\\) \u4e5f\u662f\u5b58\u5728\u7684\u3002</p> <p>\u6bcf\u6b21\u6211\u4eec\u5c06\u6240\u4ee5\u5b57\u7b26\u4e32\u957f\u5ea6\u4e3a \\(k\\) \u7684\u5b50\u4e32\u90fd\u8f6c\u5316\u6210\u8fdb\u5236\u54c8\u5e0c\u503c\uff0c\u5b58\u5230\\(set\\)\u6216\\(map\\)\u4e2d\uff0c\u6700\u540e\u53d6\u4ea4\u96c6\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(m+n\\log n)\\)</p> <p>\u53c2\u8003\u6587\u7ae0\uff1a</p> <p>\u300a\u7b97\u6cd5\u7ade\u8d5b-\u4e0b\u518c\u300b</p> <p>Oi Wiki-\u5b57\u7b26\u4e32\u54c8\u5e0c</p> <p>CSDN-\u3010\u7b97\u6cd5\u5b66\u4e60\u3011\u5b57\u7b26\u4e32\u54c8\u5e0c\uff08Hash\uff09</p>"},{"location":"String/Trie/Problems/","title":"Exercise","text":"\u9898\u76ee \u96be\u5ea6 \u77e5\u8bc6 P3879 \u666e\u53ca+/\u63d0\u9ad8 \u57fa\u7840\u5b57\u5178\u6811 LC.2935 \u56f0\u96be \u5e26\u5220\u9664\u768401\u5b57\u5178\u6811 LC.421 \u4e2d\u7b49 01\u5b57\u5178\u6811\u6a21\u677f"},{"location":"String/Trie/Trie/","title":"\u5b57\u5178\u6811","text":""},{"location":"String/Trie/Trie/#_2","title":"\u5f15\u5165","text":"<p>\u6709\u8fd9\u6837\u7684\u95ee\u9898\uff0c\u8981\u6c42\u6211\u4eec\u6c42\u4ee5 \\(t_i\\) \u4e3a\u524d\u7f00\u7684 \\(s_i\\) \u7684\u6570\u91cf\u3002</p> <p>\u5982\u679c\u7528\u66b4\u529b\u7684\u505a\u6cd5\u5c31\u662f\uff0c\u904d\u5386\u6bcf\u4e2a\u5b57\u7b26\u4e32\uff0c\u8fdb\u884c\u5339\u914d\uff0c\u590d\u6742\u5ea6\u662f \\(O(nm)\\) \uff0c\u8fd9\u4e2a\u64cd\u4f5c\u5341\u5206\u4f4e\u6548\u3002</p> <p>\u5927\u5bb6\u90fd\u6709\u67e5\u82f1\u8bed\u5b57\u5178\u7684\u7ecf\u9a8c\uff0c\u67e5\u627e\u67d0\u4e2a\u5355\u8bcd\uff0c\u5176\u5b9e\u5c31\u662f\u5339\u914d\u5176\u524d\u7f00\u7684\u8fc7\u7a0b\uff0c\u7531\u6b64\u67e5\u627e\u4efb\u610f\u7684\u5355\u8bcd\uff0c\u67e5\u627e\u7684\u6b21\u6570\u6700\u591a\u662f\u8fd9\u4e2a\u5355\u8bcd\u7684\u957f\u5ea6\u3002</p> <p>\u800c\u5b57\u5178\u6811\u5c31\u662f\u6a21\u62df\u8fd9\u4e2a\u8fc7\u7a0b\u7684\u6570\u636e\u7ed3\u6784\u3002\u5982\u4e0b\u56fe\uff1a</p> <p>\u8fb9\u4ee3\u8868\u5b57\u7b26\uff0c\u4ece\u6839\u8282\u70b9\u51fa\u53d1\u5230\u6811\u4e0a\u67d0\u4e00\u70b9\u4ee3\u8868\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002\u5982\u679c\u67d0\u4e2a\u8282\u70b9\u662f\u5b57\u7b26\u4e32\u7684\u7ed3\u5c3e\uff0c\u6211\u4eec\u5c31\u5bf9\u5176\u8fdb\u884c\u6807\u8bb0\u3002\u4e0a\u56fe\u5c31\u662f\u7531\\(be,bee,may,man,mom,he\\)\u7ec4\u6210\u7684\u5b57\u5178\u6811\u3002</p>"},{"location":"String/Trie/Trie/#_3","title":"\u57fa\u7840\u5b57\u5178\u6811","text":"<p>\u57fa\u7840\u7684\u5b57\u5178\u6811\u652f\u6301\u63d2\u5165\u548c\u67e5\u8be2\u64cd\u4f5c\u3002</p> <p>\u5b57\u5178\u6811\u7528\u6570\u7ec4\u6765\u5b9e\u73b0\uff0c\u7c7b\u4f3c\u52a8\u6001\u5f00\u70b9\u7ebf\u6bb5\u6811\uff0c\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <pre><code>//\u8282\u70b9\u5927\u5c0f\u4e0e\u5b57\u7b26\u96c6\u5927\u5c0f\u6709\u5173\uff0c\u8fd9\u91cc\u53ea\u5b58\u50a8\u5c0f\u5199\u5b57\u6bcd\uff0c\u6240\u4ee5\u53ea\u670926\u4e2a\nint tr[MAX][26];    // \u6bcf\u4e2a\u8282\u70b9\u5b58\u50a8\u4e0b\u4e00\u4e2a\u5b57\u7b26\u7684\u4f4d\u7f6e\nbool exist[MAX];      // \u8be5\u7ed3\u70b9\u7ed3\u5c3e\u7684\u5b57\u7b26\u4e32\u662f\u5426\u5b58\u5728\nint cnt;            // \u6700\u65b0\u5206\u914d\u7684\u5b58\u50a8\u4f4d\u7f6e\n</code></pre>"},{"location":"String/Trie/Trie/#_4","title":"\u63d2\u5165","text":"<p>\u8be5\u64cd\u4f5c\u53ef\u4ee5\u5c06\u67d0\u4e2a\u5b57\u7b26\u4e32\u63d2\u5165\u5230\u5b57\u5178\u6811\u4e2d\uff1a <pre><code>void insert(string&amp; s)\n{\n    int p = 0;\n    //\u904d\u5386\u6574\u4e2a\u5b57\u7b26\u4e32\n    for(int i = 0;i &lt; s.size();++i)\n    {\n        int ch = s[i] - 'a';\n        if(!tr[p][ch])\n            tr[p][ch] = ++cnt;//\u5982\u679c\u8282\u70b9\u8fd8\u6ca1\u6709\u503c\uff0c\u5c31\u5148\u5206\u914d\u5b58\u50a8\u4f4d\u7f6e\n        p = tr[p][ch];//\u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a\u8282\u70b9\n    }\n    exist[p] = true;\n}\n</code></pre></p>"},{"location":"String/Trie/Trie/#_5","title":"\u67e5\u8be2","text":"<p>\u67e5\u8be2\u5b57\u5178\u6811\u4e2d\u662f\u5426\u6709\u4e32\\(s\\)\u3002 <pre><code>bool ask(string&amp; s)\n{\n    int p = 0;\n    for(int i = 0;i &lt; s.size();++i)\n    {\n        int ch = s[i] - 'a';\n        if(!tr[p][ch])\n            return false;//\u5982\u679c\u6ca1\u6709\u5bf9\u5e94\u8282\u70b9\uff0c\u8bf4\u660e\u5b57\u5178\u6811\u4e2d\u6ca1\u6709\u4e32s\n        p = tr[p][ch];\n    }\n    return true;\n}\n</code></pre></p>"},{"location":"String/Trie/Trie/#_6","title":"\u57fa\u7840\u5b57\u5178\u6811\u7684\u5e94\u7528","text":"<ul> <li>\u5b57\u7b26\u4e32\u68c0\u7d22\u3002\u67e5\u8be2\u5b57\u7b26\u4e32\u662f\u5b57\u5178\u6811\u7684\u57fa\u672c\u529f\u80fd</li> <li>\u8bcd\u9891\u7edf\u8ba1\u3002\u7edf\u8ba1\u67d0\u4e2a\u5b57\u7b26\u4e32\u51fa\u73b0\u4e86\u591a\u5c11\u6b21</li> <li>\u5b57\u7b26\u4e32\u6392\u5e8f\u3002\u5728\u63d2\u5165\u7684\u65f6\u5019\uff0c\u5728\u6811\u7684\u540c\u4e00\u7ea7\u6309\u5b57\u6bcd\u8868\u987a\u5e8f\u63d2\u5165\uff0c\u81ea\u5e26\u6811\u5efa\u597d\u540e\uff0c\u7528\u5148\u5e8f\u904d\u5386\u5373\u53ef\u5f97\u5230\u6309\u5b57\u5178\u5e8f\u7684\u6392\u5e8f\u3002</li> <li>\u524d\u7f00\u5339\u914d\u3002\u5b57\u5178\u6811\u662f\u6309\u516c\u5171\u524d\u7f00\u6765\u5efa\u6811\u7684\uff0c\u975e\u5e38\u9002\u5408\u641c\u7d22\u63d0\u793a\u3002</li> </ul>"},{"location":"String/Trie/Trie/#01-trie","title":"01-Trie","text":"<p>\\(01\\) \u5b57\u5178\u6811\u5c31\u662f\u5b57\u7b26\u96c6\u4e3a \\(\\{0,1\\}\\) \u7684\u5b57\u5178\u6811\uff0c\u76f8\u5f53\u4e8e\u4e00\u68f5\u4e8c\u53c9\u6811\u3002\u652f\u6301\u63d2\u5165\u3001\u67e5\u8be2\u5f02\u6216\u548c\u6781\u503c\u64cd\u4f5c\u3002</p>"},{"location":"String/Trie/Trie/#_7","title":"\u5f02\u6216\u548c\u6781\u503c","text":"<p>\\(01\\)\u5b57\u5178\u6811\u7684\u4e3b\u8981\u529f\u80fd\u662f\u5904\u7406\u5f02\u6216\u548c\u6781\u503c\u95ee\u9898\u3002</p> <p>\u4ee5LC.421\u4e3a\u4f8b\u3002</p> <p>\u9898\u76ee\u8ba9\u6211\u4eec\u6c42 \\(nums\\) \u6570\u7ec4\u4e2d \\(nums[i]\\oplus nums[j]\\) \u7684\u6700\u5927\u503c\u3002</p> <p>\u6211\u4eec\u8003\u8651\u6700\u7ec8\u7684\u7b54\u6848\u7684\u7b2c \\(i\\) \u4e2a\u4e8c\u8fdb\u5236\u4f4d\u662f\u5426\u53ef\u4ee5\u662f \\(1\\)\uff0c\u6211\u4eec\u4ece\u9ad8\u4f4d\u5f00\u59cb\u8003\u8651\uff0c\u56e0\u4e3a\u53ea\u6709\u5c3d\u53ef\u80fd\u9ad8\u4f4d\u53d6 \\(1\\) \uff0c\u624d\u80fd\u4f7f\u6700\u7ec8\u7b54\u6848\u6700\u5927\u3002</p> <p>\u90a3\u4e48\u7b54\u6848\u7684\u7b2c \\(i\\) \u4f4d\u4e3a \\(1\\) \uff0c\u8bf4\u660e\u7b54\u6848\u4e00\u5b9a\u662f\u7531 \\(nums\\) \u6570\u7ec4\u4e2d\u7684\u4e24\u4e2a\u7b2c \\(i\\) \u4e3a\u4e0d\u540c\u7684\u6570\u5f02\u6216\u5f97\u6765\u7684\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5148\u56fa\u5b9a\u4e00\u4e2a\u6570\uff0c\u5bf9\u5176\u8fdb\u884c\u4e8c\u8fdb\u5236\u679a\u4e3e\uff0c\u770b\u770b\u5b83\u80fd\u5f02\u6216\u5f97\u5230\u7684\u6700\u5927\u503c\u3002\u5177\u4f53\u5c31\u662f\u679a\u4e3e \\(nums\\) \u4e2d\u7684\u6bcf\u4e2a\u6570\uff0c\u8fdb\u884c\u4e0a\u8ff0\u64cd\u4f5c\uff0c\u53d6\u6240\u6709\u7ed3\u679c\u7684\u6700\u5927\u503c\u5c31\u662f\u7b54\u6848\u3002</p> <p>\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u4e0b\u9762\u662f\u56fa\u5b9a\u4e00\u4e2a\u6570\u540e\u7684\u64cd\u4f5c\u8fc7\u7a0b\uff0c\u7ea2\u8272\u662f\u786e\u5b9a\u7684\u6570\uff1a</p> <p>\u6211\u4eec\u53d1\u73b0\u6bcf\u4e00\u8f6e\u90fd\u53ef\u4ee5\u5220\u6389\u51e0\u4e2a\u5f02\u6216\u540e\u7b2c \\(i\\) \u4f4d\u4e0d\u4e3a  \\(1\\) \u7684\u6570\u3002\u5982\u679c\u5bf9\u4e8e\u67d0\u4e00\u4f4d\uff0c \\(nums\\) \u4e2d\u4e0d\u5b58\u5728\u4f7f\u5176\u5f02\u6216\u540e\u4f7f\u8be5\u4f4d\u4e3a \\(1\\) \u7684\u6570\uff0c\u8bf4\u660e\u8fd9\u4e00\u4f4d\u53ea\u80fd\u4e3a \\(0\\) \uff0c\u5c31\u4e0d\u7528\u5220\u9664\u4efb\u4f55\u6570\u3002\u4e0a\u9762\u7684\u4f8b\u5b50\u6070\u597d\u80fd\u4f7f\u6bcf\u4e00\u4f4d\u90fd\u4e3a \\(1\\) \u3002</p> <p>\u6211\u4eec\u4f1a\u53d1\u73b0\u4e0a\u9762\u786e\u5b9a\u6700\u5927\u503c\u7684\u8fc7\u7a0b\uff0c\u5f88\u50cf\u5b57\u5178\u6811\u4e2d\u67e5\u627e\u5b57\u7b26\u4e32\u7684\u8fc7\u7a0b\uff0c\u5373\u901a\u8fc7\u524d\u7f00\u9010\u6b65\u786e\u5b9a\u4e00\u4e2a\u6570\uff08\u786e\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff09\u3002</p> <p>\u5c06\u4e0a\u9762\u6570\u7684\u4e8c\u8fdb\u5236\u5f62\u5f0f\u63d2\u5165\u5230\u5b57\u5178\u6811\u540e\u5f62\u6210\u7684\u4e8c\u53c9\u6811\u5982\u4e0b\u3002</p> <p>\u786e\u5b9a\u6700\u5927\u5f02\u6216\u548c\u7684\u8fc7\u7a0b\u5c31\u662f\u4ece \\(01\\) \u5b57\u5178\u6811\u7684\u6839\u8282\u70b9\u5f00\u59cb\u679a\u4e3e\u4e00\u4e2a\u6570\u7684\u4e8c\u8fdb\u5236\u4f4d\uff0c\u5c3d\u53ef\u80fd\u8d70\u4e0e\u8be5\u6570\u5f53\u524d\u4f4d\u4e0d\u540c\u7684\u8def\u5f84\u3002\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u5b57\u5178\u6811\u9ad8\u6548\u7684\u5b8c\u6210\u4e0a\u8ff0\u8fc7\u7a0b\u3002</p>"},{"location":"String/Trie/Trie/#_8","title":"\u63d2\u5165","text":"<p>\u6211\u4eec\u53ef\u4ee5\u5c06\u6570\u7ec4\u4e2d\u6bcf\u4e2a\u6570\u4e8c\u8fdb\u5236\u4f4d\u5f53\u4f5c\u4e00\u4e2a\u4e32\uff0c\u63d2\u5165\u5230\u5b57\u5178\u6811\u4e2d\u3002</p> <pre><code>// \u5c06\u6570\u7684\u4e8c\u8fdb\u5236\u4f4d\u63d2\u5165\u5230\u5b57\u5178\u6811\u4e2d\nvoid insert(int x)\n{\n    int p = 0;\n        // \u4ece\u9ad8\u4f4d\u5230\u4f4e\u4f4d\n    for(int i = 30;i &gt;= 0;--i)\n    {\n        int c = (x &gt;&gt; i) &amp; 1;   //\u53d6\u8be5\u6570\u7684\u7b2ci\u4f4d\n        if(!tr[p][c])\n            tr[p][c] = ++tot;\n        p = tr[p][c];\n    }\n}\n</code></pre>"},{"location":"String/Trie/Trie/#_9","title":"\u67e5\u8be2\u5f02\u6216\u6700\u5927\u503c","text":"<p>\u67e5\u8be2\u5f53\u524d\u786e\u5b9a\u7684\u6570 \\(x\\) \u5f02\u6216\u53ef\u4ee5\u5f97\u5230\u7684\u6700\u5927\u503c\uff0c\u4ece\u9ad8\u5230\u4f4e\u4f9d\u6b21\u53d6 \\(x\\) \u7684\u4e8c\u8fdb\u5236\u4f4d\uff0c\u5224\u65ad\u662f\u5426\u5b58\u5728\u4e0e\u5f53\u524d\u4e3a\u4e0d\u540c\u7684\u6570\u3002</p> <pre><code>// \u8be2\u95ee\u6700\u5927\u5f02\u6216\u548c\nint max_xor(int x)\n{\n    int res = 0,p = 0;\n    for(int i = 30;i &gt;= 0;--i)\n    {\n        int now = (x &gt;&gt; i) &amp; 1;\n\n        // \u5224\u65ad\u7b2ci\u4f4d\u662f\u5426\u80fd\u4f4d1\n        // \u60f3\u8981\u7b2ci\u4f4d\u4e3a1\uff0c\u5c31\u8981\u5f02\u6216\u4e00\u4e2a\u4e0e\u8be5\u4f4d\u4e0d\u540c\u7684\u6570\uff0c1 ^ 0 \u6216 0 ^ 1 \n        // \u5982\u679c\u53e6\u4e00\u8fb9\u5b58\u5728\u6570\uff0c\u5c31\u79fb\u52a8\u5230\u53e6\u4e00\u4e2a\u5b50\u6811\u4e0a\n        // \u4e0d\u5b58\u5728\u5219\u8fd9\u4e00\u4f4d\u53ea\u80fd\u662f0\uff0c\u5c31\u7ee7\u7eed\u5411\u4e0b\n        if(tr[p][now ^ 1])  \n        {\n            p = tr[p][now ^ 1];\n            res |= (1 &lt;&lt; i);\n        }\n        else    p = tr[p][now];\n    }\n    return res;\n}\n</code></pre>"},{"location":"String/Trie/Trie/#01-trie_1","title":"\u5e26\u5220\u9664\u768401-Trie","text":"<p>\u4ece\u5b57\u5178\u6811\u4e2d\u5220\u9664\u67d0\u4e2a\u6570\uff0c\u5176\u5b9e\u4e0d\u5fc5\u8981\u628a\u5176\u5bf9\u5e94\u7684\u8282\u70b9\u90fd\u5220\u9664\u3002\u6211\u7528\u4e00\u4e2a\u6570\u7ec4 \\(cnt[]\\) \u8bb0\u5f55\u4ee5\u5f53\u524d\u8282\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u7684\u8282\u70b9\u4e2a\u6570\uff0c\u5220\u9664\u4e00\u4e2a\u6570\u65f6\u5c31\u5c06\u5176\u5bf9\u5e94\u8def\u5f84\u4e0a\u7684 \\(cnt[]\\) \u90fd\u51cf \\(1\\) \u5373\u53ef\u3002</p> <pre><code>// \u5220\u9664\u6570\nvoid erase(int x)\n{\n    int p = 0;\n    for(int i = 30;i &gt;= 0;--i)\n    {\n        int now = (x &gt;&gt; i) &amp; 1;\n        p = tr[p][now];\n        cnt[p]--;\n    }\n}\n</code></pre>"},{"location":"String/Trie/Trie/#_10","title":"\u65f6\u7a7a\u590d\u6742\u5ea6","text":"<p>\u5b57\u5178\u6811\u7684\u63d2\u5165\u3001\u5220\u9664\u548c\u67e5\u8be2\u64cd\u4f5c\u90fd\u53ea\u9700\u8981\u679a\u4e3e\u4e00\u4e2a\u6570\u7684\u4e8c\u8fdb\u5236\u4f4d\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(\\log n)\\)</p> <p>\u5b57\u5178\u6811\u662f\u4e00\u79cd\u5f88\u5178\u578b\u7684\u7a7a\u95f4\u6362\u65f6\u95f4\u7684\u6570\u636e\u7ed3\u6784\uff0c\u4e00\u822c\u7a7a\u95f4\u8981\u5f00\u5230 \\(O(20n)\\) \u624d\u4e0d\u4f1a\u8d8a\u754c\u3002</p> <p>\u53c2\u8003\u6587\u7ae0\uff1a</p> <p>\u300a\u7b97\u6cd5\u7ade\u8d5b\u300b</p> <p>Oi Wiki-\u5b57\u5178\u6811</p> <p>GitHub-\u7075\u8336\u5c71\u827e\u5e9c</p>"},{"location":"UsualQ/IntPartition/IntPartition/","title":"\u6574\u6570\u62c6\u5206","text":"<p>\u524d\u7f6e\u77e5\u8bc6\uff1a\u6700\u5927\u516c\u56e0\u6570(\\(gcd\\))</p>"},{"location":"UsualQ/IntPartition/IntPartition/#_1","title":"\u95ee\u9898","text":"<p>\u7ed9\u4f60\u4e00\u4e2a\u542b\u6709 \\(n\\) \u4e2a\u6b63\u6574\u6570\u7684\u6570\u7ec4 \\(a\\)\uff0c\u4f60\u53ef\u4ee5\u8fdb\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a</p> <ul> <li>\u9009\u62e9\u4e00\u4e2a\u5176\u4e2d\u4efb\u610f\u4e00\u4e2a\u6574\u6570 \\(a_i\\)</li> <li>\u7528\u4e24\u4e2a\u6b63\u6574\u6570 \\(x,y\\) \u66ff\u6362\u6389 \\(a_i\\) \uff0c\u5e76\u4e14\u6ee1\u8db3 \\(x+y=a_i\\)</li> </ul> <p>\u73b0\u5728\u8981\u6c42\u4f60\u7528\u6700\u5c0f\u7684\u64cd\u4f5c\u6570\uff0c\u5c06 \\(a\\) \u4e2d\u5143\u7d20\u5168\u90e8\u53d8\u4e3a\u76f8\u540c\u503c\u3002</p>"},{"location":"UsualQ/IntPartition/IntPartition/#_2","title":"\u601d\u8def","text":"<p>\u786e\u5b9a\u6700\u7ec8\u6570\u7ec4\u6700\u540e\u76f8\u7b49\u7684\u6570\u5f88\u91cd\u8981\uff0c\u6211\u4eec\u8bbe\u8fd9\u4e2a\u6570\u662f \\(x\\) \u3002\u90a3\u4e48\u6570\u7ec4\u4e2d\u6bcf\u4e2a\u6570\u90fd\u4e00\u5b9a\u662f \\(x\\) \u7684\u500d\u6570\uff0c\u4e0d\u7136\u6700\u540e\u4e00\u5b9a\u62c6\u4e0d\u51fa \\(x\\)\u3002\u5e76\u4e14\u8981\u64cd\u4f5c\u6570\u6700\u5c0f\uff0c\u90a3\u5c31\u662f\u8981 \\(x\\) \u5c3d\u53ef\u80fd\u5927\uff0c\u6240\u4ee5\u53d6\u6574\u4e2a\u6570\u7ec4\u7684 \\(gcd\\) \u5373\u53ef\u3002</p>"},{"location":"UsualQ/IntPartition/IntPartition/#_3","title":"\u53d8\u5f62","text":"<p>\u9898\u76ee\u8fde\u63a5</p> <p>\u6211\u4eec\u5c06\u66ff\u6362\u64cd\u4f5c\u6539\u4e3a \\(x+y=a_i+k\\)\uff0c\u6c42\u6700\u5c0f\u64cd\u4f5c\u6570\uff0c\u5176\u4e2d \\(k\\) \u662f\u4e00\u4e2a\u7ed9\u5b9a\u7684\u503c\u3002</p>"},{"location":"UsualQ/IntPartition/IntPartition/#_4","title":"\u601d\u8def","text":"<p>\u6709\u4e00\u4e2a\u989d\u5916\u7684\u6570 \\(k\\) \uff0c\u5c31\u5f88\u4e0d\u597d\u5904\u7406\uff0c\u60f3\u8981\u5229\u7528\u4e0a\u9762\u7684\u7ed3\u8bba\u5c31\u8981\u60f3\u529e\u6cd5\u5c06 \\(k\\) \u6d88\u6389\u3002</p> <p>\u6211\u4eec\u628a\u6bcf\u4e2a\u6570\u90fd\u53d8\u5316\u4e00\u4e0b\uff0c\u4ee4 \\(a_i'+k=a_i\\)\uff0c\u62c6\u7684\u4e24\u4e2a\u6570\u4e5f\u53d8\u5316\u4e00\u4e0b\uff0c\\(x'+k=x\uff0cy'+k=y\\)\u3002\u8fd9\u6837\u5de6\u53f3\u90fd\u6709\u4e24\u4e2a \\(k\\) \uff0c\u5c31\u53ef\u4ee5\u6d88\u6389\u4e86\uff0c\u5f97\u5230\u4e0b\u5f0f\uff1a</p> \\[ x'+y'=a_i' \\] <p>\u8fd9\u6837\u64cd\u4f5c\u4e0d\u5c31\u53d8\u6210\u548c\u4e0a\u9762\u76f8\u540c\u4e86\uff0c\u6211\u4eec\u5c06\u6574\u4e2a\u6570\u7ec4\u7684\u6240\u6709 \\(a_i\\) \u53d8\u4e3a \\(a_i'\\) \uff0c\u518d\u6240\u6709 \\(a_i'\\) \u7684 \\(gcd\\) \u5373\u53ef\u3002</p> <p>\u5224\u65ad\u4e0d\u53ef\u80fd\u7684\u60c5\u51b5\uff1a</p> <p>\u5982\u679c \\(a_i'\\) \u6709\u6b63\u6709\u8d1f\uff0c\u90a3\u4e48\u5b83\u4e00\u5b9a\u662f\u62c6\u4e0d\u6210\u76f8\u540c\u7684\uff0c\u6bd4\u5982\u4e00\u4e2a\u6574\u6570\u65e0\u8bba\u5982\u4f55\u90fd\u4e0d\u53ef\u80fd\u62c6\u6210\u4e24\u4e2a\u8d1f\u6570\u76f8\u52a0\uff0c\u8d1f\u6570\u540c\u7406\u3002</p> <p>\u6216\u8005 \\(a_i'\\) \u4e2d\u6709 \\(0\\) \u4f46\u4e0d\u662f\u5168\u4e3a \\(0\\) \u4e5f\u662f\u4e0d\u884c\u7684\u3002</p> <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nusing ll = long long;\nvoid solve();\n\nint main()\n{\n    ios::sync_with_stdio(false);\n    cin.tie(0), cout.tie(0);\n    int T;\n    for (cin &gt;&gt; T; T--;)\n        solve();\n    return 0;\n}\n\nvoid solve()\n{\n    ll n,k;\n    cin &gt;&gt; n &gt;&gt; k;\n    vector&lt;ll&gt; a(n + 1);\n    bool isp = 0,isn = 0,isz = 0;\n    for(int i = 1;i &lt;= n;++i)\n    {\n        cin &gt;&gt; a[i],a[i] = a[i] - k;\n        if(a[i] &lt; 0)isn = 1;\n        if(a[i] &gt; 0)isp = 1;\n        if(a[i] == 0)isz = 1;\n    }\n    if((!isp) &amp;&amp; (!isn)) cout &lt;&lt; \"0\\n\";\n    else if(isz || (isp &amp;&amp; isn)) cout &lt;&lt; \"-1\\n\";\n    else\n    {\n        ll x = 0;\n        ll ans = 0;\n        for(int i = 1;i &lt;= n;++i)\n            x = __gcd(x,abs(a[i]));\n        for(int i = 1;i &lt;= n;++i)\n            ans += abs(a[i]) / x - 1;\n        cout &lt;&lt; ans &lt;&lt; '\\n';\n    }\n}\n</code></pre>"},{"location":"UsualQ/MaxSumOfSub/MaxSumOfSub/","title":"\u533a\u95f4\u6700\u5927\u5b50\u6bb5\u548c","text":"<p>\u524d\u7f6e\u77e5\u8bc6\uff1a\u7ebf\u6bb5\u6811: \u719f\u6089\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u548c\u64cd\u4f5c</p>"},{"location":"UsualQ/MaxSumOfSub/MaxSumOfSub/#_1","title":"\u95ee\u9898","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4 \\(a=[a_1,a_2,\\dots,a_n]\\) \uff0c\u9009\u51fa\u5176\u4e2d\u7684\u4e00\u6bb5\u8fde\u7eed\u7684\u975e\u7a7a\u5b50\u6570\u7ec4\uff0c\u4f7f\u5176\u548c\u6700\u5927\u3002</p> <p>\u9898\u76ee\u8fde\u63a5\uff1a</p> <p>\u6d1b\u8c37 </p> <p>LeetCode</p>"},{"location":"UsualQ/MaxSumOfSub/MaxSumOfSub/#_2","title":"\u601d\u8def","text":""},{"location":"UsualQ/MaxSumOfSub/MaxSumOfSub/#_3","title":"\u8d2a\u5fc3","text":"<p>\u8d2a\u5fc3\u601d\u8def\u5f88\u5bb9\u6613\u7406\u89e3\uff0c\u6211\u4eec\u4ece\u7b2c\u4e00\u4e2a\u5143\u7d20\u5f00\u59cb\uff0c\u4f9d\u6b21\u7d2f\u52a0\uff0c\u8bb0\u7d2f\u52a0\u503c\u4e3a \\(sum\\) \uff0c\u5982\u679c\u7d2f\u52a0\u5230\u4e00\u4e2a\u5143\u7d20\u65f6 \\(sum &lt; 0\\) \u4e86\uff0c\u90a3\u4e48\u5f53\u524d\u7684\u5b50\u6570\u7ec4\u5bf9\u540e\u7eed\u5b50\u6570\u7ec4\u7684\u8d21\u732e\u662f\u8d1f\u7684\uff0c\u90a3\u6211\u4eec\u4f55\u4e0d\u820d\u5f03\u6389\u524d\u9762\u8fd9\u6bb5\u5b50\u6570\u7ec4\uff0c\u91cd\u65b0\u5f00\u59cb\u4e00\u6bb5\u5b50\u6570\u7ec4\uff0c\u8fd9\u6837\u81f3\u5c11\u4e0d\u4f1a\u62d6\u7d2f\u540e\u9762\u7684\u5143\u7d20\u3002</p> <p>\u5982\u6b64\u91cd\u590d\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u6bcf\u5f53 \\(sum &lt; 0\\) \u5c31\u66f4\u65b0 \\(sum = 0\\)\uff0c\u5e76\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u8bb0\u5f55\u6700\u5927\u503c\u5373\u53ef\u3002</p> <p><pre><code>class Solution {\npublic:\n    int maxSubArray(vector&lt;int&gt;&amp; nums) {\n        int res = INT_MIN;\n        int sum = 0;\n        for(int i = 0;i &lt; nums.size();i++)\n        {\n            if(sum &lt; 0)\n                sum = 0;\n            sum += nums[i];\n            if(res &lt; sum)\n                res = sum;\n        }\n        return res;\n    }\n};\n</code></pre> \u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(n)\\)</p>"},{"location":"UsualQ/MaxSumOfSub/MaxSumOfSub/#_4","title":"\u5206\u6cbb","text":"<p>\u6211\u4eec\u5c06\u6bcf\u4e2a\u533a\u95f4\u5212\u5206\u4e3a\u5de6\u53f3\u4e24\u6bb5\uff0c\u4ee5 \\(m =\\left \\lfloor \\frac{l+r}{2} \\right \\rfloor\\) \u4e3a\u754c\uff0c\u5206\u4e3a \\([l,m],[m + 1,r]\\) \u4e24\u6bb5\u3002</p> <p>\u90a3\u4e48\u6211\u5f53\u524d\u8fd9\u4e2a\u5927\u533a\u95f4\u7684\u6700\u5927\u5b50\u6bb5\u548c\u53ef\u80fd\u503c\u5c31\u662f\uff1a</p> <ul> <li>\u5de6\u533a\u95f4\u7684\u6700\u5927\u5b57\u6bb5\u548c</li> <li>\u53f3\u533a\u95f4\u7684\u6700\u5927\u5b57\u6bb5\u548c</li> <li>\u6a2a\u8de8\u4e24\u4e2a\u533a\u95f4\u7684\u6700\u5927\u5b50\u6bb5\u548c</li> </ul> <p>\u6211\u53ef\u4ee5\u60f3\u60f3\u8fd9\u4e09\u4e2a\u503c\u53ef\u4ee5\u5982\u4f55\u901a\u8fc7\u5b50\u533a\u95f4\u5f97\u5230\u3002\u5bf9\u4e8e\u5de6\u53f3\u533a\u95f4\u7684\u6700\u5927\u5b50\u6bb5\u548c\uff0c\u6211\u4eec\u8981\u7ef4\u62a4\u7684\u5c31\u662f\u533a\u95f4\u6700\u5927\u5b50\u6bb5\u548c\uff0c\u8fd9\u4e0d\u5c31\u662f\u5c0f\u533a\u95f4\u7684\u7b54\u6848\u5417\uff0c\u5728\u9012\u5f52\u5408\u5e76\u7b54\u6848\u65f6\u5c06\u5b50\u533a\u95f4\u7684\u7b54\u6848\u8fd4\u56de\u5373\u53ef\u3002</p> <p>\u5bf9\u4e8e\u6a2a\u8de8\u4e24\u4e2a\u533a\u95f4\u7684\u6700\u5927\u5b50\u6bb5\u548c\uff0c\u6709\u4ec0\u4e48\u6027\u8d28\u5462\uff1f</p> <p>\u5b83\u4e00\u5b9a\u662f\u7531\u5de6\u533a\u95f4\u7684\u5305\u542b\u53f3\u7aef\u70b9\u7684\u6700\u5927\u5b50\u6bb5\u548c\u52a0\u4e0a\u53f3\u533a\u95f4\u7684\u5305\u542b\u5de6\u7aef\u70b9\u7684\u6700\u5927\u5b50\u6bb5\u548c\u3002</p> <p>\u90a3\u4e48\u6211\u4eec\u5728\u9012\u5f52\u6c42\u89e3\u5b50\u95ee\u9898\u7684\u8fc7\u7a0b\u4e2d\u5c31\u8981\u540c\u65f6\u7ef4\u62a4\u4e00\u4e2a\u533a\u95f4\u5305\u542b\u5de6\u7aef\u70b9\u7684\u6700\u5927\u5b50\u6bb5\u548c \\(ls\\) \u548c\u5305\u542b\u53f3\u7aef\u70b9\u7684\u6700\u5927\u5b50\u6bb5\u548c \\(rs\\)\u3002</p> <p>\u5728\u7ef4\u62a4 \\(ls\\) \u65f6\uff0c\u5927\u533a\u95f4\u7684 \\(ls\\) \u6709\u4e24\u79cd\u60c5\u51b5\uff0c\u8981\u4e48\u5c31\u662f\u5de6\u533a\u95f4\u7684 \\(ls\\) \uff0c\u8981\u4e48\u662f\u5de6\u533a\u95f4\u6574\u4f53 + \u53f3\u533a\u95f4\u7684 \\(ls\\)\uff0c\u4e8c\u8005\u53d6\u5927\u5373\u53ef\u3002 \\(rs\\) \u540c\u7406\u3002\u6240\u4ee5\u6211\u4eec\u8981\u989d\u5916\u7ef4\u62a4\u4e00\u4e2a\u533a\u95f4\u548c \\(sum\\) \uff0c\u7528\u6765\u7ef4\u62a4 \\(lr\\) \u548c \\(rs\\)\u3002</p> <p>\u6240\u4ee5\u8981\u7ef4\u62a4\u5c31\u662f\u4e0b\u9762\u56db\u4e2a\u53d8\u91cf\uff1a</p> <ul> <li>\u5305\u542b\u5de6\u7aef\u70b9\u7684\u6700\u5927\u5b50\u6bb5\u548c \\(ls\\)</li> <li>\u5305\u542b\u53f3\u7aef\u70b9\u7684\u6700\u5927\u5b50\u6bb5\u548c \\(rs\\)</li> <li>\u533a\u95f4\u6700\u5927\u5b50\u6bb5\u548c \\(ms\\)</li> <li>\u533a\u95f4\u548c \\(sum\\)</li> </ul> <p>\u8fd9\u6837\u8ba1\u7b97\u4e00\u4e2a\u533a\u95f4\u7684\u6700\u5927\u5b50\u6bb5\u548c\uff0c\u5c31\u662f\u5728\u4e0a\u9762\u6240\u8bf4\u7684\u4e09\u79cd\u60c5\u51b5\u4e2d\u53d6\u6700\u5927\u5373\u53ef\uff1a</p> \\[ ms = \\max{}(r.ms\\space ,l.ms\\space ,r.ls + l.rs) \\] <p><pre><code>class Solution {\npublic:\n    int maxSubArray(vector&lt;int&gt;&amp; nums) {\n        function&lt;tuple&lt;int,int,int,int&gt;(int,int)&gt; dfs = [&amp;](int l,int r)\n        {\n            // \u5230\u53f6\u5b50\u8282\u70b9\u5c31\u76f4\u63a5\u8fd4\u56de\n            if(l == r)\n                return make_tuple(nums[l],nums[l],nums[l],nums[l]);\n\n            int m = (l + r) &gt;&gt; 1;\n            // \u5de6\u5b50\u533a\u95f4\n            auto [l_ms,l_ls,l_rs,l_sum] = dfs(l,m);\n            // \u53f3\u5b50\u533a\u95f4\n            auto [r_ms,r_ls,r_rs,r_sum] = dfs(m + 1,r);\n\n            // \u8ba1\u7b97\u5f53\u524d\u533a\u95f4\u7684ms \uff0cls ,rs , sum\n            int ms = max(max(l_ms,r_ms),l_rs + r_ls);\n            int ls = max(l_ls,l_sum + r_ls);\n            int rs = max(r_rs,r_sum + l_rs);\n            int sum = l_sum + r_sum;\n            return make_tuple(ms,ls,rs,sum);\n        };\n        auto [ms,ls,rs,sum] = dfs(0,nums.size() - 1);\n        return ms;\n    }\n};\n</code></pre> \u8fd9\u91cc\u5206\u6cbb\u9012\u5f52\u7684\u8fc7\u7a0b\u76f8\u5f53\u4e8e\u904d\u5386\u4e00\u68f5 \u9ad8\u5ea6\u4e3a \\(\\log{n}\\) \u7684\u6ee1\u4e8c\u53c9\u6811\uff0c\u8282\u70b9\u4e2a\u6570\u4e3a \\(\\sum_{i=1}^{\\log{n}}2^{i - 1}\\) \uff0c\u7b97\u51fa\u6700\u591a\u662f \\(n-1\\) \u4e2a\u8282\u70b9\uff0c\u6240\u4ee5\u6700\u540e\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f \\(O(n)\\)\u3002</p> <p>\u719f\u6089\u7ebf\u6bb5\u6811\u7684\u540c\u5b66\uff0c\u8fd9\u91cc\u5e94\u8be5\u5c31\u5df2\u7ecf\u770b\u51fa\u6765\u4e86\uff0c\u8fd9\u4e2a \\(dfs\\) \u51fd\u6570\u548c\u7ebf\u6bb5\u6811\u5efa\u6811\u7684\u8fc7\u7a0b\u7c7b\u4f3c\u3002</p>"},{"location":"UsualQ/MaxSumOfSub/MaxSumOfSub/#_5","title":"\u95ee\u9898\u53d8\u5f62","text":"<p>\u9898\u76ee\u8fde\u63a5\uff1aGSS1</p> <p>\u7ed9\u5b9a\u957f\u5ea6\u4e3a \\(n\\) \u7684\u5e8f\u5217 \\(a_1, a_2,\\cdots,a_n\\)\u3002\u73b0\u5728\u6709 \\(m\\) \u6b21\u8be2\u95ee\u64cd\u4f5c\uff0c\u6bcf\u6b21\u7ed9\u5b9a \\(l_i,r_i\\)\uff0c\u67e5\u8be2 \\([l_i,r_i]\\) \u533a\u95f4\u5185\u7684\u6700\u5927\u5b50\u6bb5\u548c\u3002</p>"},{"location":"UsualQ/MaxSumOfSub/MaxSumOfSub/#_6","title":"\u7ebf\u6bb5\u6811","text":"<p>\u4e0a\u9762\u5206\u6cbb\u7684\u601d\u8def\u5176\u5b9e\u5c31\u662f\u7ebf\u6bb5\u6811\u5efa\u6811\u7684\u8fc7\u7a0b\uff0c\u56e0\u4e3a\u4e0a\u9762\u95ee\u9898\u6ca1\u6709\u4fee\u6539\uff0c\u4e5f\u4e0d\u4f1a\u67e5\u8be2\u6570\u7ec4\u5b50\u533a\u95f4\u7684\u6700\u5927\u5b50\u6bb5\u548c\uff0c\u6240\u4ee5\u5efa\u5b8c\u6811\u76f4\u63a5\u8fd4\u56de\u6839\u8282\u70b9(\u6574\u4e2a\u533a\u95f4)\u8bb0\u5f55\u7684\u7b54\u6848\u5373\u53ef\u3002</p> <p>\u8fd9\u91cc\u67e5\u8be2\u5b50\u6570\u7ec4\u6700\u5927\u5b50\u6bb5\u548c\u5176\u5b9e\u4e5f\u662f\u4e00\u4e2a\u533a\u95f4\u5408\u5e76\u7684\u8fc7\u7a0b\uff0c\u5c31\u662f\u5c06\u7ebf\u6bb5\u6811\u4e0a\u6240\u6709\u5728\u67e5\u8be2\u533a\u95f4\u7684\u8282\u70b9\u5408\u5e76\u5230\u6700\u7ec8\u7b54\u6848\u4e2d\u3002\u5bf9\u8282\u70b9\u91cd\u8f7d \\(+\\) \u8fd0\u7b97\uff0c\u6765\u5b9e\u73b0\u533a\u95f4\u548c\u5e76\uff0c\u4f1a\u65b9\u4fbf\u5f88\u591a\u3002\u533a\u95f4\u5408\u5e76\u65f6\u5bf9\u6570\u636e\u7ef4\u62a4\u7684\u65b9\u6cd5\u540c\u4e0a\u6587\u7684\u5206\u6cbb\u6cd5\u3002\u5b8c\u6574\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nusing ll = long long;\nconstexpr int MAX = 2e6 + 100;\nvoid solve();\nint main()\n{\n    ios::sync_with_stdio(false);\n    cin.tie(0), cout.tie(0);\n    solve();\n    return 0;\n}\n\nstruct S\n{\n    int l, r;       // \u533a\u95f4\u5de6\u53f3\u7aef\u70b9\n    ll sum;         // \u533a\u95f4\u548c\n    ll ls;          // \u5305\u542b\u5de6\u7aef\u70b9\u7684\u6700\u5927\u5b50\u6bb5\u548c\n    ll rs;          // \u5305\u542b\u53f3\u7aef\u70b9\u7684\u6700\u5927\u5b50\u6bb5\u548c\n    ll ms;          // \u533a\u95f4\u6700\u5927\u5b50\u6bb5\u548c\n} f[MAX &lt;&lt; 2];\n// \u91cd\u8f7d+ \u5b9e\u73b0\u533a\u95f4\u5408\u5e76\n// a \u8868\u793a\u5de6\u533a\u95f4\uff0cb\u8868\u793a\u53f3\u533a\u95f4\uff0c\u540e\u9762\u4f7f\u7528\u65f6\u4e5f\u8981\u4fdd\u8bc1\u8fd9\u4e2a\u987a\u5e8f\nS operator+(const S&amp; a,const S&amp; b)\n{\n    S res;\n    res.sum = a.sum + b.sum;\n    res.ls = max(a.ls,a.sum + b.ls);\n    res.rs = max(b.rs,b.sum + a.rs);\n    res.ms = max(a.rs + b.ls,max(a.ms,b.ms));\n    // \u7ef4\u62a4\u533a\u95f4\u5de6\u53f3\u7aef\u70b9\n    res.l = a.l;\n    res.r = b.r;\n    return res;\n}\n\n// \u6c42\u5de6\u53f3\u5b50\u8282\u70b9\u7684\u51fd\u6570\u548c\u533a\u95f4\u6298\u534a\u7684\u51fd\u6570\ninline int ls(int k) { return k &lt;&lt; 1; }\ninline int rs(int k) { return k &lt;&lt; 1 | 1; }\ninline int md(int l, int r) { return (l + r) &gt;&gt; 1; }\nint n, m;\n\n// \u5408\u5e76\u533a\u95f4\nvoid push_up(int k)\n{\n    f[k] = f[ls(k)] + f[rs(k)];\n}\n\n// \u5efa\u6811\nvoid build(int k, int l, int r)\n{\n    f[k].l = l, f[k].r = r; \n    if (l == r)\n    {\n        // \u8f93\u5165\u6570\u636e\n        cin &gt;&gt; f[k].sum;\n        f[k].ls = f[k].rs = f[k].ms = f[k].sum;\n        return;\n    }\n    int m = md(l, r); \n    build(ls(k), l, m);\n    build(rs(k), m + 1, r);\n    push_up(k);\n}\n\n// \u67e5\u8be2\nS ask(int k, int l, int r)\n{\n    if (l &lt;= f[k].l &amp;&amp; r &gt;= f[k].r)\n        return f[k];\n    int m = md(f[k].l, f[k].r);\n    S res;\n    if (r &lt;= m)res = ask(ls(k), l, r);\n    else if (l &gt; m)res = ask(rs(k), l, r);\n    else res = ask(ls(k), l, m) + ask(rs(k), m + 1, r);\n    return res;\n}\n\nvoid solve()\n{\n    cin &gt;&gt; n;\n    build(1,1,n);\n    cin &gt;&gt; m;\n    while(m--)\n    {\n        int l,r;\n        cin &gt;&gt; l &gt;&gt; r;\n        cout &lt;&lt; ask(1,l,r).ms &lt;&lt; '\\n';\n    }\n}\n</code></pre>"},{"location":"UsualQ/MaxSumOfSub/MaxSumOfSub/#_7","title":"\u4e60\u9898","text":"\u9898\u76ee \u96be\u5ea6 \u77e5\u8bc6 CF 1906 F 2100 \u5e26\u4fee\u6539\u7684\u6700\u5927\u533a\u95f4\u5b50\u6bb5\u548c GSS1 \u63d0\u9ad8+/\u7701\u9009\u2212 \u533a\u95f4\u6700\u5927\u5b50\u6bb5\u548c\u6a21\u677f <p>\u53c2\u8003\u6587\u7ae0\uff1a</p> <p>\u7ebf\u6bb5\u6811\u4e0e\u533a\u95f4\u6700\u5927\u5b50\u6bb5\u548c\u95ee\u9898</p>"},{"location":"UsualQ/SummerTraining/SumTraining/","title":"\u6691\u671f\u96c6\u8bad","text":""},{"location":"UsualQ/SummerTraining/SumTraining/#_1","title":"\u65f6\u95f4\u590d\u6742\u5ea6\u5206\u6790","text":"<ul> <li> <p>\u57fa\u7840\u590d\u6742\u5ea6\u5206\u6790</p> </li> <li> <p>\u5747\u644a\u590d\u6742\u5ea6</p> </li> <li> <p>\u52bf\u80fd\u5206\u6790</p> </li> </ul>"},{"location":"UsualQ/SummerTraining/SumTraining/#_2","title":"\u7ebf\u6bb5\u6811","text":"<ul> <li> <p>\u533a\u95f4\u548c</p> </li> <li> <p>\u52a8\u6001\u5f00\u70b9</p> </li> </ul>"},{"location":"UsualQ/SummerTraining/SumTraining/#_3","title":"\u5e73\u8861\u6811","text":"<ul> <li> <p>Treap*</p> </li> <li> <p>Splay</p> </li> <li> <p>\u7b1b\u5361\u5c14\u6811*</p> </li> </ul>"},{"location":"UsualQ/SummerTraining/SumTraining/#_4","title":"\u5206\u5757/\u83ab\u961f","text":""},{"location":"UsualQ/SummerTraining/SumTraining/#_5","title":"\u6811","text":"<ul> <li> <p>\u6811\u57fa\u7840</p> </li> <li> <p>\u6811\u94fe\u5256\u5206*</p> </li> </ul>"},{"location":"UsualQ/SummerTraining/SumTraining/#_6","title":"\u6691\u671f\u96c6\u8bad","text":""},{"location":"UsualQ/SummerTraining/SumTraining/#_7","title":"\u53ef\u6301\u4e45\u5316\u6570\u636e\u7ed3\u6784","text":""}]}